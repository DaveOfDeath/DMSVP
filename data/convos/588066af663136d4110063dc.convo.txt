idRef {
  id: "588066af663136d4110063dc"
}
ui_name: "c12-s1_MercyMental_MatrixTerminal"
nodes {
  idRef {
    id: "588066c4663136d4110063e4"
  }
  index: 0
  text: "Password attempts exceeded. \n\nThis Terminal will be locked for the next [27] hours."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "588066af663136d4110063dc:5880670b663136d4110063e6"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "21df525d6233319c1f0018c5"
  }
}
nodes {
  idRef {
    id: "5880670b663136d4110063e9"
  }
  index: 1
  text: ""
  branches {
    responseText: "{{CC}}DECKING{{/CC}} Access the Matrix Terrminal"
    conditions {
      ops {
        functionName: "Evaluate If Actor Is Decker"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "c12-s1_MercyMental_GuardKey"
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Force-Use Interactable Object (with Actor)"
        args {
          call_value {
            functionName: "Get Map Item (InteractableObject)"
            args {
              string_value: "58806839663136d4110063fc"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    hideIfUnavailable: true
    idRef {
      id: "588066af663136d4110063dc:58806711663136d4110063eb"
    }
  }
  branches {
    responseText: "{{CC}}VIOLET{{/CC}} Hey Violet... Think you can crack into this?"
    conditions {
      ops {
        functionName: "Evaluate Tag for Actor"
        args {
          call_value {
            functionName: "All Actors on Team"
            args {
              call_value {
                functionName: "Get Preset Value (string)"
                args {
                  string_value: "FactionList"
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Map Item (SceneDimension)"
                args {
                  string_value: "Default"
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Tag From String"
            args {
              string_value: "isViolet"
            }
          }
        }
      }
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "c12-s1_MercyMental_GuardKey"
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Force-Use Interactable Object (with Actor)"
        args {
          call_value {
            functionName: "Get Map Item (InteractableObject)"
            args {
              string_value: "58806839663136d4110063fc"
            }
          }
        }
        args {
          call_value {
            functionName: "Nearest Tagged Actor to Actor"
            args {
              call_value {
                functionName: "Tag From String"
                args {
                  string_value: "isViolet"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    hideIfUnavailable: true
    idRef {
      id: "588066af663136d4110063dc:58806711663136d4110063ed"
    }
  }
  branches {
    responseText: "{{CC}}Leave it alone.{{/CC}}"
    nextNodeIndex: -1
    idRef {
      id: "588066af663136d4110063dc:58806711663136d4110063ef"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "21df525d6233319c1f0018c5"
  }
}
roots {
  nextNodeIndex: 0
  idRef {
    id: "588066af663136d4110063dc:588066af663136d4110063e0"
  }
}
