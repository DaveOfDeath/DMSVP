idRef {
  id: "51d1d5d26233311811007a5d"
}
ui_name: "c15-s1_Seamstress_VanGraasFence"
nodes {
  idRef {
    id: "51d1d5e56233311811007a63"
  }
  index: 0
  text: "Hello, stranger. I\'m busy right now, so I hope you\'ve got something that\'s worth my time."
  branches {
    responseText: "How about a list of every politician the Universal Brotherhood has bribed to date?"
    nextNodeIndex: 1
  }
  branches {
    responseText: "Nothing important. See you around."
    nextNodeIndex: 6
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51d1d65c6233311811007a69"
  }
  index: 1
  text: "I could certainly find someone interested in that information. Will take some legwork to verify the veracity of such a list... how about 2,000?"
  branches {
    responseText: ""
    nextNodeIndex: 2
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "hasSeenFenceOffer"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "51d1d6616233311811007a6c"
  }
  index: 2
  text: ""
  branches {
    responseText: "Deal."
    nextNodeIndex: 3
  }
  branches {
    responseText: "{{CC}}Etiquette: Socialite{{/CC}} Brackhaven\'s not on the list. We both know how much he\'d pay."
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 16
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    nextNodeIndex: 4
  }
  branches {
    responseText: "{{CC}}Etiquette: Shadowrunner{{/CC}} This info is about to be worth a lot more in the next few days."
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 17
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    nextNodeIndex: 5
  }
  branches {
    responseText: "I\'ll think about it."
    nextNodeIndex: -1
  }
}
nodes {
  idRef {
    id: "51d1d96b6233311811007a85"
  }
  index: 3
  text: "Good. I\'ve got other business to attend to. Here\'s your money."
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Add Nuyen"
      args {
        int_value: 2000
      }
    }
    ops {
      functionName: "Remove Item from Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "c21-s2_Bribes"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "51d1d8326233311811007a77"
  }
  index: 4
  text: "Good senses, chummer. Alright, I\'ll give you 3,000."
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Add Nuyen"
      args {
        int_value: 3000
      }
    }
    ops {
      functionName: "Remove Item from Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "c21-s2_Bribes"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "51d1d7dc6233311811007a75"
  }
  index: 5
  text: "And what, I\'m supposed to take your word for it?\n\n{{GM}}He makes eye contact. Hesitates.{{/GM}}\n\nFine, I\'ll speculate. But only because I can find you if this doesn\'t pan out. 2,500. No more."
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Remove Item from Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "c21-s2_Bribes"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Add Nuyen"
      args {
        int_value: 2500
      }
    }
  }
}
nodes {
  idRef {
    id: "51d1d6556233311811007a67"
  }
  index: 6
  text: "Uh huh. You know where to find me."
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51d1d78c6233311811007a72"
  }
  index: 7
  text: "You make up your mind? My offer of 2,000 stands."
  branches {
    responseText: ""
    nextNodeIndex: 2
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "hasSeenFenceOffer"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  nextNodeIndex: 0
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "hasSeenFenceOffer"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  nextNodeIndex: 7
}
