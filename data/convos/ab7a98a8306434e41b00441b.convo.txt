idRef {
  id: "ab7a98a8306434e41b00441b"
}
ui_name: "c21-s1_Brotherhood_AcolyteConversationsHub"
nodes {
  idRef {
    id: "ab7aea3b306434e41b004421"
  }
  index: 0
  text: "{{GM}}The young lady turns back to you and smiles.{{/GM}}\n\nI\'m sorry about that. How can I help you today? \n\n"
  branches {
    responseText: ""
    nextNodeIndex: 4
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Acolyte02"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Acolyte01"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "ab7ba39d306434e41b004425"
  }
  index: 1
  text: "Hello again. Is there something more I can help you with?"
  branches {
    responseText: ""
    nextNodeIndex: 4
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Acolyte03"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Acolyte02"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "ab7bc67c306434e41b004427"
  }
  index: 2
  text: "Hello again. I don\'t think I have much more to say, you might want to visit our Counseling Center or the Cafeteria."
  branches {
    responseText: ""
    nextNodeIndex: 3
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "ab7e4140306434e41b004445"
  }
  index: 3
  text: "What can I help you with today!"
  branches {
    responseText: ""
    nextNodeIndex: 4
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51b2348163363580170019b3"
  }
  index: 4
  text: ""
  branches {
    responseText: "What is the Universal Brotherhood?"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "ImAUBMember"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "ImAJanitor"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 5
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "51c23717633635881d003a59"
    }
  }
  branches {
    responseText: "Is Jessica Watts here?"
    nextNodeIndex: 6
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "51d38ba4623665ec1f00021f"
    }
  }
  branches {
    responseText: "Is Lynne Telestrian here?"
    nextNodeIndex: 7
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "51ba03a5633635d82e0015f2"
    }
  }
  branches {
    responseText: "Why is Jessica Watts called Grandmother Jessica?"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "AcoHub05"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "ImAUBMember"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 8
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "51ba1d6b633635d82e001773"
    }
  }
  branches {
    responseText: "Can I have a blank keycard?"
    nextNodeIndex: 9
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "51bb686c633635bc1e0015b9"
    }
  }
  branches {
    responseText: "Did you know that there is a Maria Mercurial concert going on right outside?"
    conditions {
      ops {
        functionName: "OR"
        args {
          call_value {
            functionName: "Comparison (bool)"
            args {
              call_value {
                functionName: "Get Variable (bool)"
                args {
                  string_value: "Acolyte03"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "IsOrIsNot"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "bool"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Comparison (bool)"
            args {
              call_value {
                functionName: "Get Variable (bool)"
                args {
                  string_value: "AcoHub02"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "IsOrIsNot"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "bool"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
      }
    }
    nextNodeIndex: 10
    hideIfUnavailable: true
  }
  branches {
    responseText: "I have a ruined keycard."
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "c21-s1 Melted blank UB ID card"
            }
          }
        }
      }
    }
    nextNodeIndex: 13
    hideIfUnavailable: true
  }
  branches {
    responseText: "I\342\200\231m done asking questions."
    nextNodeIndex: 14
  }
  nodeType: ConversationNodeType_GM_Voice
}
nodes {
  idRef {
    id: "51b2348163363580170019b6"
  }
  index: 5
  text: "The Universal Brotherhood is a community that welcomes all forms of meta-humanity with the mission of making the world a better place by helping individuals to become so much more than they currently are. This is our Seattle Chapter. There are more popping up every day!"
  branches {
    responseText: ""
    nextNodeIndex: 4
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51b2348163363580170019c2"
  }
  index: 6
  text: "I\'m sorry, I don\'t know. I only see Grandmother Jessica at special ceremonies and even then, only at a distance. You might ask Mother Lynne - Lynne Telestrian - if you can catch her in the Auditorium. "
  branches {
    responseText: ""
    nextNodeIndex: 4
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "AcoHub05"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "51b2348163363580170019c8"
  }
  index: 7
  text: "I believe so! I think she arrived at the end of Father Willy\'s talk, so you might still find her in the auditorium."
  branches {
    responseText: ""
    nextNodeIndex: 4
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51b2348163363580170019d4"
  }
  index: 8
  text: "At the Universal Brotherhood, we learn that the world is all one family. When you choose the path of Belonging, you become one of our brothers or sisters. \n\nWe are led by our Fathers and Mothers, who are in turn led by Grandmother Jessica, the Seattle family\'s Matriarch."
  branches {
    responseText: ""
    nextNodeIndex: 4
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51b2348163363580170019da"
  }
  index: 9
  text: "{{GM}}She looks at you, perplexed.{{/GM}}\n\nI don\'t know why you would need one. They are only used by to replace the cards of Brothers and Sisters who have damaged theirs. "
  branches {
    responseText: ""
    nextNodeIndex: 4
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "AcoHub02"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "51b2348163363580170019e0"
  }
  index: 10
  text: "{{GM}}Her eyes light up.{{/GM}}\n\nI know \342\200\223 isn\342\200\231t it exciting! I am such a big fan of hers. The first time I heard, \"Who Weeps for the Children?\" I melted inside."
  branches {
    responseText: "Don\342\200\231t tell anyone, but she\'s signing autographs outside right now."
    nextNodeIndex: 11
    onlyOnce: true
    idRef {
      id: "51d1e6bc6236651c12003fd3"
    }
  }
  branches {
    responseText: "I heard that she\342\200\231s a Universal Brotherhood member."
    nextNodeIndex: 12
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51ba08c1633635d82e001635"
  }
  index: 11
  text: "{{GM}}She chews her lip, torn, then makes a decision.{{/GM}}\n\nI know the Elders will frown on this, but I\342\200\231ve just *got* to get her autograph. I mean, it\'s Maria Mercurial!"
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "AcoHub10"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "51aa4e6a633635001b0077e9"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "51ba1586633635d82e00167d"
  }
  index: 12
  text: "{{GM}}She swoons.{{/GM}}\n\nI didn\342\200\231t know that! Oh my! But it doesn\342\200\231t surprise me at all! She\'s so deep and soulful. And there are lots of media stars who are joining the Brotherhood these days. We\'re everywhere!"
  branches {
    responseText: ""
    nextNodeIndex: 4
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51c23915633635881d003a5c"
  }
  index: 13
  text: "I am out of keycards, but if you show that to Brother Christopher he can let you into the office to make a new keycard."
  branches {
    responseText: ""
    nextNodeIndex: 4
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51d1eb876236651c1200414e"
  }
  index: 14
  text: "Truth makes us one."
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51b0c1e76336359408001768"
  }
  index: 15
  text: "Thanks for telling me about Maria Mercurial, but there were sooo many people I couldn\'t even get close to her."
  branches {
    responseText: ""
    nextNodeIndex: 4
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Acolyte01"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  nextNodeIndex: 0
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Acolyte02"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  nextNodeIndex: 1
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Acolyte03"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  nextNodeIndex: 2
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "AcoHub10"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  nextNodeIndex: 15
}
