idRef {
  id: "5951e57d343831f416005e7a"
}
ui_name: "c14-s2_DeckerJackIn"
nodes {
  idRef {
    id: "5951e58b343831f416005e82"
  }
  index: 0
  text: "The CEO\'s LAN access point awaits..."
  branches {
    responseText: "{{CC}}Jack In{{/CC}} Access it yourself"
    conditions {
      ops {
        functionName: "Evaluate If Actor Is Decker"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Force-Use Interactable Object (with Actor)"
        args {
          call_value {
            functionName: "Get Map Item (InteractableObject)"
            args {
              string_value: "5951e52c343831f416005e77"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    hideIfUnavailable: true
    idRef {
      id: "5951e57d343831f416005e7a:5951e5b5343831f416005e84"
    }
  }
  branches {
    responseText: "{{CC}}Jack In{{/CC}} Have Violet Jack in"
    conditions {
      ops {
        functionName: "Evaluate Tag for Actor"
        args {
          call_value {
            functionName: "All Actors on Team"
            args {
              call_value {
                functionName: "Get Preset Value (string)"
                args {
                  string_value: "FactionList"
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Map Item (SceneDimension)"
                args {
                  string_value: "Default"
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (SenseTagList)"
            args {
              string_value: "isViolet"
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Force-Use Interactable Object (with Actor)"
        args {
          call_value {
            functionName: "Get Map Item (InteractableObject)"
            args {
              string_value: "5951e52c343831f416005e77"
            }
          }
        }
        args {
          call_value {
            functionName: "Nearest Tagged Actor to Actor"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isViolet"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    hideIfUnavailable: true
    idRef {
      id: "5951e57d343831f416005e7a:5951e5b5343831f416005e86"
    }
  }
  branches {
    responseText: "{{CC}}Leave{{/CC}}"
    nextNodeIndex: -1
    idRef {
      id: "5951e57d343831f416005e7a:5951e5b5343831f416005e88"
    }
  }
  nodeType: ConversationNodeType_GM_Voice
}
roots {
  nextNodeIndex: 0
  idRef {
    id: "5951e57d343831f416005e7a:5951e57d343831f416005e7e"
  }
}
