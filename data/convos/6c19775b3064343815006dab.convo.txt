idRef {
  id: "6c19775b3064343815006dab"
}
ui_name: "c03-s1_Barrens_William"
nodes {
  idRef {
    id: "6c19b29f3064343815006db1"
  }
  index: 0
  text: "{{GM}}The streets have not been kind to this man... but they\'ve also hardened him. This man is clearly a survivor, though one wrestling with the onset of age and arthritis.{{/GM}}\n\nYou... I saw you over there with that rat bastard cop. Whad\'ya want?"
  branches {
    responseText: ""
    nextNodeIndex: 1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51b02702396163ac1800437c"
  }
  index: 1
  text: ""
  branches {
    responseText: "I think this coat and these blankets belong to you. {{GM}}Give him the coat and blankets.{{/GM}}"
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "c03-s1_CoatBlankets"
            }
          }
        }
      }
    }
    nextNodeIndex: 2
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "51b640a1623331b01700640a"
    }
  }
  branches {
    responseText: "You look cold and hungry. Want a hot soykaf and jelly filled donut?"
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "c03-s1_SoycafDonut"
            }
          }
        }
      }
    }
    nextNodeIndex: 3
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "51b642b9623331b0170064c2"
    }
  }
  branches {
    responseText: "Know anything about the murder that took place here?"
    nextNodeIndex: 4
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "51b21fdd6233313413004e45"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51b02702396163ac1800437f"
  }
  index: 2
  text: "My stuff! Mighty decent of ya... don\'t see that kinda thing too often out here. "
  branches {
    responseText: ""
    nextNodeIndex: 1
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Remove Item from Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "c03-s1_CoatBlankets"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "51b02702396163ac18004394"
  }
  index: 3
  text: "I\'m homeless, not helpless! Thank\'ye... but no thanks. I remember the old days, the taste of REAL coffee, and let me tell ya - that drek? that\'s NOT real coffee. "
  branches {
    responseText: ""
    nextNodeIndex: 1
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51b02b39396163ac180045b0"
  }
  index: 4
  text: "{{GM}}He squints at you, suspicious.{{/GM}}\n\nYou a copper? Or... working for some corp?"
  branches {
    responseText: "Just a freelancer. I need to ask you some questions."
    nextNodeIndex: 5
  }
  branches {
    responseText: "Nope, I\'m as SINless as you. Mind answering a few questions?"
    nextNodeIndex: 6
  }
  branches {
    responseText: "Yeah, I\'m an undercover corporate agent. You\'d better watch yourself."
    nextNodeIndex: 7
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51b02c58396163ac180046b7"
  }
  index: 5
  text: "Good. I never tell those cops \'n salarymen nuthin\'. What ya want to know?"
  branches {
    responseText: ""
    nextNodeIndex: 8
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51b02c49396163ac180046b5"
  }
  index: 6
  text: "Hey... what makes you think I\'m SINless? \n\nHar! Just messin\' with ya. \'Course I\'m SINless. System I-dee number, my ass. What kinda questions ya got?"
  branches {
    responseText: ""
    nextNodeIndex: 8
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51b02c0e396163ac18004677"
  }
  index: 7
  text: "Har! And I\'m a unicorn. That\'s a good one. How can I help ya?"
  branches {
    responseText: ""
    nextNodeIndex: 8
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51b02c43396163ac18004697"
  }
  index: 8
  text: ""
  branches {
    responseText: "Did you see the murder?"
    actions {
      ops {
        functionName: "Add To Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "countWilliamQuestions"
            }
          }
        }
        args {
          int_value: 1
        }
      }
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "hasAskedWilliamAboutMurder"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 9
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "51e07a586233316816003ce7"
    }
  }
  branches {
    responseText: "So... it sounds like you live in this alley?"
    actions {
      ops {
        functionName: "Add To Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "countWilliamQuestions"
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    nextNodeIndex: 10
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "51b64127623331b017006458"
    }
  }
  branches {
    responseText: "What else did you see that night?"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "hasAskedWilliamAboutMurder"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Add To Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "countWilliamQuestions"
            }
          }
        }
        args {
          int_value: 1
        }
      }
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "hasHeardAboutPitezel"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 11
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "51e07a056233316816003ce6"
    }
  }
  branches {
    responseText: "Can you tell me more about the Troll\'s cyberware?"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "hasHeardAboutPitezel"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Add To Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "countWilliamQuestions"
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    nextNodeIndex: 12
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "51e0795e6233316816003cad"
    }
  }
  branches {
    responseText: "I think this coat and these blankets belong to you. {{GM}}Give him the coat and blankets.{{/GM}}"
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "c03-s1_CoatBlankets"
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Add To Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "countWilliamQuestions"
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    nextNodeIndex: 13
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "51e075c46233316816003b90"
    }
  }
  branches {
    responseText: "That\'s all I needed to know, thanks."
    nextNodeIndex: 14
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "51b6413a623331b01700645b"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "hasMetWilliam"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "51b02c43396163ac1800469e"
  }
  index: 9
  text: "Nope - and I can\'t say I\'m sorry I missed it.\n\nI was hauling crates for Mrs. James up at th\' market. Can\342\200\231t carry as many as I used to... so it took awhile. Got back here in time to see a coupl\'a tourists puking all over my home turf. By then, that jerkface in the uniform had already set up shop in my alley."
  branches {
    responseText: ""
    nextNodeIndex: 8
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51b02c43396163ac1800469a"
  }
  index: 10
  text: "Sure... for the last coupl\'a months I been sleeping there. But I spend my days out doin\' odd jobs for the street merchants, or panhandling tourists over near the Seamstresses Union."
  branches {
    responseText: ""
    nextNodeIndex: 8
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51b02c43396163ac180046a2"
  }
  index: 11
  text: "Hmm. Well... you know, earlier in the night I saw a big \'n ugly troll in green hospital scrubs snoopin\' around the block. He bought some donuts and two cups of soykaf off\'a Dan over there. Seemed nervous, and he did everythin\' with his left hand because his right was all screwed up with some cyberware."
  branches {
    responseText: ""
    nextNodeIndex: 8
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51e076366233316816003bfa"
  }
  index: 12
  text: "Well... it was big, and I think it must\'ve had some hospital attachments because I saw some needles. It was a lot like one I saw back in \'44, when I got captured by elves. They did all sorts of experiments on me, let me tell you. Never trusted one of them cyber-people."
  branches {
    responseText: ""
    nextNodeIndex: 8
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51b640a8623331b017006413"
  }
  index: 13
  text: "My stuff! Mighty decent of ya... don\'t see that kinda thing too often out here. "
  branches {
    responseText: ""
    nextNodeIndex: 8
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Remove Item from Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "c03-s1_CoatBlankets"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "51b02d6d396163ac1800471c"
  }
  index: 14
  text: "See ya around."
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51b640cb623331b017006437"
  }
  index: 15
  text: "Hey there, young\'n."
  branches {
    responseText: ""
    nextNodeIndex: 8
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "hasMetWilliam"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  nextNodeIndex: 0
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "hasMetWilliam"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  nextNodeIndex: 15
}
