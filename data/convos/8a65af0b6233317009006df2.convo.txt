idRef {
  id: "8a65af0b6233317009006df2"
}
ui_name: "c11-s2_Matrix_RecapInvestigation"
nodes {
  idRef {
    id: "8a65db5b6233317009006df8"
  }
  index: 0
  text: "David looks almost as tired as you do. You can tell that this case has gotten under his skin like it has yours. "
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "8a65af0b6233317009006df2:5962a69b346265441c002055"
    }
  }
  nodeType: ConversationNodeType_GM_Speaker_Voice
}
nodes {
  idRef {
    id: "8a66465a6233317009006dfb"
  }
  index: 1
  text: "Any luck in there?"
  branches {
    responseText: ""
    nextNodeIndex: 2
    idRef {
      id: "8a65af0b6233317009006df2:5962a69b346265441c002058"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "8a6695f56233317009006e00"
  }
  index: 2
  text: "We found an exact match for the DNA, but it was linked to a dead chop shop assistant by the name of Silas Forsberg. Now, I have my theories, but what do you think is going on here, $(l.name)?"
  branches {
    responseText: "Silas must have an identical twin brother."
    nextNodeIndex: 3
    idRef {
      id: "8a65af0b6233317009006df2:5962a69b346265441c00205b"
    }
  }
  branches {
    responseText: "Maybe Silas faked his death."
    nextNodeIndex: 4
    idRef {
      id: "8a65af0b6233317009006df2:5962a69b346265441c002061"
    }
  }
  branches {
    responseText: "The DNA evidence doesn\'t belong to the killer."
    nextNodeIndex: 28
    idRef {
      id: "8a65af0b6233317009006df2:5962a69b346265441c0020c6"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "fafbad9c623331341400482c"
  }
}
nodes {
  idRef {
    id: "8a6cf6a66233317009006e15"
  }
  index: 3
  text: "A bit ... out there, as far as theories go. I guess we can\'t rule it out just yet. Did you see anything in the autopsy report that could fill in some more detail?"
  branches {
    responseText: ""
    nextNodeIndex: 5
    idRef {
      id: "8a65af0b6233317009006df2:5962a69b346265441c00205e"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "fafbad9c623331341400482c"
  }
}
nodes {
  idRef {
    id: "8a6cf1026233317009006e13"
  }
  index: 4
  text: "That\'s a distinct possibility. What was it that we saw in the autopsy report?"
  branches {
    responseText: ""
    nextNodeIndex: 5
    idRef {
      id: "8a65af0b6233317009006df2:5962a69b346265441c002064"
    }
  }
  sourceInSceneRef {
    id: "fafbad9c623331341400482c"
  }
}
nodes {
  idRef {
    id: "8a810f716233317009006e3e"
  }
  index: 5
  text: ""
  branches {
    responseText: "The face was so mangled that they had to use dental records to identify him."
    nextNodeIndex: 6
    idRef {
      id: "8a65af0b6233317009006df2:5962a69b346265441c002067"
    }
  }
  branches {
    responseText: "He was killed by sedatives, but the coroner still thought he had ripped his own face off."
    nextNodeIndex: 24
    idRef {
      id: "8a65af0b6233317009006df2:5962a69b346265441c0020b4"
    }
  }
  branches {
    responseText: "Simple suicide - he killed himself with a drug overdose."
    nextNodeIndex: 27
    idRef {
      id: "8a65af0b6233317009006df2:5962a69b346265441c0020c0"
    }
  }
  comment: "Autopsy Target"
}
nodes {
  idRef {
    id: "8a88c5906233317009006e50"
  }
  index: 6
  text: "Good catch. That matches up with something I\'ve seen runners try... It\'s easy enough to find a body shop that\'ll make a replica set of teeth for you. \nFind some schlub off the street no one will miss, swap the teeth and throw the heat off your trail for a while. \nLucky I\'ve never been that desperate."
  branches {
    responseText: ""
    nextNodeIndex: 7
    idRef {
      id: "8a65af0b6233317009006df2:5962a69b346265441c00206a"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "fafbad9c623331341400482c"
  }
}
nodes {
  idRef {
    id: "8a8bfba86233317009006e53"
  }
  index: 7
  text: "But why would he need to go to those lengths? Did the police records have something linking him to a different crime?"
  branches {
    responseText: ""
    nextNodeIndex: 8
    idRef {
      id: "8a65af0b6233317009006df2:5962a69b346265441c00206d"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "6cd09a586233317c1d00767e"
  }
}
nodes {
  idRef {
    id: "8b84aa486233317009006fbd"
  }
  index: 8
  text: ""
  branches {
    responseText: "Had a corp gunning for him, maybe?"
    nextNodeIndex: 9
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "8b9b284c6233316813006e7d"
    }
  }
  branches {
    responseText: "Probably got in over his head on loans. Chop shop assistant doesn\'t pay well."
    nextNodeIndex: 17
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "51aec08362333148180027f4"
    }
  }
  branches {
    responseText: "He had a prior for unlicensed plastic surgery."
    nextNodeIndex: 18
    idRef {
      id: "8a65af0b6233317009006df2:5962a69b346265441c00209a"
    }
  }
  comment: "Prior Target"
}
nodes {
  idRef {
    id: "8b84aa486233317009006fc0"
  }
  index: 9
  text: "Could be. But we\'re not going to find proof of that laying around. It is a little strange that he would do this to slip some pursuer, but left his belongings to his psychiatrist. Wouldn\'t he want to keep them? Was the psychiatrist in on it?"
  branches {
    responseText: ""
    nextNodeIndex: 10
    idRef {
      id: "8a65af0b6233317009006df2:5962a69b346265441c002072"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "fafbad9c623331341400482c"
  }
}
nodes {
  idRef {
    id: "8b8a9ae66233317009007011"
  }
  index: 10
  text: ""
  branches {
    responseText: "He had his psychiatrist help him fake his death to escape his rap sheet. "
    nextNodeIndex: 11
    idRef {
      id: "8a65af0b6233317009006df2:5962a69b346265441c002075"
    }
  }
  branches {
    responseText: "Maybe this is some kind of alternative treatment."
    nextNodeIndex: 15
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "51aec0a46233314818002899"
    }
  }
  branches {
    responseText: "I think I was wrong about this."
    nextNodeIndex: 16
    idRef {
      id: "8a65af0b6233317009006df2:5962a69b346265441c00208f"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "8b8a9ae66233317009007014"
  }
  index: 11
  text: "Why would his DNA wind up at these modern crime scenes, though? Was he posing as a doctor at a previous murder site?"
  branches {
    responseText: "Maybe they are the same person."
    nextNodeIndex: 12
    idRef {
      id: "8a65af0b6233317009006df2:5962a69b346265441c002078"
    }
  }
  branches {
    responseText: "Someone planted it there."
    nextNodeIndex: 13
    idRef {
      id: "8a65af0b6233317009006df2:5962a69b346265441c00207e"
    }
  }
  branches {
    responseText: "I think I was wrong about this."
    nextNodeIndex: 14
    idRef {
      id: "8a65af0b6233317009006df2:5962a69b346265441c002084"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "fafbad9c623331341400482c"
  }
}
nodes {
  idRef {
    id: "8bebf8396233316813007037"
  }
  index: 12
  text: "Silas became Dr. Holmes? Huh. If he replaced the real Holmes, that\'s probably whose body they found in Silas\' apartment in the first place."
  branches {
    responseText: ""
    nextNodeIndex: 19
    idRef {
      id: "8a65af0b6233317009006df2:5962a69b346265441c00207b"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "fafbad9c623331341400482c"
  }
}
nodes {
  idRef {
    id: "8bf7102c6233316813007039"
  }
  index: 13
  text: "We have no evidence of that. Personally, I think it sounds like he wanted to become a surgeon. But he got caught in the wrong line of work - during his tenure at the chop shop, he was brought in for unlicensed plastic surgery. Won\'t get a medical license after that one."
  branches {
    responseText: ""
    nextNodeIndex: 19
    idRef {
      id: "8a65af0b6233317009006df2:5962a69b346265441c002081"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "fafbad9c623331341400482c"
  }
}
nodes {
  idRef {
    id: "8beb74746233316813006fee"
  }
  index: 14
  text: "You have a different idea?"
  branches {
    responseText: ""
    nextNodeIndex: 8
    idRef {
      id: "8a65af0b6233317009006df2:5962a69b346265441c002087"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "fafbad9c623331341400482c"
  }
}
nodes {
  idRef {
    id: "8b8a9ae66233317009007017"
  }
  index: 15
  text: "That\'s a new one by me. Unless you were kidding."
  branches {
    responseText: ""
    nextNodeIndex: 10
    idRef {
      id: "8a65af0b6233317009006df2:5962a69b346265441c00208c"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "fafbad9c623331341400482c"
  }
}
nodes {
  idRef {
    id: "8b8a9ae6623331700900701a"
  }
  index: 16
  text: "You have a different idea?"
  branches {
    responseText: ""
    nextNodeIndex: 8
    idRef {
      id: "8a65af0b6233317009006df2:5962a69b346265441c002092"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "fafbad9c623331341400482c"
  }
}
nodes {
  idRef {
    id: "8b84aa486233317009006fc8"
  }
  index: 17
  text: "We didn\'t see any evidence of that. And he left his estate to his psychiatrist, right? Estates include debt."
  branches {
    responseText: ""
    nextNodeIndex: 10
    idRef {
      id: "8a65af0b6233317009006df2:5962a69b346265441c002097"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "fafbad9c623331341400482c"
  }
}
nodes {
  idRef {
    id: "8b84aa486233317009006fce"
  }
  index: 18
  text: "True. Wouldn\'t look too good on someone\'s record if they wanted to become a doctor. I think this is beginning to come together... The late Silas left all his belongings to a doctor."
  branches {
    responseText: ""
    nextNodeIndex: 19
    idRef {
      id: "8a65af0b6233317009006df2:5962a69b346265441c00209d"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "fafbad9c623331341400482c"
  }
}
nodes {
  idRef {
    id: "8b84aa486233317009006fd1"
  }
  index: 19
  text: "Dr. Holmes. Employment records have him as the administrator at Mercy Mental, and the picture on his file matches the person you saw downtown. The same person this DNA belongs to. All the evidence points to him being your killer, whoever he really is."
  branches {
    responseText: "Guess I\'m about to get a big payday."
    nextNodeIndex: 20
    idRef {
      id: "8a65af0b6233317009006df2:5962a69b346265441c0020a0"
    }
  }
  branches {
    responseText: "I should go find this \"Dr. Holmes\" and ask him some very pointed questions."
    nextNodeIndex: 23
    idRef {
      id: "8a65af0b6233317009006df2:5962a69b346265441c0020ab"
    }
  }
  branches {
    responseText: "Finally, I can bring my friend Sam\'s murderer to justice."
    nextNodeIndex: 20
    idRef {
      id: "8a65af0b6233317009006df2:5962a69b346265441c0020b1"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "fafbad9c623331341400482c"
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "JessicaCall"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "InvestigationRecapComplete"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Discover the Identity of the Ripper"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "8b84aa486233317009006fd4"
  }
  index: 20
  text: "This guy clearly did not want to be found. If I was you, I\'d buy as much shiny new gear as I could afford before taking my crew over there.\n\n$(scene.sJohnny_Money)"
  branches {
    responseText: ""
    nextNodeIndex: 21
    idRef {
      id: "8a65af0b6233317009006df2:5962a69b346265441c0020a3"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "fafbad9c623331341400482c"
  }
  actions {
    ops {
      functionName: "Add Nuyen"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "numNuyenPayout"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "8bc0650a6233316813006f4b"
  }
  index: 21
  text: ""
  branches {
    responseText: "I\'ll see you later."
    nextNodeIndex: -1
    idRef {
      id: "8a65af0b6233317009006df2:5962a69b346265441c0020a6"
    }
  }
  branches {
    responseText: "You\'re not coming?"
    nextNodeIndex: 22
    idRef {
      id: "8a65af0b6233317009006df2:5962a69b346265441c0020a8"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "FryConversationComplete"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "InvestigationRecapComplete"
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
}
nodes {
  idRef {
    id: "8bc123d76233316813006f54"
  }
  index: 22
  text: "I think my part here is done. You might want to go sticking your hand into a hornet\'s nest, but I\'m a little more wary of the jobs I take these days."
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "fafbad9c623331341400482c"
  }
}
nodes {
  idRef {
    id: "8b84aa486233317009006fd7"
  }
  index: 23
  text: "Please pay him my respects, I always find that high caliber rounds get the message across. You should gather some friends and go loaded for bear.\n\n$(scene.sJohnny_Money)"
  branches {
    responseText: ""
    nextNodeIndex: 21
    idRef {
      id: "8a65af0b6233317009006df2:5962a69b346265441c0020ae"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "fafbad9c623331341400482c"
  }
  actions {
    ops {
      functionName: "Add Nuyen"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "numNuyenPayout"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "8a87d5ab6233317009006e4e"
  }
  index: 24
  text: "Coroner really phoned it in on that one. Happens all too often when there\'s no next of kin willing to foot the bills for a thorough autopsy."
  branches {
    responseText: ""
    nextNodeIndex: 25
    idRef {
      id: "8a65af0b6233317009006df2:5962a69b346265441c0020b7"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "fafbad9c623331341400482c"
  }
}
nodes {
  idRef {
    id: "8b94e0716233316813006e2e"
  }
  index: 25
  text: "I definitely don\'t think that report told the whole story."
  branches {
    responseText: ""
    nextNodeIndex: 26
    idRef {
      id: "8a65af0b6233317009006df2:5962a69b346265441c0020ba"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "fafbad9c623331341400482c"
  }
}
nodes {
  idRef {
    id: "51ae94c3623331e424004e62"
  }
  index: 26
  text: "They matched the identity by the dental records, right? Not the most reliable. \n\nIt matches up with something I\'ve seen runners try... It\'s easy enough to find a body shop that\'ll make a replica set of teeth for you. Find some schlub off the street no one will miss, swap the teeth and throw the heat off your trail for a while. \n\nLucky I\'ve never been that desperate."
  branches {
    responseText: ""
    nextNodeIndex: 7
    idRef {
      id: "8a65af0b6233317009006df2:5962a69b346265441c0020bd"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "fafbad9c623331341400482c"
  }
}
nodes {
  idRef {
    id: "8a8380986233317009006e4c"
  }
  index: 27
  text: "The coroner seemed to think so. But their report wasn\'t very thorough. They usually aren\'t when a family member isn\'t around to pay for the work. "
  branches {
    responseText: ""
    nextNodeIndex: 25
    idRef {
      id: "8a65af0b6233317009006df2:5962a69b346265441c0020c3"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "fafbad9c623331341400482c"
  }
}
nodes {
  idRef {
    id: "8a6c67e86233317009006e11"
  }
  index: 28
  text: "I guess that\'s still a possibility. You seemed pretty sure when we got here that it did. \n\nWhat about Silas\' autopsy report, though? Anything stand out?"
  branches {
    responseText: ""
    nextNodeIndex: 5
    idRef {
      id: "8a65af0b6233317009006df2:5962a69b346265441c0020c9"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "fafbad9c623331341400482c"
  }
}
roots {
  responseText: ""
  nextNodeIndex: 0
  idRef {
    id: "8a65af0b6233317009006df2:5962a69b346265441c002052"
  }
}
