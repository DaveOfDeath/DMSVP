idRef {
  id: "51ae8896303031c014003065"
}
ui_name: "c08-s3_Delilah"
nodes {
  idRef {
    id: "51ae8e99303031c01400306b"
  }
  index: 0
  text: "If you are talking to me, there is business to transact. Am I right?"
  branches {
    responseText: "Of course you\342\200\231re right. It\342\200\231s your job to be right."
    nextNodeIndex: 1
  }
  branches {
    responseText: "It\342\200\231s always business with me."
    nextNodeIndex: 2
  }
  branches {
    responseText: "Yes, Mr. Delilah. I have a need I think you can fill."
    nextNodeIndex: 3
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "hasTalkedToDeliah"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "51ae8f84303031c014003070"
  }
  index: 1
  text: "This is correct. You are a smart $(l.guy). What can I do for you, Smart $+(l.guy)?"
  branches {
    responseText: "I need to put a crew together."
    nextNodeIndex: 4
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51ae8f9c303031c014003072"
  }
  index: 2
  text: " I appreciate this about you. Street talk is that you are a dangerous individual. What can I do for you, Dangerous Individual?"
  branches {
    responseText: "I need to put a crew together."
    nextNodeIndex: 4
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51ae8fb8303031c014003074"
  }
  index: 3
  text: "Of course you do. That\342\200\231s why you came back. Street talk is that you are tracking the Ripper. What can I do for you, Ripper Tracker?"
  branches {
    responseText: "I need to put a crew together."
    nextNodeIndex: 4
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51ae908d303031c01400307d"
  }
  index: 4
  text: "You got scratch or you planning to pay me out of your earnings?"
  branches {
    responseText: ""
    nextNodeIndex: 5
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51e5c5bb6233319012005d3f"
  }
  index: 5
  text: ""
  branches {
    responseText: "How much is this going to cost me?"
    nextNodeIndex: 6
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "51e5c61b6233319012005d73"
    }
  }
  branches {
    responseText: "I can pay the runners upfront."
    nextNodeIndex: 8
    auxiliaryLink: true
  }
  branches {
    responseText: "I\342\200\231ll pay a percentage of what I earn."
    nextNodeIndex: 7
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51e5c5d66233319012005d56"
  }
  index: 6
  text: "Well, for your speed, hired help\'ll run you about 1,200 a head. If you start taking on tougher jobs... well, the more experienced the runner, the higher the rates."
  branches {
    responseText: ""
    nextNodeIndex: 5
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51e5c5bb6233319012005d45"
  }
  index: 7
  text: "Screw you. I don\342\200\231t speculate."
  branches {
    responseText: "In that case... I can pay the runners upfront."
    nextNodeIndex: 8
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51e5c5bb6233319012005d48"
  }
  index: 8
  text: ""
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "hasTalkedToJessica"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 9
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "hasTalkedToJessica"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 11
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51e5c5bb6233319012005d4b"
  }
  index: 9
  text: "Excellent. We agree on terms. I\'ve got some runners on call if you\'ve got any special requests. "
  branches {
    responseText: ""
    nextNodeIndex: 10
  }
  actions {
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Talk to the Fixer, Mr. Delilah, About Hiring Runners"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 2
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "51e5c5bb6233319012005d4e"
  }
  index: 10
  text: ""
  branches {
    responseText: "Yeah, I\'m ready to go. Let\'s see \'em."
    actions {
      ops {
        functionName: "Open Hiring Screen and Open Scene"
        args {
          call_value {
            functionName: "Get Map Item (Scene)"
            args {
              string_value: "c10-s1_PlaneyardReturn"
            }
          }
        }
        args {
          string_value: "Hire these runners and meet Shannon at the NTSB Warehouse?"
        }
      }
    }
    nextNodeIndex: -1
  }
  branches {
    responseText: "I\'ve got some stuff to take care of first."
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51e5c5bb6233319012005d53"
  }
  index: 11
  text: "Come see me when your business in the Union is resolved, and we\'ll see about putting together a team."
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Talk to the Fixer, Mr. Delilah, About Hiring Runners"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 2
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "51cdfebe623331e810005d35"
  }
  index: 12
  text: "Come see me when your business in the Union is resolved, and we\'ll see about putting together a team."
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51cde85c623331a01f0016e2"
  }
  index: 13
  text: "You ready to do business now? I can have that runner crew on-site as soon as I\'ve got the nuyen."
  branches {
    responseText: ""
    nextNodeIndex: 10
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "hasTalkedToDeliah"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  nextNodeIndex: 0
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "hasTalkedToDeliah"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "hasTalkedToJessica"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  nextNodeIndex: 12
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "hasTalkedToDeliah"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "hasTalkedToJessica"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  nextNodeIndex: 13
}
