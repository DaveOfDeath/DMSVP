idRef {
  id: "578f1934613131e024000779"
}
ui_name: "c03-s1_Barrens_Violet\'sMatrixHookup"
nodes {
  idRef {
    id: "578f1949613131e024000781"
  }
  index: 0
  text: "{{GM}}The tech vendor, whoever they are, has a matrix access point.{{/GM}}"
  branches {
    responseText: ""
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "i_UltraViolet"
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    nextNodeIndex: 1
    idRef {
      id: "578f1934613131e024000779:578f1a89613131e024000795"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "578f1a89613131e024000798"
  }
  index: 1
  text: ""
  branches {
    responseText: "{{CC}}Decking 1{{/CC}} Jack In."
    conditions {
      ops {
        functionName: "Evaluate If Actor Is Decker"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Force-Use Interactable Object (with Actor)"
        args {
          call_value {
            functionName: "Get Map Item (InteractableObject)"
            args {
              string_value: "57c0ecb234626538110073dc"
            }
          }
        }
        args {
          call_value {
            functionName: "Active Actor"
          }
        }
      }
    }
    nextNodeIndex: -1
    idRef {
      id: "578f1934613131e024000779:578f1962613131e024000783"
    }
  }
  branches {
    responseText: "{{CC}}Armitage{{/CC}} Have Jake Jack In."
    conditions {
      ops {
        functionName: "Comparison (Actor)"
        args {
          call_value {
            functionName: "Get Map Item (Actor)"
            args {
              string_value: "a99a7ac5623331441b003061"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 2
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "578f1934613131e024000779:578f1962613131e024000785"
    }
  }
  branches {
    responseText: "{{GM}}Check System.{{/GM}}"
    nextNodeIndex: 7
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "578f1934613131e024000779:578f1963613131e024000787"
    }
  }
  branches {
    responseText: "{{GM}}Leave.{{/CC}}"
    nextNodeIndex: -1
    idRef {
      id: "578f1934613131e024000779:578f1963613131e024000789"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "Violet\'s Matrix Access Loop"
}
nodes {
  idRef {
    id: "578f1a9c613131e0240007a0"
  }
  index: 2
  text: "{{GM}}Jake shakes his head, putting up his hands.{{/GM}}\n\nI\'ve got a problem there, boss. I had a deck- a nice deck, fitted the way that I wanted, full of custom programs to make Steelflight get hard, but it\'s in bits in a trash can deep inside the Renraku Arcology."
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "578f1934613131e024000779:578f1aa3613131e0240007a2"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "a99a7ac5623331441b003061"
  }
}
nodes {
  idRef {
    id: "578f1aa3613131e0240007a5"
  }
  index: 3
  text: ""
  branches {
    responseText: "I need to know what\'s in that system, Jake."
    nextNodeIndex: 4
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "578f1934613131e024000779:578f1b86613131e0240007bd"
    }
  }
  branches {
    responseText: "Use my cyberdeck!"
    conditions {
      ops {
        functionName: "Evaluate If Team Has Cyberdeck"
        args {
          call_value {
            functionName: "Get Preset Value (string)"
            args {
              string_value: "FactionList"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (SceneDimension)"
            args {
              string_value: "Default"
            }
          }
        }
      }
    }
    nextNodeIndex: 5
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "578f1934613131e024000779:578f1af4613131e0240007a7"
    }
  }
  branches {
    responseText: "Don\'t worry about it."
    nextNodeIndex: 6
    idRef {
      id: "578f1934613131e024000779:578f1b67613131e0240007b3"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "a99a7ac5623331441b003061"
  }
  comment: "Jake Loop"
}
nodes {
  idRef {
    id: "578f1b98613131e0240007c0"
  }
  index: 4
  text: "{{GM}}Jake rolls his eyes at your \'need.\'{{/GM}}\n\nMight I suggest, and don\'t take this the wrong way: get your own cyberdeck, go to Little Chiba and get a datajack installed, and deck it your own damn self."
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "578f1934613131e024000779:578f1bd1613131e0240007c2"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "a99a7ac5623331441b003061"
  }
}
nodes {
  idRef {
    id: "578f1b14613131e0240007aa"
  }
  index: 5
  text: "{{GM}}Jake shakes his head \'no\' again.{{/GM}}\n\nThat would be like wearing someone else\'s underwear. You might be into it, but it\'s not for me. I\'ll have to take a pass on this one, until I can get my own deck together and write some fresh programs. Dog won\'t like it, but I gotta keep breathing."
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "578f1934613131e024000779:578f1b1a613131e0240007ac"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "a99a7ac5623331441b003061"
  }
}
nodes {
  idRef {
    id: "578f1be3613131e0240007d8"
  }
  index: 6
  text: "Thanks, $(l.name), I appreciate it."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "578f1934613131e024000779:578f1c06613131e0240007da"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "a99a7ac5623331441b003061"
  }
}
nodes {
  idRef {
    id: "57af8995613131001c0085d1"
  }
  index: 7
  text: "{{GM}}The system is a small matrix host- almost a plaything. Someone built it for code testing and to connect wirelessly to... something nearby.{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "578f1934613131e024000779:57af89bc613131001c0085d3"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "57af8a69613131001c008655"
  }
  index: 8
  text: "{{GM}}The tech vendor host and matrix access is just where you left it, begging to be cracked.{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "578f1934613131e024000779:57af8a6a613131001c008657"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "57af9416613131001c008783"
  }
  index: 9
  text: "{{GM}}This small sandbox is for tinkering with random bits of code. It looks like whoever was using this thing was a prolific coder.{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 10
    idRef {
      id: "578f1934613131e024000779:57af943c613131001c008785"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "57af943e613131001c008788"
  }
  index: 10
  text: ""
  branches {
    responseText: "Check code details."
    nextNodeIndex: 11
    idRef {
      id: "578f1934613131e024000779:57af9446613131001c00878a"
    }
  }
  branches {
    responseText: "{{CC}}Etiquette: Shadowrunner{{/CC}} Check network for ghost drives."
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 17
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: 18
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "578f1934613131e024000779:57af948f613131001c008793"
    }
  }
  branches {
    responseText: "{{CC}}Etiquette: Academic{{/CC}} Search for programs and structures with a filename beginning with \".\""
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 18
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: 19
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "578f1934613131e024000779:57af94e5613131001c008798"
    }
  }
  branches {
    responseText: "{{CC}}Etiquette: Corporate{{/CC}} Check for files on with a countdown delay."
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 13
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: 20
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "578f1934613131e024000779:57af9570613131001c0087e9"
    }
  }
  branches {
    responseText: "View code logs."
    nextNodeIndex: 22
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "578f1934613131e024000779:57af9446613131001c00878c"
    }
  }
  branches {
    responseText: "{{GM}}Exit.{{/GM}}"
    nextNodeIndex: -1
    idRef {
      id: "578f1934613131e024000779:57af9446613131001c00878e"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "Coder Loop"
}
nodes {
  idRef {
    id: "57af9468613131001c008791"
  }
  index: 11
  text: "{{GM}}There are hundreds of coding projects here, most of them unfinished or riddled with holes.{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 12
    idRef {
      id: "578f1934613131e024000779:57af97f8613131001c008863"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "57af97fa613131001c008866"
  }
  index: 12
  text: "{{GM}}Search Coding Projects{{/GM}}"
  branches {
    responseText: "Shadowrun Identity"
    nextNodeIndex: 13
    idRef {
      id: "578f1934613131e024000779:57af9802613131001c008868"
    }
  }
  branches {
    responseText: "Preying for Keeps"
    nextNodeIndex: 14
    idRef {
      id: "578f1934613131e024000779:57af9824613131001c00886a"
    }
  }
  branches {
    responseText: "Chicago"
    nextNodeIndex: 15
    idRef {
      id: "578f1934613131e024000779:57af9824613131001c00886c"
    }
  }
  branches {
    responseText: "Jet Black"
    nextNodeIndex: 16
    idRef {
      id: "578f1934613131e024000779:57af9824613131001c00886e"
    }
  }
  branches {
    responseText: "Mercurial"
    nextNodeIndex: 17
    idRef {
      id: "578f1934613131e024000779:57af9824613131001c008870"
    }
  }
  branches {
    responseText: "{{GM}}Go Back.{{/GM}}"
    nextNodeIndex: 10
    idRef {
      id: "578f1934613131e024000779:57c0f0a0346265381100765d"
    }
    inputBypass: true
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_InputKeyboard
}
nodes {
  idRef {
    id: "57af982b613131001c008875"
  }
  index: 13
  text: "{{GM}}An old bit of code comes up on the register, but it\'s pre-Crash trash. A note appended to the code reads:{{/GM}}\n\n{{CC}}These were some good people, see if we can update it to current protocols and re-release it. - Captain Chaos{{/CC}}"
  branches {
    responseText: ""
    nextNodeIndex: 10
    idRef {
      id: "578f1934613131e024000779:57af986f613131001c008877"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "57af989f613131001c0088ab"
  }
  index: 14
  text: "{{GM}}This coding entry is barely started, and someone named Jack Skater is always asking for an update.{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 10
    idRef {
      id: "578f1934613131e024000779:57af98b2613131001c0088ad"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "57af98bd613131001c0088b2"
  }
  index: 15
  text: "{{GM}}An immersive hot-sim experience from the pre-Crash band awaits download.{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 10
    idRef {
      id: "578f1934613131e024000779:57af98e8613131001c0088b4"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "57af98f4613131001c0088b9"
  }
  index: 16
  text: "{{GM}}There\'s a program here to seed the matrix with hundreds of Jet Black sightings a year, and to respond with random usernames to any threads that mention Jet Black sightings as hoaxes or frauds.{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 10
    idRef {
      id: "578f1934613131e024000779:57af998b613131001c0088bb"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "57af9993613131001c0088c0"
  }
  index: 17
  text: "{{GM}}Maria Mercurial, the Silver Lady{{/GM}}\n\nMaria\'s entire discography is collected here, and there\'s a crudely programmed semi-autonomous knowbot scouring the matrix for any mention of Maria Mercurial, Puyallup\'s street market, Shadowrunners based out of Puyallup in 2051, New Horizons Construction, police informants from Puyallup in 2051, someone named Snout, a troll named Mateo, and someone named Roberto Carlos De La Virgen Campeche de Sanchez.\n\nSomeone really wants to find out something about Maria Mercurial."
  branches {
    responseText: ""
    nextNodeIndex: 10
    idRef {
      id: "578f1934613131e024000779:57afa7e7613131001c0088c2"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "57af94c6613131001c008796"
  }
  index: 18
  text: "{{GM}}You search for inaccessible drive, and are unsurprised when one is present.{{/GM}}\n\n{{GM}}A note from Chuckles reads:{{/GM}}\n{{CC}}I\'m surprised you finally thought to look for this, Violet. Here\'s a reward to buy yourself something nice.{{/CC}}"
  branches {
    responseText: ""
    nextNodeIndex: 10
    idRef {
      id: "578f1934613131e024000779:57afa896613131001c008935"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5c565f1a3064348815003a64"
  }
  actions {
    ops {
      functionName: "Add Nuyen"
      args {
        int_value: 100
      }
    }
  }
}
nodes {
  idRef {
    id: "57afa8a9613131001c008939"
  }
  index: 19
  text: "{{GM}}A search for basic hidden files yeilds a single result:{{/GM}}\n\n{{CC}}.nicetryViolet//but I can do better than old pre-crash protocols.{{/CC}}"
  branches {
    responseText: ""
    nextNodeIndex: 10
    idRef {
      id: "578f1934613131e024000779:57afa8ab613131001c00893b"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5c565f1a3064348815003a64"
  }
}
nodes {
  idRef {
    id: "57afa8b0613131001c008940"
  }
  index: 20
  text: "{{GM}}There are several files with countdowns on them- some set to go off in a few days, others every six months unless reset.{{/GM}}\n\n{{GM}}Whoever set up this node has a lot of triggers to pull.{{/GM}}\n\n{{GM}}One in particular reads \"DON\'T TOUCH THESE\" as a filename.{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 21
    idRef {
      id: "578f1934613131e024000779:57afa905613131001c008948"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "57afa905613131001c00894b"
  }
  index: 21
  text: "Chuckles comments: Violet, these are to keep other failsafes from triggering. Don\'t mess with them.\n\n{{GM}}The file notifies Gavilan Ventures, an unknown dropbox in Germany, and someone named \'Buddy\' here in Seattle with the same message: Employee: Webb, Charles - Deceased.{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 10
    idRef {
      id: "578f1934613131e024000779:57afa8b5613131001c008942"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5c565f1a3064348815003a64"
  }
}
nodes {
  idRef {
    id: "57af95b3613131001c0087ec"
  }
  index: 22
  text: "{{GM}}There are thousands of bits of stolen code.{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 23
    idRef {
      id: "578f1934613131e024000779:57af9601613131001c008807"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "57af9601613131001c00880a"
  }
  index: 23
  text: "{{GM}}The two main areas of coders are \"Chuckles\" and \"UV\".{{/GM}}\n\n{{GM}}A comment from UV reads:{{/GM}}\nChuckles, I finally cracked the encryption and decompiled that psychotropic IC. Looks like it was written in Chiba, and seeded into the software of the CalFree Sim publisher. I don\'t think they even know that they\'re spreading the megacorp brand loyalty. Should we warn Virtual World Disney, or just go after the source?"
  branches {
    responseText: ""
    nextNodeIndex: 24
    idRef {
      id: "578f1934613131e024000779:57cfafad613131200d006051"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "57cfafad613131200d006054"
  }
  index: 24
  text: "{{GM}}Chuckles\' response:{{/GM}}\nWhen you have a toothache, is the pain in your mouth or in your brain?"
  branches {
    responseText: ""
    nextNodeIndex: 10
    idRef {
      id: "578f1934613131e024000779:57af95bb613131001c008802"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5c565f1a3064348815003a64"
  }
}
nodes {
  idRef {
    id: "57af8e36613131001c008661"
  }
  index: 25
  text: "{{GM}}A gruff ork answers as if responding to a Telecom call.{{/GM}}\n\nThis is Two-Feathers, Chuckles, what\'s going on? "
  branches {
    responseText: ""
    nextNodeIndex: 26
    idRef {
      id: "578f1934613131e024000779:57af8e5e613131001c008663"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5d950e3d306434701b0042bb"
  }
}
nodes {
  idRef {
    id: "57af8e60613131001c008666"
  }
  index: 26
  text: "{{GM}}The ork seems to recognize that you\'re not whoever he was expecting.{{/GM}}\n\nWait-- you\'re not-- who are you?"
  branches {
    responseText: ""
    nextNodeIndex: 27
    idRef {
      id: "578f1934613131e024000779:57af8e8b613131001c008668"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5d950e3d306434701b0042bb"
  }
}
nodes {
  idRef {
    id: "57af8e8d613131001c00866b"
  }
  index: 27
  text: ""
  branches {
    responseText: "I\'m \'Chuckles,\' don\'t you recognize me?"
    nextNodeIndex: 28
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "578f1934613131e024000779:57af8e98613131001c00866d"
    }
  }
  branches {
    responseText: "This line has been compromised."
    nextNodeIndex: 29
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "578f1934613131e024000779:57af8e9c613131001c00866f"
    }
  }
  branches {
    responseText: "Wait, you\'re Joseph Two-Feathers."
    conditions {
      ops {
        functionName: "OR"
        args {
          call_value {
            functionName: "Compare Actor Race"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "IsOrIsNot"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Race"
                }
                args {
                  int_value: 3
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Compare Actor Race"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "IsOrIsNot"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Race"
                }
                args {
                  int_value: 4
                }
              }
            }
          }
        }
      }
    }
    nextNodeIndex: 36
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "578f1934613131e024000779:57af8e9c613131001c008671"
    }
  }
  branches {
    responseText: "{{CC}}Etiquette: Gang{{/CC}} There are gangs moving up on the street market. A few independents are squeezing locals for protection money."
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 15
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: 37
    hideIfUnavailable: true
    idRef {
      id: "578f1934613131e024000779:57af92e6613131001c00870f"
    }
  }
  branches {
    responseText: "I just found a matrix connection and was poking around."
    nextNodeIndex: 38
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "578f1934613131e024000779:57af8e9c613131001c008673"
    }
  }
  branches {
    responseText: "Sorry, wrong number."
    nextNodeIndex: 39
    idRef {
      id: "578f1934613131e024000779:57af8e9d613131001c008675"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5d950e3d306434701b0042bb"
  }
  comment: "OrkUnderground Loop"
}
nodes {
  idRef {
    id: "57af8f2e613131001c00868c"
  }
  index: 28
  text: "{{GM}}The ork cocks an eyebrow in disbelief.{{/GM}}\n\nChuckles isn\'t above changing his avatar, or sending UV to deliver a message, but you\'re not him. Who are you?"
  branches {
    responseText: ""
    nextNodeIndex: 27
    idRef {
      id: "578f1934613131e024000779:57af8f73613131001c0086ae"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5d950e3d306434701b0042bb"
  }
}
nodes {
  idRef {
    id: "57af8ec4613131001c008678"
  }
  index: 29
  text: "{{GM}}The ork squints into the screen, as if looking at your avatar could tell him any secrets.{{/GM}}\n\nCompromised? By whom? We heard gunshots, but assumed it was just random ganger violence."
  branches {
    responseText: ""
    nextNodeIndex: 30
    idRef {
      id: "578f1934613131e024000779:57af8f0b613131001c00867a"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5d950e3d306434701b0042bb"
  }
}
nodes {
  idRef {
    id: "57af8f0e613131001c00867d"
  }
  index: 30
  text: ""
  branches {
    responseText: "By me, mostly."
    nextNodeIndex: 31
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "578f1934613131e024000779:57af8f16613131001c008681"
    }
  }
  branches {
    responseText: "I\'m $+(s.name)."
    nextNodeIndex: 32
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "578f1934613131e024000779:57af8f17613131001c008687"
    }
  }
  branches {
    responseText: "You mean, \'by who\'."
    nextNodeIndex: 33
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "578f1934613131e024000779:57af8f15613131001c00867f"
    }
  }
  branches {
    responseText: "Pretty much anyone with a deck could have cracked open this node."
    nextNodeIndex: 34
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "578f1934613131e024000779:57af8f16613131001c008683"
    }
  }
  branches {
    responseText: "Shhh... it\'s a secret."
    nextNodeIndex: 35
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "578f1934613131e024000779:57af8f16613131001c008685"
    }
  }
  branches {
    responseText: "{{GM}}Disconnect.{{/GM}}"
    actions {
      ops {
        functionName: "Enable/Disable Interactable Object"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "EnableOrDisable"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (InteractableObject)"
            args {
              string_value: "57bbe2fe613131480500811a"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "578f1934613131e024000779:57af8f17613131001c008689"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5d950e3d306434701b0042bb"
  }
  comment: "Security Loop"
}
nodes {
  idRef {
    id: "57afafe1613131001c008a21"
  }
  index: 31
  text: "{{GM}}The ork nods.{{/GM}}\n\nWhich begs the question, who are you?"
  branches {
    responseText: ""
    nextNodeIndex: 30
    idRef {
      id: "578f1934613131e024000779:57afb05c613131001c008a23"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5d950e3d306434701b0042bb"
  }
}
nodes {
  idRef {
    id: "57afb075613131001c008a45"
  }
  index: 32
  text: "{{GM}}The ork nods slowly, looking at you to take your measure.{{/GM}}\n\nPleasure to meet you, $+(l.name). "
  branches {
    responseText: ""
    nextNodeIndex: 30
    idRef {
      id: "578f1934613131e024000779:57afb0a6613131001c008a47"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5d950e3d306434701b0042bb"
  }
}
nodes {
  idRef {
    id: "57af8f80613131001c0086b2"
  }
  index: 33
  text: "{{GM}}The ork peers at you in confusion.{{/GM}}\n\nWhat? No- it\'s whom when it\'s the object of a sentence. That\'s not important. Who are YOU?"
  branches {
    responseText: ""
    nextNodeIndex: 30
    idRef {
      id: "578f1934613131e024000779:57af8fa4613131001c0086b4"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5d950e3d306434701b0042bb"
  }
}
nodes {
  idRef {
    id: "57afafa6613131001c0089c7"
  }
  index: 34
  text: "{{GM}}The ork shakes his head.{{/GM}}\n\nChuckles is many things, but he is not lazy. I doubt any but the most talented deckers could disable his safety protocols."
  branches {
    responseText: ""
    nextNodeIndex: 30
    idRef {
      id: "578f1934613131e024000779:57afafcf613131001c0089c9"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5d950e3d306434701b0042bb"
  }
}
nodes {
  idRef {
    id: "57afb0ec613131001c008acd"
  }
  index: 35
  text: "{{GM}}The orks seems bewildered.{{/GM}}\n\nYou called me."
  branches {
    responseText: ""
    nextNodeIndex: 27
    idRef {
      id: "578f1934613131e024000779:57afb10a613131001c008b1b"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5d950e3d306434701b0042bb"
  }
}
nodes {
  idRef {
    id: "57af928b613131001c00870a"
  }
  index: 36
  text: "{{GM}}Joseph Two-Feathers clears his throat awkwardly.{{/GM}}\n\nYes, uh-- yes. I am."
  branches {
    responseText: ""
    nextNodeIndex: 27
    idRef {
      id: "578f1934613131e024000779:57afaf6d613131001c0089c4"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5d950e3d306434701b0042bb"
  }
  actions {
    ops {
      functionName: "Set Actor Display Name"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5d950e3d306434701b0042bb"
              }
            }
          }
          args {
          }
        }
      }
      args {
        string_value: "Joseph Two-Feathers"
      }
    }
  }
}
nodes {
  idRef {
    id: "57af9354613131001c008712"
  }
  index: 37
  text: "{{GM}}The ork seems surprised by this information, or perhaps just its source.{{/GM}}\n\nWe are more secure underground than those people in the street market. I heard the Halloweeners are giving the area holy hell."
  branches {
    responseText: ""
    nextNodeIndex: 27
    idRef {
      id: "578f1934613131e024000779:57af9389613131001c008714"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5d950e3d306434701b0042bb"
  }
}
nodes {
  idRef {
    id: "57afb12e613131001c008b21"
  }
  index: 38
  text: "{{GM}}The ork seems incredulous.{{/GM}}\n\nYou just \'stumbled\' on the secure host used by the local tech guru, and used it to call me?"
  branches {
    responseText: ""
    nextNodeIndex: 27
    idRef {
      id: "578f1934613131e024000779:57afb15f613131001c008b23"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5d950e3d306434701b0042bb"
  }
}
nodes {
  idRef {
    id: "57af92c5613131001c00870d"
  }
  index: 39
  text: "{{GM}}The ork\'s face looks surprised as you disconnect.{{/GM}}"
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5d950e3d306434701b0042bb"
  }
  actions {
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "57bbe2fe613131480500811a"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "57af93b2613131001c008780"
  }
  index: 40
  text: "{{GM}}You\'ve found the wireless signal router. It has four independent pings, looks like someone set up a camera network to keep an eye on the street market.{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 41
    idRef {
      id: "578f1934613131e024000779:57bbe55061313148050082cc"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isCamera"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "57bbe55061313148050082cf"
  }
  index: 41
  text: ""
  branches {
    responseText: "Check the first camera."
    actions {
      ops {
        functionName: "Clear Camera Points of Interest"
      }
      ops {
        functionName: "Teleport Camera To Actor"
        args {
          call_value {
            functionName: "Get Map Item (Actor)"
            args {
              string_value: "578f1ecc613131e02400083d"
            }
          }
        }
      }
    }
    nextNodeIndex: 42
    idRef {
      id: "578f1934613131e024000779:57afb16e613131001c008b27"
    }
    comment: "Street Market Halloweeners"
  }
  branches {
    responseText: "Check the second camera."
    actions {
      ops {
        functionName: "Clear Camera Points of Interest"
      }
      ops {
        functionName: "Teleport Camera To Actor"
        args {
          call_value {
            functionName: "Get Map Item (Actor)"
            args {
              string_value: "57cdce48346265bc10004060"
            }
          }
        }
      }
    }
    nextNodeIndex: 43
    idRef {
      id: "578f1934613131e024000779:57afb16e613131001c008b29"
    }
    comment: "Street Market South"
  }
  branches {
    responseText: "Check the third camera."
    nextNodeIndex: 44
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "578f1934613131e024000779:57afb186613131001c008b2d"
    }
    comment: "Inactive (street market above jackpoint)"
  }
  branches {
    responseText: "Trace the fourth ping"
    nextNodeIndex: 45
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "578f1934613131e024000779:57bbe53861313148050082c3"
    }
  }
  branches {
    responseText: "{{GM}}Control{{/GM}} Slave the camera signals to your commlink."
    conditions {
      ops {
        functionName: "OR"
        args {
          call_value {
            functionName: "Evaluate If Actor Has Item"
            args {
              call_value {
                functionName: "Specific Actor"
                args {
                  call_value {
                    functionName: "Get Map Item (Player)"
                    args {
                      int_value: 0
                    }
                  }
                }
                args {
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "HasOrHasNot"
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Map Item (Item)"
                args {
                  string_value: "Slave_Cameras"
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Evaluate If Actor Has Item"
            args {
              call_value {
                functionName: "Specific Actor"
                args {
                  call_value {
                    functionName: "Get Map Item (Player)"
                    args {
                      int_value: 0
                    }
                  }
                }
                args {
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "HasOrHasNot"
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Map Item (Item)"
                args {
                  string_value: "Disabled_Cameras"
                }
              }
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Slave_Cameras"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Change Actor Team"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isCamera"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 0
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (string)"
            args {
              string_value: "FactionList"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (SceneDimension)"
            args {
              string_value: "Default"
            }
          }
        }
      }
    }
    nextNodeIndex: 46
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "578f1934613131e024000779:57afb186613131001c008b2f"
    }
  }
  branches {
    responseText: "{{GM}}Disable{{/GM}} Shut down the camera hub."
    conditions {
      ops {
        functionName: "OR"
        args {
          call_value {
            functionName: "Evaluate If Actor Has Item"
            args {
              call_value {
                functionName: "Specific Actor"
                args {
                  call_value {
                    functionName: "Get Map Item (Player)"
                    args {
                      int_value: 0
                    }
                  }
                }
                args {
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "HasOrHasNot"
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Map Item (Item)"
                args {
                  string_value: "Slave_Cameras"
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Evaluate If Actor Has Item"
            args {
              call_value {
                functionName: "Specific Actor"
                args {
                  call_value {
                    functionName: "Get Map Item (Player)"
                    args {
                      int_value: 0
                    }
                  }
                }
                args {
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "HasOrHasNot"
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Map Item (Item)"
                args {
                  string_value: "Disabled_Cameras"
                }
              }
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Disabled_Cameras"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Enable/Disable Interactable Object"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "EnableOrDisable"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (InteractableObject)"
            args {
              string_value: "57bbe2fe613131480500811a"
            }
          }
        }
      }
      ops {
        functionName: "Kill Actor"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isCamera"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 0
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "DeathMethod"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "FacingDirection"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 47
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "578f1934613131e024000779:57afb187613131001c008b31"
    }
  }
  branches {
    responseText: "{{GM}}Exit.{{/GM}}"
    actions {
      ops {
        functionName: "Change Actor Team"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "isCamera"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 0
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (string)"
            args {
              string_value: "FactionList"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (SceneDimension)"
            args {
              string_value: "Default"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    idRef {
      id: "578f1934613131e024000779:57bbe1196131314805008084"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "Camera Loop"
}
nodes {
  idRef {
    id: "57bbe55d61313148050082d9"
  }
  index: 42
  text: "{{GM}}The feed shows another street market, this one trashed by a local go-gang. Orange and black pumpkins decorate the area.{{/GM}}"
  branches {
    responseText: "{{GM}}Back.{{/GM}}"
    actions {
      ops {
        functionName: "Clear Camera Points of Interest"
      }
      ops {
        functionName: "Teleport Camera To Actor"
        args {
          call_value {
            functionName: "Active Actor"
          }
        }
      }
    }
    nextNodeIndex: 41
    idRef {
      id: "578f1934613131e024000779:57bbe56261313148050082db"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "57bbe56a61313148050082f3"
  }
  index: 43
  text: "{{GM}}This camera shows a south-looking view of the street market, with several motorcycles and gangers wandering the area.{{/GM}}"
  branches {
    responseText: "{{GM}}Back.{{/GM}}"
    actions {
      ops {
        functionName: "Clear Camera Points of Interest"
      }
      ops {
        functionName: "Teleport Camera To Actor"
        args {
          call_value {
            functionName: "Active Actor"
          }
        }
      }
    }
    nextNodeIndex: 41
    idRef {
      id: "578f1934613131e024000779:57bbe56d61313148050082f5"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "57bbe57761313148050082fa"
  }
  index: 44
  text: "The third camera is broken- shot out by someone feeling zippy.\nRewinding the footage to shortly before the camera was destroyed, you see the street market you\'re currently crouched in."
  branches {
    responseText: ""
    nextNodeIndex: 41
    idRef {
      id: "578f1934613131e024000779:57bbe57a61313148050082fc"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "57bbe5856131314805008301"
  }
  index: 45
  text: "The weak signal bounces off an old dish antenna, to a relay a few buildings over, and then disappears. \nCould just be someone watching the feed."
  branches {
    responseText: ""
    nextNodeIndex: 41
    idRef {
      id: "578f1934613131e024000779:57bbe5876131314805008303"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "57bbe63d6131314805008308"
  }
  index: 46
  text: "You slave the camera feed to your commlink, re-encrypting the channel to keep others out."
  branches {
    responseText: "{{GM}}Exit.{{/GM}}"
    actions {
      ops {
        functionName: "Enable/Disable Interactable Object"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "EnableOrDisable"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (InteractableObject)"
            args {
              string_value: "57bbe2fe613131480500811a"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    idRef {
      id: "578f1934613131e024000779:57bbe652613131480500830a"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "57bbe65b613131480500830d"
  }
  index: 47
  text: "You re-encrypt the camera feed to lock everyone out, and then set the encryption to random. \n\nThere, now no one gets to watch over your shoulder while you work."
  branches {
    responseText: "{{GM}}Exit.{{/GM}}"
    nextNodeIndex: -1
    idRef {
      id: "578f1934613131e024000779:57bbe687613131480500830f"
    }
  }
  nodeType: ConversationNodeType_Simple
}
roots {
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "i_UltraViolet"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  nextNodeIndex: 0
  hideIfUnavailable: true
  idRef {
    id: "578f1934613131e024000779:578f1934613131e02400077d"
  }
  comment: "First Entry"
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "i_UltraViolet"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  nextNodeIndex: 8
  idRef {
    id: "578f1934613131e024000779:57af8a52613131001c008622"
  }
  comment: "Return To Matrix"
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "i_UltraViolet"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 2
      }
    }
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5d950e3d306434701b0042bb"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "5753d558663136ac07001506"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5c565f1a3064348815003a64"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "5753d558663136ac07001506"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Actor Display Name"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5c565f1a3064348815003a64"
              }
            }
          }
          args {
          }
        }
      }
      args {
        string_value: "Chuckles"
      }
    }
  }
  nextNodeIndex: 9
  hideIfUnavailable: true
  idRef {
    id: "578f1934613131e024000779:57af8af2613131001c00865e"
  }
  comment: "Code Hub"
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "i_UltraViolet"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 3
      }
    }
  }
  actions {
    ops {
      functionName: "Set Actor Display Name"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5d950e3d306434701b0042bb"
              }
            }
          }
          args {
          }
        }
      }
      args {
        string_value: "Two-Feathers"
      }
    }
  }
  nextNodeIndex: 25
  hideIfUnavailable: true
  idRef {
    id: "578f1934613131e024000779:57af8ad5613131001c00865a"
  }
  comment: "Ork Underground Connection"
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "i_UltraViolet"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 4
      }
    }
  }
  nextNodeIndex: 40
  hideIfUnavailable: true
  idRef {
    id: "578f1934613131e024000779:57af8ad5613131001c00865c"
  }
  comment: "Cameras"
}
