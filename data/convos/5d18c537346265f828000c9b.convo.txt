idRef {
  id: "5d18c537346265f828000c9b"
}
ui_name: "c17-s2_Seamstress_LastFence"
nodes {
  idRef {
    id: "5d18c54e346265f828000ca3"
  }
  index: 0
  text: "{{GM}}The fence steeples his hands as you approach.{{/GM}}\n\nI can only assume you\'re interrupting Cyborg Surgeons Gone Wild for business reasons."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "5d18c537346265f828000c9b:5d18c663346265f828000ca9"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5d18c7e5346265f828000d03"
  }
  index: 1
  text: ""
  branches {
    responseText: "How much this Super Brawl championship ring go for on the street?"
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "c12-s1_SuperBrawlRing"
            }
          }
        }
      }
      ops {
        functionName: "Invert Bool"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "hasSeenFenceOffer"
            }
          }
        }
      }
    }
    nextNodeIndex: 2
    hideIfUnavailable: true
    idRef {
      id: "51dc733c623331bc0b00366e:5d18c68c346265f828000cc8"
    }
  }
  branches {
    responseText: "Gaeatronics was getting freaky with some spirits."
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "c16-s1_LabPaydata"
            }
          }
        }
      }
      ops {
        functionName: "Invert Bool"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "hasHeardGaeatronicsOffer"
            }
          }
        }
      }
    }
    nextNodeIndex: 7
    hideIfUnavailable: true
    idRef {
      id: "5d18c537346265f828000c9b:5d18c834346265f828000d38"
    }
  }
  branches {
    responseText: "{{CC}}+\302\2451200{{/CC}} I\'ll sell the ring."
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "c12-s1_SuperBrawlRing"
            }
          }
        }
      }
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "hasSeenFenceOffer"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 10
    hideIfUnavailable: true
    idRef {
      id: "5d18c537346265f828000c9b:5d18cbc7346265f828000d85"
    }
  }
  branches {
    responseText: "{{CC}}+\302\2451500{{/CC}} Take this Gaeatronics data off me."
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "c16-s1_LabPaydata"
            }
          }
        }
      }
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "hasHeardGaeatronicsOffer"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 11
    hideIfUnavailable: true
    idRef {
      id: "5d18c537346265f828000c9b:5d18cc8b346265f828000dc4"
    }
  }
  branches {
    responseText: "{{GM}}Walk away.{{/GM}}"
    nextNodeIndex: -1
    idRef {
      id: "5d18c537346265f828000c9b:5d18c836346265f828000d3a"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "Primary Sell Loop"
}
nodes {
  idRef {
    id: "51dc733c623331bc0b00366e:5d18c68c346265f828000cca"
  }
  index: 2
  text: "Depends on the year. Let me take a look.\n\n{{GM}}He angles his cyber-optics towards the ring, and ponders a moment.{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "51dc733c623331bc0b00366e:5d18c68c346265f828000ccc"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51dc733c623331bc0b00366e:5d18c68c346265f828000cce"
  }
  index: 3
  text: "The inset gems alone are worth 800 nuyen or so, but a collector would probably pay more for that year\'s ring. You want me to get rid of it? 1200 nuyen."
  branches {
    responseText: ""
    nextNodeIndex: 4
    idRef {
      id: "51dc733c623331bc0b00366e:5d18c68c346265f828000cd0"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "hasSeenFenceOffer"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "51dc733c623331bc0b00366e:5d18c68c346265f828000cd2"
  }
  index: 4
  text: ""
  branches {
    responseText: "I\'ll take the money."
    nextNodeIndex: 5
    idRef {
      id: "51dc733c623331bc0b00366e:5d18c68c346265f828000cd4"
    }
  }
  branches {
    responseText: "Nevermind, I want to hold on to it."
    nextNodeIndex: 6
    idRef {
      id: "51dc733c623331bc0b00366e:5d18c68c346265f828000cd8"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51dc733c623331bc0b00366e:5d18c68c346265f828000cd6"
  }
  index: 5
  text: "It\'s done. I\'ll transfer the money."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "5d18c537346265f828000c9b:5d18c817346265f828000d2f"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Add Nuyen"
      args {
        int_value: 1200
      }
    }
    ops {
      functionName: "Remove Item from Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "c12-s1_SuperBrawlRing"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "51dc733c623331bc0b00366e:5d18c68c346265f828000cda"
  }
  index: 6
  text: "Great. Have fun."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "5d18c537346265f828000c9b:5d18c82b346265f828000d32"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5d18c9a9346265f828000d51"
  }
  index: 7
  text: "{{GM}}He grimaces.{{/GM}}\n\nThis wouldn\'t have anything to do with a secret lab in the Puget, would it? Gaeatronics is spreading a nuyen around to find out who knocked over that lab. {{GM}}He waves his hands defensively.{{/GM}} Don\'t worry, no one would sell you out - certainly not I. But it does make this information more dangerous. {{GM}}He considers.{{/GM}}\n\nI think I know exactly the buyer we can both rely on to be discreet. A 50/50 split since I\'m putting my neck out: 1500 nuyen."
  branches {
    responseText: "{{GM}}Hand over the data.{{/GM}}"
    nextNodeIndex: 8
    idRef {
      id: "5d18c537346265f828000c9b:5d18cb17346265f828000d53"
    }
  }
  branches {
    responseText: "Maybe I\'ll sell it once things have cooled off."
    nextNodeIndex: 9
    idRef {
      id: "5d18c537346265f828000c9b:5d18cb45346265f828000d5f"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "hasHeardGaeatronicsOffer"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "5d18c537346265f828000c9b:5d18cb17346265f828000d55"
  }
  index: 8
  text: "It\'s done. I\'ll transfer the money."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "5d18c537346265f828000c9b:5d18cb17346265f828000d57"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Add Nuyen"
      args {
        int_value: 1500
      }
    }
    ops {
      functionName: "Remove Item from Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "c16-s1_LabPaydata"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "5d18cb60346265f828000d62"
  }
  index: 9
  text: "Your call."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "5d18c537346265f828000c9b:5d1967ed346265a021000ca7"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5d18c537346265f828000c9b:5d18cc77346265f828000dbb"
  }
  index: 10
  text: "It\'s done. I\'ll transfer the money."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "5d18c537346265f828000c9b:5d18cc77346265f828000dbd"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Add Nuyen"
      args {
        int_value: 1200
      }
    }
    ops {
      functionName: "Remove Item from Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "c12-s1_SuperBrawlRing"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "5d18c537346265f828000c9b:5d18cd03346265f828000ddc"
  }
  index: 11
  text: "You won\'t regret this."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "5d18c537346265f828000c9b:5d18cd03346265f828000dde"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Add Nuyen"
      args {
        int_value: 1500
      }
    }
    ops {
      functionName: "Remove Item from Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "c16-s1_LabPaydata"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "5d18c6cd346265f828000ce9"
  }
  index: 12
  text: "Is there a reason you\'re bothering me again?"
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "5d18c537346265f828000c9b:5d18cde6346265f828000de5"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  comment: "Always Open Exit"
}
roots {
  conditions {
    ops {
      functionName: "AND"
      args {
        call_value {
          functionName: "Invert Bool"
          args {
            call_value {
              functionName: "Get Variable (bool)"
              args {
                string_value: "hasSeenFenceOffer"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Invert Bool"
          args {
            call_value {
              functionName: "Get Variable (bool)"
              args {
                string_value: "hasHeardGaeatronicsOffer"
              }
            }
          }
        }
      }
    }
  }
  nextNodeIndex: 0
  hideIfUnavailable: true
  idRef {
    id: "5d18c537346265f828000c9b:5d18c537346265f828000c9f"
  }
}
roots {
  responseText: ""
  nextNodeIndex: 12
  idRef {
    id: "5d18c537346265f828000c9b:5d18c6c3346265f828000ce6"
  }
}
