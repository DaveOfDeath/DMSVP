idRef {
  id: "aba2c9e0306434e41b00478f"
}
ui_name: "c21-s1_Brotherhood_AcolyteAuditorium"
nodes {
  idRef {
    id: "519c1156356164f8170076ab"
  }
  index: 0
  text: "I\'m sorry but today\'s seminar is over. Father Willy is just answering a few questions before he leaves. "
  branches {
    responseText: ""
    nextNodeIndex: 1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51aa6476633635001b007992"
  }
  index: 1
  text: ""
  branches {
    responseText: "Is Lynne Telestrian here?"
    nextNodeIndex: 2
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "51ba4601633635d82e001d85"
    }
  }
  branches {
    responseText: "Who is Father Willy?"
    nextNodeIndex: 6
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "51aa6628633635001b007a66"
    }
  }
  branches {
    responseText: "Where is Jessica Watts?"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "AcoHub05"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 12
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "51ba460b633635d82e001d86"
    }
  }
  branches {
    responseText: "Where is Grandmother Jessica?"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "AcoHub05"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 13
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "51ba461f633635d82e001d88"
    }
  }
  branches {
    responseText: "I\'m done asking questions. "
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51aa6476633635001b007995"
  }
  index: 2
  text: "No, Mother Lynne left about 15 minutes ago."
  branches {
    responseText: "Are Mother Lynne and Lynne Telestrian the same person?"
    nextNodeIndex: 3
  }
  branches {
    responseText: "Does Mother and Father reflect them being in charge?"
    nextNodeIndex: 4
    hideIfUnavailable: true
  }
  branches {
    responseText: "You didn\'t mention Grandmother?"
    nextNodeIndex: 5
    hideIfUnavailable: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51aa6476633635001b007998"
  }
  index: 3
  text: "Yes of course, but here at the Universal Brotherhood, we are all one family and refer to each other as brothers, sister, mother or father."
  branches {
    responseText: ""
    nextNodeIndex: 1
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51aa6593633635001b007a0e"
  }
  index: 4
  text: "Yes, Mothers and Fathers lead us with their knowledge and experience."
  branches {
    responseText: ""
    nextNodeIndex: 1
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51aa6476633635001b00799e"
  }
  index: 5
  text: "Well yes, but there is only one Grandmother or Grandfather for each Universal Brotherhood chapter. "
  branches {
    responseText: ""
    nextNodeIndex: 1
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51aa6476633635001b0079a1"
  }
  index: 6
  text: "Father Willy is truly an inspiration. After years of living in the shadows he found the light about three years ago and now is a beacon for us to follow here at the Universal Brotherhood. "
  branches {
    responseText: "Yeah, an inspiration to us all. Does he pull some weight around here?"
    nextNodeIndex: 7
  }
  branches {
    responseText: "What did Father Willy talk about?"
    nextNodeIndex: 11
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51aa6476633635001b0079a4"
  }
  index: 7
  text: "All the Brothers and Sisters report to him, if that\'s what you mean. "
  branches {
    responseText: "And where does Jessica Watts fit in all this?"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "AcoHub05"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 8
    hideIfUnavailable: true
  }
  branches {
    responseText: "And he reports to Grandmother Jessica?"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "AcoHub05"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 9
    hideIfUnavailable: true
  }
  branches {
    responseText: "Where does Mother Lynne fit in this happy family?"
    nextNodeIndex: 10
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51aa6476633635001b0079a7"
  }
  index: 8
  text: "Grandmother Jessica is the matriarch of our family here, she runs the Seattle chapter of the Universal Brotherhood."
  branches {
    responseText: ""
    nextNodeIndex: 1
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "AcoHub05"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "51aa6476633635001b0079aa"
  }
  index: 9
  text: "Of course. Grandmother Jessica is the matriarch of our family here, she runs the Seattle chapter of the Universal Brotherhood."
  branches {
    responseText: ""
    nextNodeIndex: 1
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51aa6476633635001b0079ad"
  }
  index: 10
  text: "Mother Lynne is the family\'s best spokesperson. That she, who comes from so much, is willing to give so much for others is an inspiration to us all. "
  branches {
    responseText: ""
    nextNodeIndex: 1
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51aa6642633635001b007a68"
  }
  index: 11
  text: "It was an inspiring speech about how Universal Brotherhood is working to bring about a future of unity and belonging. Order from chaos. A future of Truth realized. \n\nIt\'s a subject that he and Mother Lynne talk about often."
  branches {
    responseText: ""
    nextNodeIndex: 1
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51aa6476633635001b0079b1"
  }
  index: 12
  text: "I am not privileged to know where Grandmother Jessica is, but Father Willy might. "
  branches {
    responseText: ""
    nextNodeIndex: 1
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51aa6476633635001b0079b4"
  }
  index: 13
  text: "I am not privileged to know where Grandmother Jessica is, but Father Willy might. "
  branches {
    responseText: ""
    nextNodeIndex: 1
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51ac01056336357819002204"
  }
  index: 14
  text: "Can I help you?"
  branches {
    responseText: "I need to talk to Jessica Watts."
    nextNodeIndex: 15
  }
  branches {
    responseText: "There\'s a serious maintenance issue that needs your immediate attention."
    nextNodeIndex: 16
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51ac015c6336357819002208"
  }
  index: 15
  text: "I don\'t know where Grandmother Jessica is, you should speak to Father Willy."
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51ac017d633635781900220a"
  }
  index: 16
  text: "That sounds like something a Father or Mother should deal with. Talk to Father Willy near the stage. "
  nodeType: ConversationNodeType_Simple
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Evaluate If Actor Has Item"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "Maintenance"
          }
        }
      }
    }
  }
  nextNodeIndex: 0
}
roots {
  responseText: ""
  nextNodeIndex: 14
}
