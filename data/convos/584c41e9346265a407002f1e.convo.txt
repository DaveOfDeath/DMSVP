idRef {
  id: "584c41e9346265a407002f1e"
}
ui_name: "c16-s1_DevConvo"
nodes {
  idRef {
    id: "584c41f8346265a407002f26"
  }
  index: 0
  text: "Hello buddies and welcome to the bunker!\n\nThis is the first of the three fully scripted loyalty missions we added to DMS. I decided to contrast the main plot line of insect spirits using metahumanity as tools with the inverse tale of metahumans abusing spirits. The comparatively small, Salish-owned Gaeatronics seemed like a perfect fit for the villains here, as the quest for green energy often leads to competing interests in the natural world."
  branches {
    responseText: "{{GM}}Continue.{{/GM}}"
    nextNodeIndex: 1
    idRef {
      id: "584c41e9346265a407002f1e:584c44d9346265a407002f28"
    }
  }
  branches {
    responseText: "{{GM}}Done.{{/GM}}"
    nextNodeIndex: -1
    idRef {
      id: "584c41e9346265a407002f1e:584c44de346265a407002f2a"
    }
  }
  nodeType: ConversationNodeType_Simple
  speaker_override_id: "57384e0c66313618130064b1"
}
nodes {
  idRef {
    id: "584c44fd346265a407002f30"
  }
  index: 1
  text: "Going on an impromptu Shadowrun against an underwater laboratory is naturally a rather insane idea, but I tried to suggest the project was not well funded by having a gang acting as security on the dock, by the power outages, and dropping a large amount of grime and burn marks across the map.\n\nThe mission was structured to follow the format: legwork, stealth, combat, control, escape. Legwork on the docks, both talking with the gangers and investigating the area for clues. Stealth... well, originally, I intended the trolley to move down two long passages on both floors, with the player moving from side to side to hide from guards. But, that was extremely boring and finicky."
  branches {
    responseText: "It\'s still finicky!"
    nextNodeIndex: 2
    idRef {
      id: "584c41e9346265a407002f1e:584c46d9346265a407002f32"
    }
  }
  branches {
    responseText: "{{GM}}Enough.{{/GM}}"
    nextNodeIndex: -1
    idRef {
      id: "584c41e9346265a407002f1e:584c46e7346265a407002f34"
    }
  }
  nodeType: ConversationNodeType_Simple
  speaker_override_id: "57384e0c66313618130064b1"
}
nodes {
  idRef {
    id: "584c46f6346265a407002f37"
  }
  index: 2
  text: "{{GM}}Laughs.{{/GM}} Yes, yes it is. You can turn switch the awareness region to visible so you can see exactly when you need to pass...\n\nAnyway, because this was the first scene I worked on for DMS, I went way overboard and thru in everything I could think of, quickly sucking up all the memory with actors and VFX. "
  branches {
    responseText: "{{GM}}Switch the Region Visible.{{/GM}}"
    conditions {
      ops {
        functionName: "Invert Bool"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bDebugMode"
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bDebugMode"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    hideIfUnavailable: true
    idRef {
      id: "584c41e9346265a407002f1e:584c47d9346265a407002f39"
    }
  }
  branches {
    responseText: "{{GM}}Switch the Region Invisible.{{/GM}}"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bDebugMode"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bDebugMode"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    hideIfUnavailable: true
    idRef {
      id: "584c41e9346265a407002f1e:584c480f346265a407002f3b"
    }
  }
  branches {
    responseText: "{{GM}}Complain:{{/GM}} Why do I read these things?"
    nextNodeIndex: -1
    idRef {
      id: "584c41e9346265a407002f1e:584c482b346265a407002f3e"
    }
  }
  nodeType: ConversationNodeType_Simple
  speaker_override_id: "57384e0c66313618130064b1"
}
roots {
  nextNodeIndex: 0
  idRef {
    id: "584c41e9346265a407002f1e:584c41e9346265a407002f22"
  }
}
