idRef {
  id: "39bd234430303170150042ca"
}
ui_name: "c14-s2_BaronAtTheExit"
nodes {
  idRef {
    id: "3e521029303031e00d007e8f"
  }
  index: 0
  text: "{{GM}}Your commlink chrips and as expected, it\'s Baron Samedi.{{/GM}}\n\nFrom what I can see there is still is more information you need, mon ami! Best check James Telestrian\'s system while you still have the chance!"
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "hasSeenVPConsole"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 1
    hideIfUnavailable: true
  }
  nodeType: ConversationNodeType_GM_Speaker_Voice
  sourceInSceneRef {
    id: "8eaf881a3030314413001908"
  }
}
nodes {
  idRef {
    id: "3e583c0a303031e00d007e93"
  }
  index: 1
  text: "We still must see if we can get into Erik Silverstar\'s office, the Aegis sample is there."
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "3e8c7d7a303031f012005b23"
  }
  index: 2
  text: "{{GM}}Your commlink chirps and as expected, it\'s Baron Samedi.{{/GM}}\n\nYou must still get into Erik Silverstar\'s office, the Aegis sample is there."
  nodeType: ConversationNodeType_GM_Speaker_Voice
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "CriticalMatrixObjectiveCount"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        int_value: 2
      }
    }
  }
  nextNodeIndex: 0
  hideIfUnavailable: true
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "hasSeenVPConsole"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  nextNodeIndex: 2
  hideIfUnavailable: true
}
