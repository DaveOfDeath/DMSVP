idRef {
  id: "58ce3b53396630f803004fdf"
}
ui_name: "c08-s3_Violet"
nodes {
  idRef {
    id: "58ce5def396630f803005443"
  }
  index: 0
  text: "{{GM}}Violet fiddles with her commlink, which even being adapted to troll sizes is still drafted by her massive hands.{{/GM}}"
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Compare Actor Race"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Race"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 1
    idRef {
      id: "58ce3b53396630f803004fdf:58ce5e17396630f80300544a"
    }
    comment: "Human"
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Compare Actor Race"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Race"
            }
            args {
              int_value: 2
            }
          }
        }
      }
    }
    nextNodeIndex: 24
    idRef {
      id: "58ce3b53396630f803004fdf:58ce5e17396630f80300544c"
    }
    comment: "Elf"
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Compare Actor Race"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Race"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 25
    idRef {
      id: "58ce3b53396630f803004fdf:58ce5e17396630f80300544e"
    }
    comment: "Dwarf"
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Compare Actor Race"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Race"
            }
            args {
              int_value: 4
            }
          }
        }
      }
    }
    nextNodeIndex: 26
    idRef {
      id: "58ce3b53396630f803004fdf:58ce5e12396630f803005448"
    }
    comment: "Troll"
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Compare Actor Race"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Race"
            }
            args {
              int_value: 3
            }
          }
        }
      }
    }
    nextNodeIndex: 27
    idRef {
      id: "58ce3b53396630f803004fdf:58ce5e17396630f803005450"
    }
    comment: "Ork"
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "58ce5e81396630f803005455"
  }
  index: 1
  text: "Violet pockets the commlink, pointing at you.\n\nHey, you\'re that Breeder that Coyote was talking about, right, the $(l.man) who helped her out with that BTL thing?"
  branches {
    responseText: ""
    nextNodeIndex: 2
    idRef {
      id: "58ce3b53396630f803004fdf:58ce5f08396630f803005498"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "58ce5f08396630f80300549b"
  }
  index: 2
  text: ""
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Story Variable (bool)"
            args {
              string_value: "518d7674643431b03f0041ab"
            }
            args {
              string_value: "c09_GinoDead"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 3
    idRef {
      id: "58ce3b53396630f803004fdf:58ce5ebf396630f803005459"
    }
    comment: "Gino Dead"
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Story Variable (bool)"
            args {
              string_value: "518d7674643431b03f0041ab"
            }
            args {
              string_value: "c09_GinoAlive"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 23
    idRef {
      id: "58ce3b53396630f803004fdf:58ce5ebc396630f803005457"
    }
    comment: "Gino Alive"
  }
  nodeType: ConversationNodeType_Simple
  comment: "Gino Result"
}
nodes {
  idRef {
    id: "58ce5edd396630f803005493"
  }
  index: 3
  text: "{{GM}}Violet shakes her head.{{/GM}}\n\nYou fragged up and got her cousin killed, omae. Not cool."
  branches {
    responseText: ""
    nextNodeIndex: 4
    idRef {
      id: "58ce3b53396630f803004fdf:58ce600d396630f8030054c1"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "58ce6013396630f8030054c4"
  }
  index: 4
  text: "All that fallout aside, I think it\'s cool that you stepped up and helped Coyote out when she asked for it. You know it\'s not always easy for a Redmond girl to ask for help."
  branches {
    responseText: ""
    nextNodeIndex: 5
    idRef {
      id: "58ce3b53396630f803004fdf:58ce6043396630f8030054c6"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "58ce604c396630f8030054c9"
  }
  index: 5
  text: ""
  branches {
    responseText: "Aren\'t you pleasant."
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "b_TalkedtoViolet"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "b_TalkedtoViolet"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 6
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "58ce3b53396630f803004fdf:58ce6057396630f8030054cd"
    }
  }
  branches {
    responseText: "Did I do something to piss you off?"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "b_TalkedtoViolet"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "b_TalkedtoViolet"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 7
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "58ce3b53396630f803004fdf:58ce6057396630f8030054cb"
    }
  }
  branches {
    responseText: "I\'m not sure how to respond to that."
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "b_TalkedtoViolet"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "b_TalkedtoViolet"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 8
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "58ce3b53396630f803004fdf:58ce6058396630f8030054d1"
    }
  }
  branches {
    responseText: "I apologize, I haven\'t had the chance to properly introduce myself."
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "b_TalkedtoViolet"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "b_TalkedtoViolet"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 9
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "58ce3b53396630f803004fdf:58ce6057396630f8030054cf"
    }
  }
  branches {
    responseText: "The irony of a SINless decker calling me a criminal is not lost on me."
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "b_TalkedtoViolet"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 10
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "58ce3b53396630f803004fdf:58ce6058396630f8030054d3"
    }
  }
  branches {
    responseText: "Stupid Trog."
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "b_TalkedtoViolet"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Compare Actor Race"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Race"
            }
            args {
              int_value: 4
            }
          }
        }
      }
    }
    nextNodeIndex: 11
    idRef {
      id: "58ce3b53396630f803004fdf:58ce618e396630f803005527"
    }
  }
  branches {
    responseText: "I have to put up with the hot-shit decker\'s pride and \'personality flaws\'?"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "b_TalkedtoViolet"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 12
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "58ce3b53396630f803004fdf:58ce618e396630f803005525"
    }
  }
  branches {
    responseText: "I\'m interested in the digital bat."
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "b_TalkedtoViolet"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 16
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "58ce3b53396630f803004fdf:58ce618f396630f803005529"
    }
  }
  branches {
    responseText: "What did you do for Coyote?"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "b_TalkedtoViolet"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 18
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "58ce3b53396630f803004fdf:58ce66dc396630f803005630"
    }
  }
  branches {
    responseText: "What was that you were talking to River about?"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "b_TalkedtoViolet"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 20
    idRef {
      id: "58ce3b53396630f803004fdf:58ce66dc396630f803005632"
    }
  }
  branches {
    responseText: "Thanks for the chat, UV."
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "b_TalkedtoViolet"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 21
    idRef {
      id: "58ce3b53396630f803004fdf:58ce66dc396630f803005634"
    }
  }
  branches {
    responseText: "Did a shadowrunner once run over your cat or something?"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "b_TalkedtoViolet"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 22
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "58ce3b53396630f803004fdf:58ce618f396630f80300552b"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "Violet Introduction Loop"
}
nodes {
  idRef {
    id: "58ce6337396630f80300558a"
  }
  index: 6
  text: "{{GM}}Violet snorts derisively.{{/GM}}\n\nChuckles calls it one of the few perks of the job- when you\'re good at what you do, people HAVE to put up with your personality and bad manners."
  branches {
    responseText: ""
    nextNodeIndex: 5
    idRef {
      id: "58ce3b53396630f803004fdf:58ce6368396630f80300558c"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "58ce6143396630f803005523"
  }
  index: 7
  text: "{{GM}}Violet shrugs.{{/GM}}\n\nAside from the whole general murder-hobo-career-criminal-sociopath thing? Nothing springs to mind."
  branches {
    responseText: ""
    nextNodeIndex: 5
    idRef {
      id: "58ce3b53396630f803004fdf:58ce67bf396630f803005687"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "58ce636d396630f803005591"
  }
  index: 8
  text: "{{GM}}Violet shrugs.{{/GM}}\n\nFair enough. I\'ll be more direct in my insults in the future."
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "58ce62fe396630f803005566"
  }
  index: 9
  text: "{{GM}}Violet pouts and mocks a curtsy.{{/GM}}\n\nSuch manners from the brutish thug who has been out murdering all day. I do believe I might faint!"
  branches {
    responseText: ""
    nextNodeIndex: 5
    idRef {
      id: "58ce3b53396630f803004fdf:58ce632f396630f803005568"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "58ce63d3396630f8030055cc"
  }
  index: 10
  text: "{{GM}}Violet smiles.{{/GM}}\n\nNor on me, but irony doesn\'t buy wontons, does it."
  branches {
    responseText: ""
    nextNodeIndex: 5
    idRef {
      id: "58ce3b53396630f803004fdf:58ce63f5396630f8030055ce"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "58ce6276396630f803005532"
  }
  index: 11
  text: "{{GM}}Violet smirks, drawing the commlink back out of her pocket and fiddling with it.{{/GM}}\n\nI don\'t give a Tinker\'s Damn what you think, so frag off."
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5837ec3f6631363414000c97"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "58ce6442396630f8030055d2"
  }
  index: 12
  text: "{{GM}}Violet shrugs.{{/GM}}\n\nYou could always try and get into one of those shady prisons where they cut on inmates, and trade 20 menthol Kools to the Doc for a special surgery, get your own cyberdeck, and put your own grey matter to the test."
  branches {
    responseText: "Is that from a movie?"
    conditions {
      ops {
        functionName: "Compare Actor Attribute"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorAttributes"
            }
            args {
              int_value: 4
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          int_value: 4
        }
      }
    }
    nextNodeIndex: 13
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "58ce3b53396630f803004fdf:58ce660f396630f8030055e4"
    }
  }
  branches {
    responseText: "I already did."
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 5
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    nextNodeIndex: 14
    idRef {
      id: "58ce3b53396630f803004fdf:58ce6600396630f8030055e0"
    }
  }
  branches {
    responseText: "Pass."
    nextNodeIndex: 15
    idRef {
      id: "58ce3b53396630f803004fdf:58ce6602396630f8030055e2"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "57084f7c6631365c1600767e"
          }
          args {
            string_value: "Crew_Recruited_Violet"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "58ce6637396630f8030055e7"
  }
  index: 13
  text: "{{GM}}Violet is caught off-guard.{{/GM}}\n\nWhat? No, I don\'t think so-- you, you\'re quoting movies."
  branches {
    responseText: ""
    nextNodeIndex: 5
    idRef {
      id: "58ce3b53396630f803004fdf:58ce663a396630f8030055e9"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "58ce6720396630f803005637"
  }
  index: 14
  text: "{{GM}}Violet nods.{{/GM}}\n\nWell then, you $+(l.sir) will probably have no need of my talents, unless you want something done right."
  branches {
    responseText: ""
    nextNodeIndex: 5
    idRef {
      id: "58ce3b53396630f803004fdf:58ce6834396630f8030056de"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "58ce675f396630f803005685"
  }
  index: 15
  text: "That\'s what most people decide. I\'m churlish, but I know what I\'m doing. If you need help in digital realms, I\'m available, but only since Coyote vouched for you."
  branches {
    responseText: ""
    nextNodeIndex: 5
    idRef {
      id: "58ce3b53396630f803004fdf:58ce683a396630f8030056e1"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "58ce6475396630f8030055d5"
  }
  index: 16
  text: "{{GM}}Violet watches you curiously.{{/GM}}\n\nYeah, and?"
  branches {
    responseText: "Why do you use a physical symbol of strength in the matrix, where strength is meaningless?"
    nextNodeIndex: 17
    idRef {
      id: "58ce3b53396630f803004fdf:58ce6487396630f8030055d7"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "58ce6490396630f8030055da"
  }
  index: 17
  text: "{{GM}}Violet smiles.{{/GM}}\n\nOne of the ironies Chuck-- that I, uh-- that I\'m so fond of. \n\nI use it specifically because it\'s a symbol of strength that is meaningless in the digital world."
  branches {
    responseText: ""
    nextNodeIndex: 5
    idRef {
      id: "58ce3b53396630f803004fdf:58ce64d0396630f8030055dc"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "58ce689e396630f8030056e9"
  }
  index: 18
  text: "{{GM}}Violet shrugs.{{/GM}}\n\nCoyote is an important part of Kubota\'s little family here. I did for her what I would do for any sister. I took care of the digital world so that she wouldn\'t have to worry about it. I waited until after the dust settled, and then I went through and wiped out everything that I could. I scrubbed the camera footage, I even wiped the door locks with the access time."
  branches {
    responseText: ""
    nextNodeIndex: 19
    idRef {
      id: "58ce3b53396630f803004fdf:58ce6904396630f8030056eb"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "58ce6911396630f8030056ee"
  }
  index: 19
  text: "You wanna know more? Ask her, she\'s got ears."
  branches {
    responseText: ""
    nextNodeIndex: 5
    idRef {
      id: "58ce3b53396630f803004fdf:58ce6918396630f8030056f0"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "58ce6924396630f8030056f5"
  }
  index: 20
  text: "{{GM}}Violet bristles.{{/GM}}\n\nThat was an A to B conversation, so kindly C your way out of it."
  branches {
    responseText: ""
    nextNodeIndex: 5
    idRef {
      id: "58ce3b53396630f803004fdf:58ce693e396630f8030056f7"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "58ce686d396630f8030056e6"
  }
  index: 21
  text: "{{GM}}Violet waits a moment, but then genuinely smiles.{{/GM}}\n\nSee you around, murder-hobo."
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "58ce61c9396630f80300552e"
  }
  index: 22
  text: "{{GM}}Violet stiffens, face paling.{{/GM}}\n\nThat\'s it, we\'re done. Buzz off, shit beetle."
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5837ec3f6631363414000c97"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "58ce5f67396630f8030054b0"
  }
  index: 23
  text: "{{GM}}Violet shrugs.{{/GM}}\n\nI guess someone who shuts down a Yakuza BTL lab and gets her cousin out alive can\'t be all bad."
  branches {
    responseText: ""
    nextNodeIndex: 4
    idRef {
      id: "58ce3b53396630f803004fdf:58ce605b396630f8030054d5"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "58ce5f13396630f8030054a1"
  }
  index: 24
  text: "{{GM}}Violet slides the commlink into her pocket, nodding as you approach.{{/GM}}\n\nOkay, I get why it might be said that you\'re cute, Dandelion, but..."
  branches {
    responseText: ""
    nextNodeIndex: 2
    idRef {
      id: "58ce3b53396630f803004fdf:58ce5f15396630f8030054a3"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "58ce5fb1396630f8030054b3"
  }
  index: 25
  text: "{{GM}}Violet smiles at you.{{/GM}}\n\nGood things come in small packages, that\'s what people always tell me. I usually ask them how big their yacht is."
  branches {
    responseText: "You and Seamus must get along great."
    nextNodeIndex: 2
    idRef {
      id: "58ce3b53396630f803004fdf:58ce5fdb396630f8030054b5"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "58ce6082396630f8030054f6"
  }
  index: 26
  text: "{{GM}}Violet smiles at you for a moment, and then seems to think better of it.{{/GM}}\n\nYou\'re cool for helping Coyote out, but that doesn\'t mean you get a free pass."
  branches {
    responseText: ""
    nextNodeIndex: 2
    idRef {
      id: "58ce3b53396630f803004fdf:58ce60b2396630f8030054f8"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "58ce60bd396630f80300551c"
  }
  index: 27
  text: "{{GM}}Violet nods at you. She\'s young, and slim for a troll.{{/GM}}\n\nThanks for looking out, Greenskin."
  branches {
    responseText: ""
    nextNodeIndex: 2
    idRef {
      id: "58ce3b53396630f803004fdf:58ce60e0396630f80300551e"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "58ce5df0396630f803005446"
  }
  index: 28
  text: "{{GM}}Violet smiles at your approach.{{/GM}}\n\nBack for more? You\'re either a dumber $(l.race) or more desperate than I gave you credit for."
  branches {
    responseText: ""
    nextNodeIndex: 5
    idRef {
      id: "58ce3b53396630f803004fdf:58ce67f6396630f80300568a"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
roots {
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "b_TalkedtoViolet"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  nextNodeIndex: 0
  idRef {
    id: "58ce3b53396630f803004fdf:58ce3b53396630f803004fe3"
  }
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "b_TalkedtoViolet"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  nextNodeIndex: 28
  idRef {
    id: "58ce3b53396630f803004fdf:58ce5ce4396630f803005351"
  }
}
