idRef {
  id: "ae9da30630643468170049ee"
}
ui_name: "c21-s1_Intro Counseling Center"
nodes {
  idRef {
    id: "b3b538363064349408004481"
  }
  index: 0
  text: "Welcome to the Universal Brotherhood\'s Counseling Center. \n\nWhat\'s your name?"
  branches {
    responseText: "I\'m $(s.name) and you?"
    nextNodeIndex: 1
  }
  branches {
    responseText: "I don\'t do names with people I don\'t know."
    nextNodeIndex: 2
  }
  branches {
    responseText: "I\'m a lost sheep who\'s coming looking for my flock."
    nextNodeIndex: 3
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "hasDoneCouncilingIntro"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "51aec56c6336355007001b4b"
  }
  index: 1
  text: "I\'m Sister Nancy. "
  branches {
    responseText: ""
    nextNodeIndex: 4
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51aec5cf6336355007001b50"
  }
  index: 2
  text: "Ok, well I\'m Sister Nancy."
  branches {
    responseText: ""
    nextNodeIndex: 4
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51bb93ae633635bc1e001965"
  }
  index: 3
  text: "You\'ve come to the right place. "
  branches {
    responseText: ""
    nextNodeIndex: 4
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51bb9286633635bc1e00191a"
  }
  index: 4
  text: "Tell me something about yourself so that I can pair you with the right counselor. "
  branches {
    responseText: "I tend to get along with corporate business types - we speak the same lingo."
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 13
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "TalkAbout"
            }
          }
        }
        args {
          string_value: "business"
        }
      }
    }
    nextNodeIndex: 5
    hideIfUnavailable: true
  }
  branches {
    responseText: "I could relate to someone who\'s been in the trenches of corporate security. "
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 14
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "TalkAbout"
            }
          }
        }
        args {
          string_value: "security"
        }
      }
    }
    nextNodeIndex: 6
    hideIfUnavailable: true
  }
  branches {
    responseText: "I\'ve lived in the shadows - so give me someone who understands the life of a runner."
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 17
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "TalkAbout"
            }
          }
        }
        args {
          string_value: "shadowrunning"
        }
      }
    }
    nextNodeIndex: 7
    hideIfUnavailable: true
  }
  branches {
    responseText: "Got anyone that speaks Ganger - that\'s my language."
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 15
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "TalkAbout"
            }
          }
        }
        args {
          string_value: "ganger"
        }
      }
    }
    nextNodeIndex: 8
    hideIfUnavailable: true
  }
  branches {
    responseText: "I was born poor and on the street. Got anyone who\'s been there too?"
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 18
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "TalkAbout"
            }
          }
        }
        args {
          string_value: "street"
        }
      }
    }
    nextNodeIndex: 9
    hideIfUnavailable: true
  }
  branches {
    responseText: "I would appreciate conversing with someone of culture and sophistication. "
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 16
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "TalkAbout"
            }
          }
        }
        args {
          string_value: "culture"
        }
      }
    }
    nextNodeIndex: 10
    hideIfUnavailable: true
  }
  branches {
    responseText: "I prefer well thought out rigorous conversations, like those I treasured while at University. "
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 19
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "TalkAbout"
            }
          }
        }
        args {
          string_value: "academia"
        }
      }
    }
    nextNodeIndex: 11
    hideIfUnavailable: true
  }
  branches {
    responseText: "I would really like to talk to Jessica Watts. Can you direct me to her?"
    nextNodeIndex: 12
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "51eeb4913030313804004ecc"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51bb9286633635bc1e00191d"
  }
  index: 5
  text: ""
  branches {
    responseText: ""
    nextNodeIndex: 17
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51bb9286633635bc1e001923"
  }
  index: 6
  text: ""
  branches {
    responseText: ""
    nextNodeIndex: 17
    auxiliaryLink: true
  }
}
nodes {
  idRef {
    id: "51bb9286633635bc1e001929"
  }
  index: 7
  text: ""
  branches {
    responseText: ""
    nextNodeIndex: 17
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51bb9286633635bc1e00192f"
  }
  index: 8
  text: ""
  branches {
    responseText: ""
    nextNodeIndex: 17
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51bb9286633635bc1e001935"
  }
  index: 9
  text: ""
  branches {
    responseText: ""
    nextNodeIndex: 17
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51bb9286633635bc1e00193b"
  }
  index: 10
  text: ""
  branches {
    responseText: ""
    nextNodeIndex: 17
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51bd0b86633635681e001eef"
  }
  index: 11
  text: ""
  branches {
    responseText: ""
    nextNodeIndex: 17
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51bb9286633635bc1e001947"
  }
  index: 12
  text: "I\'m sorry but Grandmother Jessica is in the Inner Sanctum and cannot be disturbed."
  branches {
    responseText: ""
    nextNodeIndex: 13
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "InnerSanctum"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Breakin"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "51bb9286633635bc1e00194a"
  }
  index: 13
  text: ""
  branches {
    responseText: "Why did you call Jessica Watts Grandmother?"
    nextNodeIndex: 14
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "51c0ff14633635141d003b3f"
    }
  }
  branches {
    responseText: "Is Lynne Telestrian available?"
    nextNodeIndex: 15
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "51aeb04b633635500700181e"
    }
  }
  branches {
    responseText: "Inner Sanctum? Give me a better sense of the different areas of the Brotherhood?"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "Breakin"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 16
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "51bcb4b5633635d81600196d"
    }
  }
  branches {
    responseText: "Thanks, I\'m done asking questions."
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51bd0a99633635681e001ecc"
  }
  index: 14
  text: "Everyone in the Universal Brotherhood is a family member. We are all Brothers and Sisters, our leaders are Mothers and Fathers, and the matriarch of the Seattle chapter is called Grandmother. "
  branches {
    responseText: ""
    nextNodeIndex: 13
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51bd0a99633635681e001ed2"
  }
  index: 15
  text: "Mother Lynne left the building about 15 minutes ago. "
  branches {
    responseText: ""
    nextNodeIndex: 13
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51bd0a99633635681e001ed8"
  }
  index: 16
  text: "Sure. You are currently in the public area, behind it is what we call The Home which is where new Brothers and Sisters live. Beyond that is Inner Sanctum which only Mothers and Fathers and of course Grandmother Jessica can go."
  branches {
    responseText: ""
    nextNodeIndex: 13
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51bd0b2b633635681e001ee5"
  }
  index: 17
  text: "I know the perfect $(scene.BroSis) to speak with you, $(l.he) has a similar background and talks $(scene.TalkAbout). \n\nYou two would get along fabulously, but $(l.he) isn\'t in today and the rest of my counselor are currently booked.\n\nCould you come back tomorrow?"
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51eec21b303031a40c00100a"
  }
  index: 18
  text: "I am so glad I could help! By just walking through these doors you have taken the first steps along a path that will change you forever."
  nodeType: ConversationNodeType_Simple
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "hasDoneCouncilingIntro"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  nextNodeIndex: 0
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  nextNodeIndex: 4
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  nextNodeIndex: 17
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "hasDoneCouncilingIntro"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  nextNodeIndex: 18
}
