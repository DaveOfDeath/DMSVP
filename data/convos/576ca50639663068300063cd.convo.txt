idRef {
  id: "576ca50639663068300063cd"
}
ui_name: "c03-s1_Barrens_CoffinMotel"
nodes {
  idRef {
    id: "576ca55839663068300063da"
  }
  index: 0
  text: "{{GM}}The young Chinese woman behind the counter smiles at you as you approach.{{/GM}}\n\nWelcome to Stoker\'s, home of the no-questions-asked rental policy. What can I do for you today?"
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "576ca50639663068300063cd:576ce8053966307c1f00306e"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "576ce8053966307c1f003071"
  }
  index: 1
  text: ""
  branches {
    responseText: ""
    nextNodeIndex: -1
    idRef {
      id: "576ca50639663068300063cd:576ce92c3966307c1f0030ca"
    }
  }
  branches {
    responseText: "I was just in here, can you unlock my bunk?"
    nextNodeIndex: 2
    idRef {
      id: "576ca50639663068300063cd:576ca65a39663068300063dc"
    }
  }
  branches {
    responseText: "I\'m looking for Sam Watt\'s bunk."
    nextNodeIndex: 3
    idRef {
      id: "576ca50639663068300063cd:576ca65a39663068300063de"
    }
  }
  branches {
    responseText: "Where can I find out who is checked in here?"
    nextNodeIndex: 4
    idRef {
      id: "576ca50639663068300063cd:576ca65b39663068300063e0"
    }
  }
  branches {
    responseText: "Nothing, nevermind. {{CC}}Leave{{/CC}}"
    nextNodeIndex: -1
    idRef {
      id: "576ca50639663068300063cd:576ca65b39663068300063e2"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "Stoker\'s Loop"
}
nodes {
  idRef {
    id: "576ce8113966307c1f003078"
  }
  index: 2
  text: "{{GM}}She smiles at you.{{/GM}}\n\nNot to worry, all of our bunks are thumbprint-activated, so even if you forget your maglock keycard, you can open it with just your own biometrics!"
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "576ca50639663068300063cd:576ce83e3966307c1f00307a"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "576ce8483966307c1f00308c"
  }
  index: 3
  text: "{{GM}}A frown crosses her face, before blossoming back into a smile{{/GM}}\n\nI\'m not familiar with that name, you could check our guest registry and see if he or she is listed.\n\n{{GM}}She gestures to the touchscreen display on the counter.{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "576ca50639663068300063cd:576ce8a03966307c1f00308e"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "576ce8ab3966307c1f003093"
  }
  index: 4
  text: "{{GM}}The woman smiles at you{{/GM}}\n\nDue to our strict no-questions-asked policy, I can\'t require anyone to register, but most put in at least a pseudonym or street name so their friends can track them down. \n\n{{GM}}She gestures to the touchscreen display on the counter.{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "576ca50639663068300063cd:576ce8ae3966307c1f003095"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "576ca53239663068300063d5"
  }
  index: 5
  text: ""
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "576ca70539663068300063ff"
  }
  index: 6
  text: "{{GM}}The small touchscreen listing is heavily protected by reinforced glass and plasteel. {{/GM}}\n\nWelcome to Stoker\'s. Please select your option from those listed below."
  branches {
    responseText: ""
    nextNodeIndex: 7
    idRef {
      id: "576ca50639663068300063cd:576ca7743966306830006413"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "576ca7743966306830006416"
  }
  index: 7
  text: ""
  branches {
    responseText: "Redeem a reservation."
    nextNodeIndex: 8
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:576ca75e3966306830006401"
    }
  }
  branches {
    responseText: "Make a Reservation."
    nextNodeIndex: 9
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:576ca75e3966306830006403"
    }
  }
  branches {
    responseText: "Check current vacancies."
    nextNodeIndex: -1
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:576ca75e3966306830006405"
    }
  }
  branches {
    responseText: "Rent a Coffin."
    nextNodeIndex: -1
    idRef {
      id: "576ca50639663068300063cd:576ca8333966306830006440"
    }
  }
  branches {
    responseText: "Search Current Residents."
    nextNodeIndex: 10
    idRef {
      id: "576ca50639663068300063cd:576ca75e3966306830006407"
    }
  }
  branches {
    responseText: "Check Occupancy of a specific bunk."
    nextNodeIndex: -1
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:576ca75e3966306830006409"
    }
  }
  branches {
    responseText: "Power off Touchscreen."
    nextNodeIndex: -1
    idRef {
      id: "576ca50639663068300063cd:576ca772396630683000640b"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "Touchscreen loop"
}
nodes {
  idRef {
    id: "576ca7e1396630683000641f"
  }
  index: 8
  text: "RESERVATION SYSTEM IS CURRENTLY UNAVAILABLE."
  branches {
    responseText: ""
    nextNodeIndex: 7
    idRef {
      id: "576ca50639663068300063cd:576ca8063966306830006431"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "576ca50639663068300063cd:576ca8133966306830006437"
  }
  index: 9
  text: "RESERVATION SYSTEM IS CURRENTLY UNAVAILABLE."
  branches {
    responseText: ""
    nextNodeIndex: 7
    idRef {
      id: "576ca50639663068300063cd:576ca8133966306830006439"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "576ca8573966306830006443"
  }
  index: 10
  text: "{{CC}}Enter Resident:{{/CC}}"
  branches {
    responseText: "Dingleberry"
    nextNodeIndex: 11
    idRef {
      id: "576ca50639663068300063cd:576ca8823966306830006445"
    }
  }
  branches {
    responseText: "Ruskiface"
    nextNodeIndex: 12
    idRef {
      id: "576ca50639663068300063cd:576ca8a53966306830006447"
    }
  }
  nodeType: ConversationNodeType_InputKeyboard
  inputMaxLength: 11
}
nodes {
  idRef {
    id: "576ca8bb396630683000644a"
  }
  index: 11
  text: "Doctor Dirk Diggler is currently renting C4, but is not inhabiting his coffin."
  branches {
    responseText: ""
    nextNodeIndex: 7
    idRef {
      id: "576ca50639663068300063cd:576ca8e3396630683000644c"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "576ca8f23966306830006476"
  }
  index: 12
  text: "{{CC}}N&%#me C0rrup7ed{{/CC}}. Coffin C-7 is currently in executive lockdown mode. Access is not permitted."
  branches {
    responseText: ""
    nextNodeIndex: 7
    idRef {
      id: "576ca50639663068300063cd:576ca9373966306830006478"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
roots {
  responseText: ""
  nextNodeIndex: 0
  hideIfUnavailable: true
  idRef {
    id: "576ca50639663068300063cd:576ca53539663068300063d7"
  }
  comment: "Hasn\'t Visited Sam\'s Bunk"
}
roots {
  nextNodeIndex: 5
  hideIfUnavailable: true
  idRef {
    id: "576ca50639663068300063cd:576ca50639663068300063d1"
  }
  comment: "Has visited Sam\'s Bunk"
}
roots {
  responseText: ""
  nextNodeIndex: 6
  hideIfUnavailable: true
  idRef {
    id: "576ca50639663068300063cd:576ca69039663068300063fa"
  }
  comment: "Coffin Motel Listing"
}
roots {
  responseText: ""
  nextNodeIndex: -1
  hideIfUnavailable: true
  idRef {
    id: "576ca50639663068300063cd:576ca69039663068300063fc"
  }
  comment: "Sam\'s Bunk"
}
