idRef {
  id: "576ca50639663068300063cd"
}
ui_name: "c03-s1_Barrens_CoffinMotel"
nodes {
  idRef {
    id: "576ca55839663068300063da"
  }
  index: 0
  text: "{{GM}}The young Chinese woman behind the counter smiles at you as you approach.{{/GM}}\n\nWelcome to Stoker\'s, home of the no-questions-asked rental policy. What can I do for you today?"
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "576ca50639663068300063cd:576ce8053966307c1f00306e"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "576ce8053966307c1f003071"
  }
  index: 1
  text: ""
  branches {
    responseText: "I want to rent a bunk."
    nextNodeIndex: 2
    idRef {
      id: "576ca50639663068300063cd:5793993c613131dc2400285a"
    }
  }
  branches {
    responseText: "Stokers? I\'ve never heard of you before."
    nextNodeIndex: 18
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:576ce92c3966307c1f0030ca"
    }
  }
  branches {
    responseText: "I was just in here, can you unlock my bunk?"
    nextNodeIndex: 19
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:576ca65a39663068300063dc"
    }
  }
  branches {
    responseText: "Where can I find out who is checked in here?"
    nextNodeIndex: 20
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:576ca65b39663068300063e0"
    }
  }
  branches {
    responseText: "I\'m looking for Sam Watt\'s bunk."
    nextNodeIndex: 21
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:576ca65a39663068300063de"
    }
  }
  branches {
    responseText: "Doctor Dirk?"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bDoctorDirk"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Enable/Disable Interactable Object"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "EnableOrDisable"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (InteractableObject)"
            args {
              string_value: "575bc164613131943900679c"
            }
          }
        }
      }
    }
    nextNodeIndex: 22
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:5793cd11613131dc24004044"
    }
  }
  branches {
    responseText: "Have you met a guy, about 1.5 meters, 90 kilos, blond, drunk off his ass? "
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "b_AskSam"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "b_AskSam"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 32
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:5793cce3613131dc24004038"
    }
  }
  branches {
    responseText: "Thanks {{CC}}Leave{{/CC}}."
    nextNodeIndex: -1
    idRef {
      id: "576ca50639663068300063cd:576ca65b39663068300063e2"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "Stoker\'s Loop"
}
nodes {
  idRef {
    id: "57939946613131dc2400285d"
  }
  index: 2
  text: "{{GM}}The clerk beams a cheerfully practiced smile at you.{{/GM}}\n\nWelcome, valued customer! Slot your credstick in the reader to select a bunk."
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "576ca50639663068300063cd:57939994613131dc24002861"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "57939999613131dc24002864"
  }
  index: 3
  text: ""
  branches {
    responseText: "{{CC}}20\302\245{{/CC}} Rent a bunk."
    conditions {
      ops {
        functionName: "Evaluate Nuyen"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          int_value: 20
        }
      }
    }
    nextNodeIndex: 4
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:579399a0613131dc24002866"
    }
  }
  branches {
    responseText: "Why are they called coffins?"
    nextNodeIndex: 6
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:579399a0613131dc24002868"
    }
  }
  branches {
    responseText: "Have you met a guy, about 1.5 meters, 90 kilos, blond, drunk off his ass? "
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "b_AskSam"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "b_AskSam"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 7
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:579399a0613131dc2400286a"
    }
  }
  branches {
    responseText: "Doctor Dirk?"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bDoctorDirk"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Enable/Disable Interactable Object"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "EnableOrDisable"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (InteractableObject)"
            args {
              string_value: "575bc164613131943900679c"
            }
          }
        }
      }
    }
    nextNodeIndex: 8
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:579399a2613131dc2400286c"
    }
  }
  branches {
    responseText: "Nevermind, thanks. {{CC}}Leave.{{/CC}}"
    nextNodeIndex: -1
    idRef {
      id: "576ca50639663068300063cd:579399a2613131dc2400286e"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "Rental Loop"
}
nodes {
  idRef {
    id: "57939b33613131dc240029aa"
  }
  index: 4
  text: "{{GM}}You attempt to slot your credstick, but someone has stuck what you hope is chewing gum into the reader.{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 5
    idRef {
      id: "576ca50639663068300063cd:57939b4a613131dc240029ac"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "57939b6b613131dc240029af"
  }
  index: 5
  text: "{{GM}}The clerk maxes a vexed face.{{/GM}}\n\nDammit, I\'m sorry about that, I thought they fixed it. Some joker decided to put resin in it last week.\n\nI don\'t have your credstick on file, or I could just add the charge. My apologies!"
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "576ca50639663068300063cd:57939c15613131dc240029b1"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "57939c2e613131dc240029b5"
  }
  index: 6
  text: "{{GM}}The clerk nibbles on her lip as she looks away thoughtfully for a moment.{{/GM}}\n\nYou know, I\'m not sure? Maybe because they\'re small, or luxuriously furnished? Or you\'ll think you\'re in heaven after you sleep in one for the night?"
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "576ca50639663068300063cd:57939c7a613131dc240029b7"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "57939a0d613131dc24002871"
  }
  index: 7
  text: "{{GM}}The woman taps her lip, thinking for a moment.{{/GM}}\n\nThe man you\'re describing sounds like Doctor Dirk. "
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "576ca50639663068300063cd:57939a3b613131dc24002873"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bDoctorDirk"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "57939cd2613131dc240029bc"
  }
  index: 8
  text: "{{GM}}She shakes her head.{{/GM}}\n\nI don\'t think that was his real name, but it was the name on the certified credstick he gave me- I snuck a peek once. He was cute, and charming when he wasn\'t out of his mind. I haven\'t seen him for a while."
  branches {
    responseText: "You\'re not likely to, he was killed last night."
    nextNodeIndex: 9
    idRef {
      id: "576ca50639663068300063cd:57939d53613131dc240029be"
    }
  }
  branches {
    responseText: "He was murdered last night. Know anything about it?"
    nextNodeIndex: 17
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:57939db8613131dc240029c5"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bDoctorDirk"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "57939d5f613131dc240029c1"
  }
  index: 9
  text: "{{GM}}The clerk is shocked by this information, her eyes widening and her mouth forming an \'o\' of surprise.{{/GM}}\n\nOh, no, he died?"
  branches {
    responseText: ""
    nextNodeIndex: 10
    idRef {
      id: "576ca50639663068300063cd:57939d9b613131dc240029c3"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "57939dd1613131dc240029c8"
  }
  index: 10
  text: ""
  branches {
    responseText: "Dr Dirk Dingleberry was just his terrible alias."
    nextNodeIndex: 11
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:57939e3e613131dc240029d4"
    }
  }
  branches {
    responseText: "His real name was Sam Watts."
    nextNodeIndex: 12
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:57939e2e613131dc240029d2"
    }
  }
  branches {
    responseText: "Did he come in here often?"
    nextNodeIndex: 13
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:57939e3f613131dc240029d6"
    }
  }
  branches {
    responseText: "Where was his bunk?"
    actions {
      ops {
        functionName: "Set Waypoint on Prop"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "PrimaryOrSecondary"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Prop)"
            args {
              string_value: "575bc164613131943900679c"
            }
          }
        }
      }
    }
    nextNodeIndex: 14
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:57939e3f613131dc240029d8"
    }
  }
  branches {
    responseText: "You should report this to Lonestar. Keep my name out of it."
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bCoffinMotel_NotifyLS"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bCoffinMotel_NotifyLS"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 15
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:57939f27613131dc240029e8"
    }
  }
  branches {
    responseText: "If Lonestar comes asking questions, can you tell them you don\'t know about it?"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bCoffinMotel_NotifyLS"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bCoffinMotel_NotifyLS"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 16
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:57939f27613131dc240029ea"
    }
  }
  branches {
    responseText: "That\'s it for now."
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bCoffinMotel_NotifyLS"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    hideIfUnavailable: true
    idRef {
      id: "576ca50639663068300063cd:57e748e6663136201a007b46"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "Question_Clerk Loop"
}
nodes {
  idRef {
    id: "57939e59613131dc240029db"
  }
  index: 11
  text: "{{GM}}She rolls her eyes at you.{{/GM}}\n\nOf course. I\'ve seen a lot of fake names. We have Ruby Cheeks and Noddius Maximus among our current residents. There\'s even a guy named Ruskiface."
  branches {
    responseText: ""
    nextNodeIndex: 10
    idRef {
      id: "576ca50639663068300063cd:57939ec0613131dc240029dd"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "57939ed2613131dc240029e2"
  }
  index: 12
  text: "{{GM}}She nods, rubs her arms and crossing them.{{/GM}}\n\nThank you-- it\'s good to know. Sam Watts? He was cute, and funny when he wasn\'t smashed."
  branches {
    responseText: ""
    nextNodeIndex: 10
    idRef {
      id: "576ca50639663068300063cd:57939f0c613131dc240029e4"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "57939f57613131dc240029ed"
  }
  index: 13
  text: "{{GM}}The clerk nods.{{/GM}}\n\nYes, he was in here most every night. I think he was living in the bunk, although he\'d be gone for a few days at a time. "
  branches {
    responseText: ""
    nextNodeIndex: 10
    idRef {
      id: "576ca50639663068300063cd:57939f9b613131dc240029ef"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "57939fbf613131dc24002a11"
  }
  index: 14
  text: "{{GM}}She looks at her digital readout.{{/GM}}\n\nHe- he was in C4. Left wall, about three rows in. His credstick was almost out of funds, I was going to purge it at the end of my shift."
  branches {
    responseText: ""
    nextNodeIndex: 10
    idRef {
      id: "576ca50639663068300063cd:5793a010613131dc24002a13"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "575bc164613131943900679c"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "5793a05b613131dc24002a84"
  }
  index: 15
  text: "{{GM}}She nods, skittishly.{{/GM}}\n\nI\'ll let them know that I heard Sam was dead, and that he was sleeping in one of the bunks here."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "576ca50639663068300063cd:5793a215613131dc24002b0a"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5793a231613131dc24002b7d"
  }
  index: 16
  text: "{{GM}}She nods.{{/GM}}\n\nI\'ll keep it ready in case you want to check it out, but I\'ll keep the brass away from it."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "576ca50639663068300063cd:5793a259613131dc24002b7f"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "57939de2613131dc240029cb"
  }
  index: 17
  text: "{{GM}}The clerk\'s face whitens, and her eyes widen. She begins toying with her commlink nervously.{{/GM}}\n\nDid- did the Ripper get him? Or was it just a random shooting? Oh God, I can\'t believe he\'s dead."
  branches {
    responseText: ""
    nextNodeIndex: 10
    idRef {
      id: "576ca50639663068300063cd:57939e24613131dc240029cd"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "57939879613131dc24002835"
  }
  index: 18
  text: "{{GM}}The clerk smiles, and shrugs{{/GM}}\n\nThe Stoker\'s Motel chain is a multinational corporation, but I don\'t know where you\'ve been that you\'ve never seen them before. We\'re famous for our no-questions-asked policy. We\'ll rent a coffin to you, no questions asked, as long as you can pay for the one-hour deposit."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "576ca50639663068300063cd:579398e6613131dc24002857"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "576ce8113966307c1f003078"
  }
  index: 19
  text: "{{GM}}She smiles at you.{{/GM}}\n\nNot to worry, all of our bunks are thumbprint-activated, so even if you forget your maglock keycard, you can open it with just your own biometrics!"
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "576ca50639663068300063cd:576ce83e3966307c1f00307a"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "576ce8ab3966307c1f003093"
  }
  index: 20
  text: "{{GM}}The woman smiles at you{{/GM}}\n\nDue to our strict no-questions-asked policy, I can\'t require anyone to register, but most people put in at least a pseudonym or street name so their friends can find them in case of emergencies. \n\n{{GM}}She gestures to the touchscreen display on the counter.{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "576ca50639663068300063cd:576ce8ae3966307c1f003095"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "576ce8483966307c1f00308c"
  }
  index: 21
  text: "{{GM}}A frown crosses her face, before blossoming back into a smile{{/GM}}\n\nI\'m not familiar anyone by that name, you could check our guest registry and see if he or she is listed.\n\n{{GM}}She gestures to the touchscreen display on the counter.{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "576ca50639663068300063cd:576ce8a03966307c1f00308e"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "576ca50639663068300063cd:5793cd11613131dc24004046"
  }
  index: 22
  text: "{{GM}}She shakes her head.{{/GM}}\n\nI don\'t think that was his real name, but it was the name on the certified credstick he gave me- I snuck a peek once. He was cute, and charming when he wasn\'t out of his mind. I haven\'t seen him for a while."
  branches {
    responseText: "You\'re not likely to, he was killed last night."
    nextNodeIndex: 23
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:5793cd11613131dc24004048"
    }
  }
  branches {
    responseText: "He was murdered last night. Know anything about it?"
    nextNodeIndex: 31
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:5793cd11613131dc24004080"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bDoctorDirk"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "576ca50639663068300063cd:5793cd11613131dc2400404a"
  }
  index: 23
  text: "{{GM}}The clerk is shocked by this information, her eyes widening and her mouth forming an \'o\' of surprise.{{/GM}}\n\nOh, no, he died?"
  branches {
    responseText: ""
    nextNodeIndex: 24
    idRef {
      id: "576ca50639663068300063cd:5793cd11613131dc2400404c"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "576ca50639663068300063cd:5793cd11613131dc2400404e"
  }
  index: 24
  text: ""
  branches {
    responseText: "Dr Dirk Dingleberry was just his terrible alias."
    nextNodeIndex: 25
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:5793cd11613131dc24004050"
    }
  }
  branches {
    responseText: "His real name was Sam Watts."
    nextNodeIndex: 26
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:5793cd11613131dc24004058"
    }
  }
  branches {
    responseText: "Did he come in here often?"
    nextNodeIndex: 27
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:5793cd11613131dc24004060"
    }
  }
  branches {
    responseText: "Where was his bunk?"
    actions {
      ops {
        functionName: "Set Waypoint on Prop"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "PrimaryOrSecondary"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Prop)"
            args {
              string_value: "575bc164613131943900679c"
            }
          }
        }
      }
    }
    nextNodeIndex: 28
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:5793cd11613131dc24004068"
    }
  }
  branches {
    responseText: "You should report this to Lonestar. Keep my name out of it."
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bCoffinMotel_NotifyLS"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bCoffinMotel_NotifyLS"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 29
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:5793cd11613131dc24004070"
    }
  }
  branches {
    responseText: "If Lonestar comes asking questions, can you tell them you don\'t know about it?"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bCoffinMotel_NotifyLS"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bCoffinMotel_NotifyLS"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 30
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:5793cd11613131dc24004078"
    }
  }
  branches {
    responseText: "Thats it for now."
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bCoffinMotel_NotifyLS"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    hideIfUnavailable: true
    idRef {
      id: "576ca50639663068300063cd:57e748ad663136201a007b44"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "Question_Clerk Loop"
}
nodes {
  idRef {
    id: "576ca50639663068300063cd:5793cd11613131dc24004052"
  }
  index: 25
  text: "{{GM}}She rolls her eyes at you.{{/GM}}\n\nOf course. I\'ve seen a lot of fake names. We have Ruby Cheeks and Noddius Maximus among our current residents. There\'s even a guy named Ruskiface."
  branches {
    responseText: ""
    nextNodeIndex: 24
    idRef {
      id: "576ca50639663068300063cd:5793cd11613131dc24004054"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "576ca50639663068300063cd:5793cd11613131dc2400405a"
  }
  index: 26
  text: "{{GM}}She nods, rubs her arms and crossing them.{{/GM}}\n\nThank you-- it\'s good to know. Sam Watts? He was cute, and funny when he wasn\'t smashed."
  branches {
    responseText: ""
    nextNodeIndex: 24
    idRef {
      id: "576ca50639663068300063cd:5793cd11613131dc2400405c"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "576ca50639663068300063cd:5793cd11613131dc24004062"
  }
  index: 27
  text: "{{GM}}The clerk nods.{{/GM}}\n\nYes, he was in here most every night. I think he was living in the bunk, although he\'d be gone for a few days at a time. "
  branches {
    responseText: ""
    nextNodeIndex: 24
    idRef {
      id: "576ca50639663068300063cd:5793cd11613131dc24004064"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "576ca50639663068300063cd:5793cd11613131dc2400406a"
  }
  index: 28
  text: "{{GM}}She looks at her digital readout.{{/GM}}\n\nHe- he was in C4. Left wall, about three rows in. His credstick was almost out of funds, I was going to purge it at the end of my shift."
  branches {
    responseText: ""
    nextNodeIndex: 24
    idRef {
      id: "576ca50639663068300063cd:5793cd11613131dc2400406c"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "575bc164613131943900679c"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "576ca50639663068300063cd:5793cd11613131dc24004072"
  }
  index: 29
  text: "{{GM}}She nods, skittishly.{{/GM}}\n\nI\'ll let them know that I heard Sam was dead, and that he was sleeping in one of the bunks here."
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "576ca50639663068300063cd:5793cd11613131dc2400407a"
  }
  index: 30
  text: "{{GM}}She nods.{{/GM}}\n\nI\'ll keep it ready in case you want to check it out, but I\'ll keep the brass away from it."
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "576ca50639663068300063cd:5793cd11613131dc24004082"
  }
  index: 31
  text: "{{GM}}The clerk\'s face whitens, and her eyes widen. She begins toying with her commlink nervously.{{/GM}}\n\nDid- did the Ripper get him? Or was it just a random shooting? Oh God, I can\'t believe he\'s dead."
  branches {
    responseText: ""
    nextNodeIndex: 24
    idRef {
      id: "576ca50639663068300063cd:5793cd11613131dc24004084"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "576ca50639663068300063cd:5793cce3613131dc2400403a"
  }
  index: 32
  text: "{{GM}}The woman taps her lip, thinking for a moment.{{/GM}}\n\nThe man you\'re describing sounds like Doctor Dirk. "
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "576ca50639663068300063cd:5793cce3613131dc2400403c"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bDoctorDirk"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "576ca53239663068300063d5"
  }
  index: 33
  text: "{{GM}}The clerk smiles at your approach.{{/GM}}\n\nDid you find what you need?"
  branches {
    responseText: ""
    nextNodeIndex: 34
    idRef {
      id: "576ca50639663068300063cd:5793a2a3613131dc24002b88"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5793a2a3613131dc24002b8b"
  }
  index: 34
  text: ""
  branches {
    responseText: "{{CC}}BTL Chip{{/CC}}"
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Sam\'s BTL chip"
            }
          }
        }
      }
    }
    nextNodeIndex: 35
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:5793a285613131dc24002b82"
    }
  }
  branches {
    responseText: "{{CC}}Golden Lighter{{/CC}} Have you ever seen this lighter before?"
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "c02-s1_JakesLighter"
            }
          }
        }
      }
    }
    nextNodeIndex: 50
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:5793a28f613131dc24002b84"
    }
  }
  branches {
    responseText: "I want to rent a bunk."
    nextNodeIndex: 54
    idRef {
      id: "576ca50639663068300063cd:5793afb0613131dc24002f88"
    }
  }
  branches {
    responseText: "Thanks {{CC}}Leave.{{/CC}}"
    nextNodeIndex: -1
    idRef {
      id: "576ca50639663068300063cd:5793acaf613131dc24002d27"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "Return Loop"
}
nodes {
  idRef {
    id: "5793a2b0613131dc24002b90"
  }
  index: 35
  text: "{{GM}}The clerk makes a disgusted noise.{{/GM}}\n\nI didn\'t know he was burning chips in there. Gross."
  branches {
    responseText: ""
    nextNodeIndex: 36
    idRef {
      id: "576ca50639663068300063cd:5793a2ed613131dc24002b9b"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5793a2ed613131dc24002b9e"
  }
  index: 36
  text: ""
  branches {
    responseText: "Chips, booze, smoggers, drugs, and pretty much everything he could get his hands on."
    nextNodeIndex: 37
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:5793a2d4613131dc24002b92"
    }
  }
  branches {
    responseText: "He wasn\'t a bad guy, he just had bad habits."
    nextNodeIndex: 38
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:5793a2d4613131dc24002b94"
    }
  }
  branches {
    responseText: "Did he have any friends?"
    nextNodeIndex: 39
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:5793a53f613131dc24002bb8"
    }
  }
  branches {
    responseText: "Has anyone else been here, asking after him?"
    nextNodeIndex: 41
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:5793a2d4613131dc24002b96"
    }
  }
  branches {
    responseText: "How long is his bunk paid for?"
    nextNodeIndex: 42
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:5793a6d5613131dc24002c5a"
    }
  }
  branches {
    responseText: "Can you just get rid of everything in there?"
    nextNodeIndex: 43
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:5793a773613131dc24002c63"
    }
  }
  branches {
    responseText: "Anything else you can think of?"
    nextNodeIndex: 46
    idRef {
      id: "576ca50639663068300063cd:5793a693613131dc24002c52"
    }
  }
  branches {
    responseText: "Thanks."
    nextNodeIndex: 34
    idRef {
      id: "576ca50639663068300063cd:5793a69c613131dc24002c54"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  comment: "Second Round Questions"
}
nodes {
  idRef {
    id: "5793a396613131dc24002ba4"
  }
  index: 37
  text: "{{GM}}The clerk sticks her tongue out.{{/GM}}\n\nGross.  I knew he\'d sleep off a bender here, but I didn\'t know he did all those drugs."
  branches {
    responseText: ""
    nextNodeIndex: 36
    idRef {
      id: "576ca50639663068300063cd:5793a42b613131dc24002ba6"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5793a47b613131dc24002bb6"
  }
  index: 38
  text: "{{GM}}The clerk stares out through the window.{{/GM}}\n\nYeah, I just can\'t believe that he\'s really dead."
  branches {
    responseText: ""
    nextNodeIndex: 36
    idRef {
      id: "576ca50639663068300063cd:5793a54c613131dc24002bba"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5793a59f613131dc24002bbf"
  }
  index: 39
  text: "{{GM}}She shrugs{{/GM}}\n\nHe would occasionally bring a \'friend\' back with him. I don\'t know if they were professionals or just too down on their luck to afford their own coffin."
  branches {
    responseText: ""
    nextNodeIndex: 40
    idRef {
      id: "576ca50639663068300063cd:5793a5ed613131dc24002bc1"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5793a5ef613131dc24002bc4"
  }
  index: 40
  text: "{{GM}}She brightens, holding up a finger.{{/GM}}\n\nHe mentioned Bobby a few times. Bobby sells to the crowd outside the Seamstress\' Union."
  branches {
    responseText: ""
    nextNodeIndex: 36
    idRef {
      id: "576ca50639663068300063cd:5793a67a613131dc24002c4c"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5793a68e613131dc24002c50"
  }
  index: 41
  text: "{{GM}}She shakes her head.{{/GM}}\n\nYou\'re the first one to ask about him at all."
  branches {
    responseText: ""
    nextNodeIndex: 36
    idRef {
      id: "576ca50639663068300063cd:5793a6cf613131dc24002c56"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5793a6e2613131dc24002c5d"
  }
  index: 42
  text: "{{GM}}The clerk shrugs.{{/GM}}\n\nHe had a balance remaining on the credstick, but I can just schedule it for a deep cleaning, which we have to do when someone really gross rents out a coffin. That will give you a few days at least before I purge the contents."
  branches {
    responseText: ""
    nextNodeIndex: 36
    idRef {
      id: "576ca50639663068300063cd:5793a747613131dc24002c5f"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5793a783613131dc24002c66"
  }
  index: 43
  text: "{{GM}}She nods.{{/GM}}\n\nYou want me to purge it? Our contract stipulates that when a resident checks out, we clean the bunk and incinerate anything left behind. Do you want me to do that?"
  branches {
    responseText: "Yes."
    nextNodeIndex: 44
    idRef {
      id: "576ca50639663068300063cd:5793a7d2613131dc24002c68"
    }
  }
  branches {
    responseText: "Not yet, I want to check it out first."
    nextNodeIndex: 45
    idRef {
      id: "576ca50639663068300063cd:5793a7d2613131dc24002c6a"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "No, in case I need to check it out again."
    nextNodeIndex: 45
    idRef {
      id: "576ca50639663068300063cd:5793a7e4613131dc24002c6c"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5793a8b5613131dc24002c76"
  }
  index: 44
  text: "{{GM}}The clerk hesitates, and eventually nods.{{/GM}}\n\nI\'ll schedule it for a purge at the end of my shift. Come back before then if you change your mind."
  branches {
    responseText: ""
    nextNodeIndex: 36
    idRef {
      id: "576ca50639663068300063cd:5793a8de613131dc24002c78"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5793a887613131dc24002c6f"
  }
  index: 45
  text: "{{GM}}She nods.{{/GM}}\n\n I can wait three days before purging it. Find some payment before then, and I\'ll keep it open."
  branches {
    responseText: ""
    nextNodeIndex: 36
    idRef {
      id: "576ca50639663068300063cd:5793a8aa613131dc24002c71"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5793a904613131dc24002c84"
  }
  index: 46
  text: "{{GM}}She thinks about it for a moment, and then shakes her head.{{/GM}}\n\nI can\'t think of anything related to Doc-- I mean, Sam."
  branches {
    responseText: ""
    nextNodeIndex: 47
    idRef {
      id: "576ca50639663068300063cd:5793a99c613131dc24002c86"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5793a99e613131dc24002c89"
  }
  index: 47
  text: "{{GM}}She pauses for an extra second.{{/GM}}\n\nI-- there was this creepy troll hanging around a day or so ago. Maybe two? Dirty, lots of cyber, a big mechanical arm?"
  branches {
    responseText: "Troll?"
    conditions {
      ops {
        functionName: "Compare Actor Race"
        args {
          call_value {
            functionName: "Triggering Actor"
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Race"
            }
            args {
              int_value: 4
            }
          }
        }
      }
    }
    nextNodeIndex: 48
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:5793a9f7613131dc24002c92"
    }
  }
  branches {
    responseText: "Troll?"
    conditions {
      ops {
        functionName: "Compare Actor Race"
        args {
          call_value {
            functionName: "Triggering Actor"
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Race"
            }
            args {
              int_value: 4
            }
          }
        }
      }
    }
    nextNodeIndex: 49
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:5793a9dc613131dc24002c90"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5793aa4c613131dc24002c98"
  }
  index: 48
  text: "{{GM}}She nods, hesitant to share.{{/GM}}\n\nHe was a troll, but not like you. He had a bunch of chipjacks, and a scary cyberarm covered with needles and vials. Who knows what other mods.\n\n{{GM}}She shivers.{{/GM}}\n\nJust-- I didn\'t feel safe with him around. He wasn\'t right."
  branches {
    responseText: ""
    nextNodeIndex: 34
    idRef {
      id: "576ca50639663068300063cd:5793d053613131dc24004af5"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5793aa08613131dc24002c95"
  }
  index: 49
  text: "{{GM}}She nods.{{/GM}}\n\nHe creeped me out, just walked around the area for like six hours. \nYou know, a troll that big and with that much cyber- that\'s just a killing machine."
  branches {
    responseText: ""
    nextNodeIndex: 34
    idRef {
      id: "576ca50639663068300063cd:5793d05a613131dc24004af8"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5793ac71613131dc24002cb2"
  }
  index: 50
  text: "{{GM}}She looks at the lighter for a few seconds before shaking her head.{{/GM}}\n\nNo, I don\'t think I\'ve ever seen a lighter like that before. Is it related to the murder?"
  branches {
    responseText: "I\'m not sure, just following a lead."
    nextNodeIndex: 51
    idRef {
      id: "576ca50639663068300063cd:5793ad39613131dc24002e5e"
    }
  }
  branches {
    responseText: "I think so, it was near where he was killed."
    nextNodeIndex: 52
    idRef {
      id: "576ca50639663068300063cd:5793acfb613131dc24002da2"
    }
  }
  branches {
    responseText: "Maybe. I\'m just seeing who it belongs to."
    nextNodeIndex: 53
    idRef {
      id: "576ca50639663068300063cd:5793ad3a613131dc24002e60"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5793add9613131dc24002e63"
  }
  index: 51
  text: "{{GM}}She nods.{{/GM}}\n\nOkay, so what can I help you with?"
  branches {
    responseText: ""
    nextNodeIndex: 34
    idRef {
      id: "576ca50639663068300063cd:5793adf3613131dc24002ee1"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5793adf8613131dc24002ee5"
  }
  index: 52
  text: "{{GM}}She looks at it again, more closely this time.{{/GM}}\n\nI don\'t know it. What is JA?"
  branches {
    responseText: "I don\'t know."
    nextNodeIndex: 51
    idRef {
      id: "576ca50639663068300063cd:5793ae77613131dc24002ee7"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5793ae9a613131dc24002ef3"
  }
  index: 53
  text: "{{GM}}The clerk shrugs.{{/GM}}\n\nMakes sense."
  branches {
    responseText: ""
    nextNodeIndex: 34
    idRef {
      id: "576ca50639663068300063cd:5793af2f613131dc24002ef5"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "576ca50639663068300063cd:5793afb0613131dc24002f8a"
  }
  index: 54
  text: "{{GM}}The clerk beams a cheerfully practiced smile at you.{{/GM}}\n\nWelcome, valued customer! Slot your credstick in the reader to select a bunk."
  branches {
    responseText: ""
    nextNodeIndex: 55
    idRef {
      id: "576ca50639663068300063cd:5793afb0613131dc24002f8c"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "576ca50639663068300063cd:5793afb0613131dc24002f8e"
  }
  index: 55
  text: ""
  branches {
    responseText: "{{CC}}20\302\245{{/CC}} Rent a bunk."
    conditions {
      ops {
        functionName: "Evaluate Nuyen"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          int_value: 20
        }
      }
    }
    nextNodeIndex: 56
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:5793afb0613131dc24002f90"
    }
  }
  branches {
    responseText: "Have you met a guy, about 1.5 meters, 90 kilos, blond, drunk off his ass? "
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "b_AskSam"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "b_AskSam"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 57
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:5793afb0613131dc24002fa4"
    }
  }
  branches {
    responseText: "You mentioned a \'Doctor Dirk\'?"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bDoctorDirk"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 58
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:5793afb0613131dc24002fac"
    }
  }
  branches {
    responseText: "Nevermind, thanks. {{CC}}Leave.{{/CC}}"
    nextNodeIndex: -1
    idRef {
      id: "576ca50639663068300063cd:5793afb0613131dc24002ff0"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "Return Rental Loop"
}
nodes {
  idRef {
    id: "576ca50639663068300063cd:5793afb0613131dc24002f92"
  }
  index: 56
  text: "{{GM}}The clerk maxes a vexed face.{{/GM}}\n\nI\'m sorry, but someone gummed up my credstick reader, so I can\'t rent any bunks until the tech comes out to fix it."
  branches {
    responseText: ""
    nextNodeIndex: 55
    idRef {
      id: "576ca50639663068300063cd:5793afb0613131dc24002f94"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "576ca50639663068300063cd:5793afb0613131dc24002fa6"
  }
  index: 57
  text: "{{GM}}The woman taps her lip, thinking for a moment.{{/GM}}\n\nThe man you\'re describing sounds like Doctor Dirk. "
  branches {
    responseText: ""
    nextNodeIndex: 55
    idRef {
      id: "576ca50639663068300063cd:5793afb0613131dc24002fa8"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bDoctorDirk"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "576ca50639663068300063cd:5793afb0613131dc24002fae"
  }
  index: 58
  text: "{{GM}}She shakes her head.{{/GM}}\n\nI don\'t think that was his real name, but it was the name on the certified credstick he gave me- I snuck a peek once. He was cute, and charming when he wasn\'t out of his mind. I haven\'t seen him for a while."
  branches {
    responseText: "You\'re not likely to, he was killed last night."
    nextNodeIndex: 59
    idRef {
      id: "576ca50639663068300063cd:5793afb0613131dc24002fb0"
    }
  }
  branches {
    responseText: "He was murdered last night. Know anything about it?"
    nextNodeIndex: 67
    idRef {
      id: "576ca50639663068300063cd:5793afb0613131dc24002fe8"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "576ca50639663068300063cd:5793afb0613131dc24002fb2"
  }
  index: 59
  text: "{{GM}}The clerk is shocked by this information, her eyes widening and her mouth forming an \'o\' of surprise.{{/GM}}\n\nOh, no, he died?"
  branches {
    responseText: ""
    nextNodeIndex: 60
    idRef {
      id: "576ca50639663068300063cd:5793afb0613131dc24002fb4"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "576ca50639663068300063cd:5793afb0613131dc24002fb6"
  }
  index: 60
  text: ""
  branches {
    responseText: "Dr Dirk Dingleberry was just his terrible alias."
    nextNodeIndex: 61
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:5793afb0613131dc24002fb8"
    }
  }
  branches {
    responseText: "His real name was Sam Watts."
    nextNodeIndex: 62
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:5793afb0613131dc24002fc0"
    }
  }
  branches {
    responseText: "Did he come in here often?"
    nextNodeIndex: 63
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:5793afb0613131dc24002fc8"
    }
  }
  branches {
    responseText: "Where was his bunk?"
    nextNodeIndex: 64
    idRef {
      id: "576ca50639663068300063cd:5793afb0613131dc24002fd0"
    }
  }
  branches {
    responseText: "You should report this to Lonestar. Keep my name out of it."
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bCoffinMotel_NotifyLS"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bCoffinMotel_NotifyLS"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 65
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:5793afb0613131dc24002fd8"
    }
  }
  branches {
    responseText: "If Lonestar comes asking questions, can you tell them you don\'t know about it?"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bCoffinMotel_NotifyLS"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bCoffinMotel_NotifyLS"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 66
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:5793afb0613131dc24002fe0"
    }
  }
  branches {
    responseText: "That\'s it for now."
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bCoffinMotel_NotifyLS"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    hideIfUnavailable: true
    idRef {
      id: "576ca50639663068300063cd:57e74971663136201a007b48"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "Question_Clerk Loop"
}
nodes {
  idRef {
    id: "576ca50639663068300063cd:5793afb0613131dc24002fba"
  }
  index: 61
  text: "{{GM}}She rolls her eyes at you.{{/GM}}\n\nOf course. I\'ve seen a lot of fake names. We have Ruby Cheeks and Noddius Maximus among our current residents. There\'s even a guy named Ruskiface."
  branches {
    responseText: ""
    nextNodeIndex: 60
    idRef {
      id: "576ca50639663068300063cd:5793afb0613131dc24002fbc"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "576ca50639663068300063cd:5793afb0613131dc24002fc2"
  }
  index: 62
  text: "{{GM}}She nods, rubs her arms and crossing them.{{/GM}}\n\nThank you-- it\'s good to know. Sam Watts? He was cute, and funny when he wasn\'t smashed."
  branches {
    responseText: ""
    nextNodeIndex: 60
    idRef {
      id: "576ca50639663068300063cd:5793afb0613131dc24002fc4"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "576ca50639663068300063cd:5793afb0613131dc24002fca"
  }
  index: 63
  text: "{{GM}}The clerk nods.{{/GM}}\n\nYes, he was in here most every night. I think he was living in the bunk, although he\'d be gone for a few days at a time. "
  branches {
    responseText: ""
    nextNodeIndex: 60
    idRef {
      id: "576ca50639663068300063cd:5793afb0613131dc24002fcc"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "576ca50639663068300063cd:5793afb0613131dc24002fd2"
  }
  index: 64
  text: "{{GM}}She looks at her digital readout.{{/GM}}\n\nHe- he was in C4. Left wall, about three rows in. His credstick was almost out of funds, I was going to purge it at the end of my shift."
  branches {
    responseText: ""
    nextNodeIndex: 60
    idRef {
      id: "576ca50639663068300063cd:5793afb0613131dc24002fd4"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "575cb0586631365813000d7f"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "576ca50639663068300063cd:5793afb0613131dc24002fda"
  }
  index: 65
  text: "{{GM}}She nods, skittishly.{{/GM}}\n\nI\'ll let them know that I heard Sam was dead, and that he was sleeping in one of the bunks here."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "576ca50639663068300063cd:5793afb0613131dc24002fdc"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "576ca50639663068300063cd:5793afb0613131dc24002fe2"
  }
  index: 66
  text: "{{GM}}She nods.{{/GM}}\n\nI\'ll keep it ready in case you want to check it out, but I\'ll keep the brass away from it."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "576ca50639663068300063cd:5793afb0613131dc24002fe4"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "576ca50639663068300063cd:5793afb0613131dc24002fea"
  }
  index: 67
  text: "{{GM}}The clerk\'s face whitens, and her eyes widen. She begins toying with her commlink nervously.{{/GM}}\n\nDid- did the Ripper get him? Or was it just a random shooting? Oh God, I can\'t believe he\'s dead."
  branches {
    responseText: ""
    nextNodeIndex: 60
    idRef {
      id: "576ca50639663068300063cd:5793afb0613131dc24002fec"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "576ca70539663068300063ff"
  }
  index: 68
  text: "{{GM}}The small touchscreen listing is heavily protected by reinforced glass and plasteel. {{/GM}}\n\nWelcome to Stoker\'s. Please select your option from those listed below."
  branches {
    responseText: ""
    nextNodeIndex: 69
    idRef {
      id: "576ca50639663068300063cd:576ca7743966306830006413"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "576ca7743966306830006416"
  }
  index: 69
  text: ""
  branches {
    responseText: "Redeem a reservation."
    nextNodeIndex: 70
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:576ca75e3966306830006401"
    }
  }
  branches {
    responseText: "Make a Reservation."
    nextNodeIndex: 71
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:576ca75e3966306830006403"
    }
  }
  branches {
    responseText: "Rent a Coffin."
    actions {
      ops {
        functionName: "Add To Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "iInteractCoffinCount"
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    nextNodeIndex: 72
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:576ca8333966306830006440"
    }
  }
  branches {
    responseText: "What the hell? Why is this all broken?"
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "iInteractCoffinCount"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          int_value: 3
        }
      }
    }
    nextNodeIndex: 73
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:57938bc7613131dc240026bc"
    }
  }
  branches {
    responseText: "Check current vacancies."
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "i_Random"
            }
          }
        }
        args {
          call_value {
            functionName: "Random (int)"
            args {
              int_value: 7
            }
            args {
              int_value: 23
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "s_Talk"
            }
          }
        }
        args {
          call_value {
            functionName: "Convert (int) to (string)"
            args {
              call_value {
                functionName: "Get Variable (int)"
                args {
                  string_value: "i_Random"
                }
              }
            }
          }
        }
      }
    }
    nextNodeIndex: 74
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:576ca75e3966306830006405"
    }
  }
  branches {
    responseText: "Search Current Residents."
    nextNodeIndex: 75
    idRef {
      id: "576ca50639663068300063cd:576ca75e3966306830006407"
    }
  }
  branches {
    responseText: "Check Occupancy of a specific coffin."
    nextNodeIndex: 80
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:576ca75e3966306830006409"
    }
  }
  branches {
    responseText: "Power off Touchscreen."
    nextNodeIndex: -1
    idRef {
      id: "576ca50639663068300063cd:576ca772396630683000640b"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "Touchscreen loop"
}
nodes {
  idRef {
    id: "576ca7e1396630683000641f"
  }
  index: 70
  text: "{{CC}}RESERVATION SYSTEM IS CURRENTLY UNAVAILABLE. SPEAK TO THE HOSPITALITY CLERK.{{/CC}}"
  branches {
    responseText: ""
    nextNodeIndex: 69
    idRef {
      id: "576ca50639663068300063cd:576ca8063966306830006431"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iInteractCoffinCount"
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
}
nodes {
  idRef {
    id: "576ca50639663068300063cd:576ca8133966306830006437"
  }
  index: 71
  text: "{{CC}}RESERVATION SYSTEM IS CURRENTLY UNAVAILABLE. SPEAK TO THE HOSPITALITY CLERK.{{/CC}}"
  branches {
    responseText: ""
    nextNodeIndex: 69
    idRef {
      id: "576ca50639663068300063cd:576ca8133966306830006439"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iInteractCoffinCount"
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
}
nodes {
  idRef {
    id: "57938c06613131dc240026bf"
  }
  index: 72
  text: "{{CC}}ERRORERRORERROR{{/CC}}\n\nCREDSTICK READER UNAVAILABLE. PLEASE SPEAK TO HOSPITALITY CLERK."
  branches {
    responseText: ""
    nextNodeIndex: 69
    idRef {
      id: "576ca50639663068300063cd:57938c21613131dc240026c1"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "57938c4a613131dc240026fb"
  }
  index: 73
  text: "{{GM}}The young woman smiles at you.{{/GM}}\n\nI apologize, it sometimes gets fixed between shifts, I didn\'t know it was still broken."
  branches {
    responseText: ""
    nextNodeIndex: 69
    idRef {
      id: "576ca50639663068300063cd:57938c81613131dc240026fd"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "576ca42539663068300063cc"
  }
}
nodes {
  idRef {
    id: "5793b170613131dc24003251"
  }
  index: 74
  text: "{{CC}}THERE ARE <$(scene.s_Talk)> LISTED VACANCIES AT THIS TIME.{{/CC}}"
  branches {
    responseText: ""
    nextNodeIndex: 69
    idRef {
      id: "576ca50639663068300063cd:5793b18b613131dc24003293"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "576ca8573966306830006443"
  }
  index: 75
  text: "{{CC}}Enter Resident:{{/CC}}"
  branches {
    responseText: "Dingleberry"
    actions {
      ops {
        functionName: "Enable/Disable Interactable Object"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "EnableOrDisable"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (InteractableObject)"
            args {
              string_value: "575bc164613131943900679c"
            }
          }
        }
      }
    }
    nextNodeIndex: 76
    hideIfUnavailable: true
    idRef {
      id: "576ca50639663068300063cd:576ca8823966306830006445"
    }
  }
  branches {
    responseText: "Ruskiface"
    nextNodeIndex: 77
    hideIfUnavailable: true
    idRef {
      id: "576ca50639663068300063cd:576ca8a53966306830006447"
    }
  }
  branches {
    responseText: "Ruby Cheeks"
    nextNodeIndex: 78
    hideIfUnavailable: true
    idRef {
      id: "576ca50639663068300063cd:57937f99613131dc24002641"
    }
  }
  branches {
    responseText: "Maximus"
    nextNodeIndex: 79
    hideIfUnavailable: true
    idRef {
      id: "576ca50639663068300063cd:5793b2cf613131dc24003381"
    }
  }
  nodeType: ConversationNodeType_InputKeyboard
  inputMaxLength: 11
}
nodes {
  idRef {
    id: "576ca8bb396630683000644a"
  }
  index: 76
  text: "{{CC}}Doctor Dirk Dingleberry is currently renting C4, but is not inhabiting his coffin.{{/CC}}"
  branches {
    responseText: ""
    nextNodeIndex: 69
    idRef {
      id: "576ca50639663068300063cd:576ca8e3396630683000644c"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "576ca8f23966306830006476"
  }
  index: 77
  text: "{{CC}}N&%#me C0rrup7ed{{/CC}}. Coffin C-7 is currently in executive lockdown mode. Access is not permitted."
  branches {
    responseText: ""
    nextNodeIndex: 69
    idRef {
      id: "576ca50639663068300063cd:576ca9373966306830006478"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5793b2eb613131dc24003384"
  }
  index: 78
  text: "{{CC}}Ruby Cheeks is renting Location E14, and the coffin is occupied. Privacy mode is engaged.{{/CC}}"
  branches {
    responseText: ""
    nextNodeIndex: 69
    idRef {
      id: "576ca50639663068300063cd:5793b35c613131dc24003386"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5793b36a613131dc240033d4"
  }
  index: 79
  text: "{{CC}}Noddius Maximus is renting location M14, and the coffin is occupied. Privacy mode is engaged.{{/CC}}"
  branches {
    responseText: ""
    nextNodeIndex: 69
    idRef {
      id: "576ca50639663068300063cd:5793b392613131dc240033d6"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5793b3d8613131dc240034cd"
  }
  index: 80
  text: "{{CC}}Enter Coffin:{{/CC}}\n\nWarning: Privacy Mode will prevent you from seeing who residents of specific coffins are."
  branches {
    responseText: "C4"
    actions {
      ops {
        functionName: "Enable/Disable Interactable Object"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "EnableOrDisable"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (InteractableObject)"
            args {
              string_value: "575bc164613131943900679c"
            }
          }
        }
      }
    }
    nextNodeIndex: 81
    idRef {
      id: "576ca50639663068300063cd:5793b3e8613131dc240034cf"
    }
  }
  branches {
    responseText: "D2"
    nextNodeIndex: 82
    idRef {
      id: "576ca50639663068300063cd:5793b436613131dc240034e3"
    }
  }
  branches {
    responseText: "M14"
    nextNodeIndex: 83
    idRef {
      id: "576ca50639663068300063cd:5793b437613131dc240034e9"
    }
  }
  branches {
    responseText: "S1"
    nextNodeIndex: 84
    idRef {
      id: "576ca50639663068300063cd:5793b437613131dc240034eb"
    }
  }
  nodeType: ConversationNodeType_InputKeyboard
  inputMaxLength: 3
}
nodes {
  idRef {
    id: "576ca50639663068300063cd:5793b41f613131dc240034d4"
  }
  index: 81
  text: "{{CC}}Doctor Dirk Dingleberry is currently renting C4, but is not inhabiting his coffin.{{/CC}}"
  branches {
    responseText: ""
    nextNodeIndex: 69
    idRef {
      id: "576ca50639663068300063cd:5793b41f613131dc240034d6"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5793b4c4613131dc240034f2"
  }
  index: 82
  text: "{{CC}}\'Mightiest of Ducks\' is currently renting D2, but is not inhabiting his coffin.{{/CC}}"
  branches {
    responseText: ""
    nextNodeIndex: 69
    idRef {
      id: "576ca50639663068300063cd:5793b524613131dc2400355d"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5793b4ee613131dc240034f5"
  }
  index: 83
  text: "{{CC}}Noddius Maximus is currently renting M14, but privacy mode is engaged.{{/CC}}"
  branches {
    responseText: ""
    nextNodeIndex: 69
    idRef {
      id: "576ca50639663068300063cd:5793b529613131dc24003560"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5793b531613131dc24003565"
  }
  index: 84
  text: "{{CC}}Sucio Sanchez is currently renting E1, and the coffin is scheduled for deep-cleaning upon his check-out.{{/CC}}"
  branches {
    responseText: ""
    nextNodeIndex: 69
    idRef {
      id: "576ca50639663068300063cd:5793b565613131dc24003567"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5793b7fb613131dc24003772"
  }
  index: 85
  text: "{{GM}}The smell emanating from the wrecked mattress is enough to turn your stomach.  The scent of unwashed flesh, waste, stale beer, cigarette smoke, and who knows what else... You feel a pang of guilt knowing this was your friend\'s only refuge.{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 86
    idRef {
      id: "576ca50639663068300063cd:57abf8c339663014030071ca"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "57abf8c339663014030071cd"
  }
  index: 86
  text: ""
  branches {
    responseText: "Investigate the bed."
    nextNodeIndex: 87
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:57abf8c539663014030071cf"
    }
  }
  branches {
    responseText: "Look through the trash."
    nextNodeIndex: 88
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:57abf8d939663014030071d4"
    }
  }
  branches {
    responseText: "Examine pile of burned chips on the floor."
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "b_Burnedchips"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "b_Burnedchips"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 89
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:57abf8d939663014030071d6"
    }
  }
  branches {
    responseText: "{{CC}}Ganger{{/CC}} Look for the secret stash."
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 15
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          int_value: 0
        }
      }
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "b_Burnedchips"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Sam\'s BTL chip"
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "b_Burnedchips"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 95
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:57abf8da39663014030071d8"
    }
  }
  branches {
    responseText: "{{CC}}Shadowrunner{{/CC}} Look for a dead-drop."
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 17
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          int_value: 0
        }
      }
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "b_Burnedchips"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Sam\'s BTL chip"
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "b_Burnedchips"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 96
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:57abf8da39663014030071da"
    }
  }
  branches {
    responseText: "Take the chip."
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "b_Burnedchips"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Sam\'s BTL chip"
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Sam\'s BTL chip"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    hideIfUnavailable: true
    idRef {
      id: "576ca50639663068300063cd:57abf8da39663014030071dc"
    }
  }
  branches {
    responseText: "Leave the chip."
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "b_Burnedchips"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    hideIfUnavailable: true
    idRef {
      id: "576ca50639663068300063cd:57abfae93966301403007336"
    }
  }
  branches {
    responseText: "{{CC}}Leave{{/CC}}"
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Sam\'s BTL chip"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    hideIfUnavailable: true
    idRef {
      id: "576ca50639663068300063cd:57e74c62663136201a00808e"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "Sam\'s Bunk Loop"
}
nodes {
  idRef {
    id: "57abf9cb39663014030071df"
  }
  index: 87
  text: "{{GM}}The bed, if it can be called that, is a cheap sheet over a fire-retardant mattress. There are dirty sheets, and a pillow that\'s been used to mop up... something brown.{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 86
    idRef {
      id: "576ca50639663068300063cd:57abfa0839663014030071e1"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "57abfa3f3966301403007326"
  }
  index: 88
  text: "{{GM}}The trash can is overflowing with debris; stinking latex, broken bottles, broken one-time needles. {{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 86
    idRef {
      id: "576ca50639663068300063cd:57abfa853966301403007328"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "57abfa96396630140300732f"
  }
  index: 89
  text: "{{GM}}There are several month\'s worth of discarded chips. The cheap silicon of the chips is meant to burn out after a single use, and keep the junkie buying new ones. The worst of the lot are CalHots, which are simchips with the default safety ratings overridden, meaning that every emotion is cranked up to 11. A single hit of that is addictive, but it is legal in CalFree, which exports the chips for huge profits.{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 90
    idRef {
      id: "576ca50639663068300063cd:57abfa9b3966301403007331"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "57abfa9b3966301403007334"
  }
  index: 90
  text: ""
  branches {
    responseText: "Look at Sam\'s chip usage."
    nextNodeIndex: 91
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:57abfb563966301403007338"
    }
  }
  branches {
    responseText: "Look for evidence."
    nextNodeIndex: 92
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:57abfb57396630140300733a"
    }
  }
  branches {
    responseText: "Find a calling card for Sam\'s dealer."
    nextNodeIndex: 93
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:57abfb57396630140300733c"
    }
  }
  branches {
    responseText: "Find a chip worth taking."
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Sam\'s BTL chip"
            }
          }
        }
      }
    }
    nextNodeIndex: 94
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:57abfb99396630140300733e"
    }
  }
  branches {
    responseText: "Look for a chip that\'s not burned out."
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Sam\'s BTL chip"
            }
          }
        }
      }
    }
    nextNodeIndex: 94
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "576ca50639663068300063cd:57abfb9a3966301403007340"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  comment: "BTL Loop"
}
nodes {
  idRef {
    id: "57abfbad3966301403007343"
  }
  index: 91
  text: "{{GM}}Sam bought chips in all the colors of the rainbow: everything from feel-good women-power stories, to family friendly stories with the emotional tracks spikes, to hardcore sadomasochistic bondage. You can\'t fault the guy for wanting to pretend that he wasn\'t in the Barrens anymore.{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 90
    idRef {
      id: "576ca50639663068300063cd:57abfbc63966301403007345"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "57abfc453966301403007359"
  }
  index: 92
  text: "{{GM}}Sorting through the chips on the floor, you find several that have been marked with a cheap adhesive in a B. Such adhesive would shorten the life of the chip, but since the chips are supposed to burn out on the first use, it\'s doubtful that anyone noticed.{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 90
    idRef {
      id: "576ca50639663068300063cd:57abfd14396630140300735b"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "57abfd1e3966301403007360"
  }
  index: 93
  text: "{{GM}}Among the burned out chips, you find an old chip holder with a stylized B on the back of it. Bobbo, or Bobby, was proud enough of himself to leave a calling card on the chip holder.{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 90
    idRef {
      id: "576ca50639663068300063cd:57abfd513966301403007362"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "57abfd5a3966301403007367"
  }
  index: 94
  text: "{{GM}}The chips are largely made of cheap silicon, and have been burned out in a singal usage or after repeated viewings. There are multiple copies of some of the more filthy offerings- Sam made a regular purchase of \"\'Beauty and her Beasts\" which has a deserved reputation for elf-sploitation and ork-sploitation.\n\nAmong the chips, you find one that isn\'t burned- it hasn\'t even been used. The title says \'CalFree Fornication.\'{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 86
    idRef {
      id: "576ca50639663068300063cd:57abfe4239663014030073a9"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "57abfe6039663014030073b4"
  }
  index: 95
  text: "{{GM}}You search under the mattress, and the obvious spot taped behind the fridge. You find a spare credstick, slot it into yours and take the balance.{{/GM}}\n\n{{GM}}On the ground among some burned chips, you find a case bearing a stylized B and holding a BTL chip.{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 86
    idRef {
      id: "576ca50639663068300063cd:57abff0639663014030073b6"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Add Nuyen"
      args {
        int_value: 100
      }
    }
  }
}
nodes {
  idRef {
    id: "57abff863966301403007404"
  }
  index: 96
  text: "{{GM}}Ignoring the obvious spots like the trash can full of used needles or the porn pile, you check inside the vent, the back of the fridge (finding a credstick and netting yourself 100\302\245), you notice that there\'s an unused chip in it\'s original case, with a stylized B on the side.{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 86
    idRef {
      id: "576ca50639663068300063cd:57ac00c239663014030075a4"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Add Nuyen"
      args {
        int_value: 100
      }
    }
  }
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iCoffin"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 0
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bSamsPad"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  nextNodeIndex: 0
  hideIfUnavailable: true
  idRef {
    id: "576ca50639663068300063cd:576ca53539663068300063d7"
  }
  comment: "Hasn\'t Visited Sam\'s Bunk"
}
roots {
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bSamsPad"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iCoffin"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  nextNodeIndex: 33
  hideIfUnavailable: true
  idRef {
    id: "576ca50639663068300063cd:576ca50639663068300063d1"
  }
  comment: "Has visited Sam\'s Bunk"
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iCoffin"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  nextNodeIndex: 68
  hideIfUnavailable: true
  idRef {
    id: "576ca50639663068300063cd:576ca69039663068300063fa"
  }
  comment: "Coffin Motel Listing"
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iCoffin"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 2
      }
    }
  }
  nextNodeIndex: 85
  hideIfUnavailable: true
  idRef {
    id: "576ca50639663068300063cd:576ca69039663068300063fc"
  }
  comment: "Sam\'s Bunk"
}
