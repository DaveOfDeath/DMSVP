idRef {
  id: "51d08af43236646019001e47"
}
ui_name: "c08-s3_DocStore"
nodes {
  idRef {
    id: "51d08bd43236646019001ea4"
  }
  index: 0
  text: "{{GM}}Doctor Castle glances up only briefly from her charts. Her impish friend, on the other hand, tracks your every move like some sort of humanoid raptor with a mouse under its shadow.{{/GM}}\n\nLived to see another day, have you?"
  branches {
    responseText: "That remains to be seen. Still more work to be done."
    nextNodeIndex: 1
    idRef {
      id: "51d08af43236646019001e47:58a92c55396630b418004fa1"
    }
  }
  branches {
    responseText: "Just a pit-stop, doc. Night\'s not over yet."
    nextNodeIndex: 11
    idRef {
      id: "51d08af43236646019001e47:58a92c55396630b418004fcf"
    }
  }
  branches {
    responseText: "That may soon be up to you, doc."
    nextNodeIndex: 12
    idRef {
      id: "51d08af43236646019001e47:58a92c55396630b418004fd5"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "countDoctorVisits"
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
}
nodes {
  idRef {
    id: "51d098d53236646019002202"
  }
  index: 1
  text: "{{GM}}Doctor Castle nods.{{/GM}}\n\nThere\'s always more work to be done- so long as you end up here in the end and not on some Organ Grinders table, I\'m satisfied."
  branches {
    responseText: ""
    nextNodeIndex: 2
    idRef {
      id: "51d08af43236646019001e47:58a92c55396630b418004fa4"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51d099253236646019002205"
  }
  index: 2
  text: "Granted, a repeat customer means a person courting death more often than any good doctor should condone. But I don\'t suppose I can dissuade you from your course of action?"
  branches {
    responseText: "Sorry, doc. Job\'s not done."
    nextNodeIndex: 3
    idRef {
      id: "51d08af43236646019001e47:58a92c55396630b418004fa7"
    }
  }
  branches {
    responseText: "{{GM}}Say nothing.{{/GM}}"
    nextNodeIndex: 3
    idRef {
      id: "51d08af43236646019001e47:58a92c55396630b418004fc9"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "If only life was so simple."
    nextNodeIndex: 3
    idRef {
      id: "51d08af43236646019001e47:58a92c55396630b418004fcc"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51d0a490323664601900220c"
  }
  index: 3
  text: "Very well. Then let\'s talk about how I can help ensure you make it back alive once more."
  branches {
    responseText: ""
    nextNodeIndex: 4
    idRef {
      id: "51d08af43236646019001e47:58a92c55396630b418004faa"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51d0a5423236646019002228"
  }
  index: 4
  text: ""
  branches {
    responseText: "How\'d you fall in with this operation anyway, doc?"
    nextNodeIndex: 5
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "51d0be883236646019002692"
    }
  }
  branches {
    responseText: "Let\'s see your medical supplies."
    actions {
      ops {
        functionName: "Open Store Screen From Actor"
        args {
          call_value {
            functionName: "Get Map Item (Actor)"
            args {
              string_value: "8c5128bf3030313417004385"
            }
          }
        }
      }
    }
    nextNodeIndex: 4
    idRef {
      id: "51d08af43236646019001e47:58a92c55396630b418004fc1"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "I\'d like to look at your cyberware."
    actions {
      ops {
        functionName: "Open Cyberware Screen From Actor"
        args {
          call_value {
            functionName: "Get Map Item (Actor)"
            args {
              string_value: "8c5128bf3030313417004385"
            }
          }
        }
      }
    }
    nextNodeIndex: 4
    idRef {
      id: "51d08af43236646019001e47:58a92c55396630b418004fc4"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "Nevermind."
    nextNodeIndex: -1
    idRef {
      id: "51d08af43236646019001e47:58a92c55396630b418004fc7"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "Doc Loop"
}
nodes {
  idRef {
    id: "51d0a5933236646019002263"
  }
  index: 5
  text: "{{GM}}Doctor Castle pauses in her work, setting down her tablet and appearing to grow introspective.{{/GM}}\n\nI suppose you expect that I fell from grace; that\'s certainly the case with many of my... peers. Or you might think that I was compelled to do this because a friend or family member became a shadowrunner, and I threw caution to the wind as I ran to their assistance one fateful night."
  branches {
    responseText: ""
    nextNodeIndex: 6
    idRef {
      id: "51d08af43236646019001e47:58a92c55396630b418004faf"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51d0a63c3236646019002266"
  }
  index: 6
  text: "But the reality is that I grew up knowing this is what I would do with my life. My parents were both shadowrunners, and very successful ones at that. So successful that they retired in a very large house and raised a litter of kids who grew up hearing the impossible tales of their parents\' younger years."
  branches {
    responseText: ""
    nextNodeIndex: 7
    idRef {
      id: "51d08af43236646019001e47:58a92c55396630b418004fb2"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51d0a68c3236646019002269"
  }
  index: 7
  text: "{{GM}}She smiles.{{/GM}}\n\nOf course, we were expressly forbidden to follow in their footsteps. We were all expected to attend university and take full advantage of the opportunities they had fought so hard to give us."
  branches {
    responseText: ""
    nextNodeIndex: 8
    idRef {
      id: "51d08af43236646019001e47:58a92c55396630b418004fb5"
    }
  }
}
nodes {
  idRef {
    id: "51d0a6d1323664601900226c"
  }
  index: 8
  text: "So Mom and Dad were proud to see me pursuing a medical degree, and they had only minor reservations about me applying that expertise to the treatment of shadowrunners. After all, they never would have survived long enough to meet and fall in love if not for the ministrations of several street docs along the way."
  branches {
    responseText: ""
    nextNodeIndex: 9
    idRef {
      id: "51d08af43236646019001e47:58a92c55396630b418004fb8"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51d0a72a323664601900226f"
  }
  index: 9
  text: "So I suppose you could say I was born into this life, after a fashion."
  branches {
    responseText: ""
    nextNodeIndex: 10
    idRef {
      id: "51d08af43236646019001e47:58a92c55396630b418004fbb"
    }
  }
}
nodes {
  idRef {
    id: "51d0a7603236646019002272"
  }
  index: 10
  text: "{{GM}}She picks up her tablet and resumes her work.{{/GM}}\n\nIs there anything else I can help you with?"
  branches {
    responseText: ""
    nextNodeIndex: 4
    idRef {
      id: "51d08af43236646019001e47:58a92c55396630b418004fbe"
    }
    auxiliaryLink: true
  }
}
nodes {
  idRef {
    id: "51d0c52532366460190029c0"
  }
  index: 11
  text: "{{GM}}Doc lets out a long breath, a sigh.{{/GM}}\n\nI suppose it\'s nights like these that ensure I have plenty of work come morning."
  branches {
    responseText: ""
    nextNodeIndex: 2
    idRef {
      id: "51d08af43236646019001e47:58a92c55396630b418004fd2"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51d0c52d32366460190029c4"
  }
  index: 12
  text: "I take it there\'s more life and limb to be risked, then?  I suggest you ere on the side of limbs, since I can charge you four separate times. "
  branches {
    responseText: ""
    nextNodeIndex: 2
    idRef {
      id: "51d08af43236646019001e47:58a92c55396630b418004fd8"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51d08bd83236646019001ea8"
  }
  index: 13
  text: "{{GM}}Doc looks up briefly to make eye contact.{{/GM}}\n\nBack so soon?  And uninjured, no less. The job must have been easier than expected."
  branches {
    responseText: ""
    nextNodeIndex: 4
    idRef {
      id: "51d08af43236646019001e47:58a92c55396630b418004fde"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "countDoctorVisits"
          }
        }
      }
      args {
        int_value: 2
      }
    }
  }
}
nodes {
  idRef {
    id: "51d0976032366460190021f3"
  }
  index: 14
  text: "{{GM}}Doc doesn\'t look up from her work, letting the imp on her shoulder stare at you.{{/GM}}\n\nNot that I don\'t love repeat customers, but what can I do for you?"
  branches {
    responseText: ""
    nextNodeIndex: 4
    idRef {
      id: "51d08af43236646019001e47:58a92c55396630b418004fe4"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "countDoctorVisits"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  nextNodeIndex: 0
  idRef {
    id: "51d08af43236646019001e47:58a92c55396630b418004f9e"
  }
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "countDoctorVisits"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  nextNodeIndex: 13
  idRef {
    id: "51d08af43236646019001e47:58a92c55396630b418004fdb"
  }
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "countDoctorVisits"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 2
      }
    }
  }
  nextNodeIndex: 14
  idRef {
    id: "51d08af43236646019001e47:58a92c55396630b418004fe1"
  }
}
