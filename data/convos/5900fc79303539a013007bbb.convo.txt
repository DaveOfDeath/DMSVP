idRef {
  id: "5900fc79303539a013007bbb"
}
ui_name: "c14-s1_SecurityDecker"
nodes {
  idRef {
    id: "5900fcb9303539a013007bc5"
  }
  index: 0
  text: "Whoa there!\n\nJust who in th hell might you be?  Are you the one responsible for all these after hour access exception reports flooding my commlink?"
  branches {
    responseText: "Yeah, Sorry.  Boss really has be burning the midnight oil on this project deadline."
    nextNodeIndex: 1
    idRef {
      id: "5900fc79303539a013007bbb:5900fced303539a013007bc7"
    }
  }
  branches {
    responseText: "No, I just logged in.  Needed to check that I had secured my terminal.  Can\'t get it out of my head that I accidentally left it unlocked.\n\nI know how much you IT guys hate that."
    nextNodeIndex: 1
    idRef {
      id: "5900fc79303539a013007bbb:5900fced303539a013007bc9"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "{{CC}}[Attack]{{/CC}} I got your activity logs right here!"
    nextNodeIndex: 3
    idRef {
      id: "5900fc79303539a013007bbb:5900fced303539a013007bcb"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "590365c0343831b410002a9a"
  }
  index: 1
  text: "Well, I suggest that you take just a moment and look around.  Your clearance doesn\'t grant you access to this node.\n\nYou\'re suppose to be working $(scene.sAuthorizedArea)."
  branches {
    responseText: "My bad.  These hours will be the death of me.  Thanks."
    nextNodeIndex: 2
    idRef {
      id: "5900fc79303539a013007bbb:5903660e343831b410002a9c"
    }
  }
  branches {
    responseText: "{{CC}}Pretend to look around{{/CC}} Yeah, how about that.   Thanks for the warning."
    nextNodeIndex: 2
    idRef {
      id: "5900fc79303539a013007bbb:5903660e343831b410002a9e"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "59036647343831b410002aa1"
  }
  index: 2
  text: "Just make sure it doesn\'t happen again.\n\n{{GM}}He gestures towards the exit portal.{{/GM}}"
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iGetOut"
          }
        }
      }
      args {
        int_value: 3
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bStill_In_Region"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "eDeckerGetOut"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "5900fd89303539a013007bce"
  }
  index: 3
  text: "You\'re about to suck void, buddy."
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Modify Dimension Heat"
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Matrix"
          }
        }
      }
      args {
        float_value: 15
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "eSummonMatrixBackup"
          }
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "eMatrixHostile"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "590370db343831b410002b9c"
  }
  index: 4
  text: "Wow.  Seriously?  You lost of something, pal?\n\n{{GM}}His hand twitches, activating some sort of unseen control.{{/GM}}"
  branches {
    responseText: "I\'m lost, again. Where was I suppose to be going again?"
    nextNodeIndex: 5
    idRef {
      id: "5900fc79303539a013007bbb:5910a1f4343831801a00244f"
    }
  }
  branches {
    responseText: "{{CC}}Attack{{/CC}} Yeah, I guess one of us should leave."
    nextNodeIndex: 3
    idRef {
      id: "5900fc79303539a013007bbb:5910a1f4343831801a002451"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5910a244343831801a002454"
  }
  index: 5
  text: "{{GM}}The deckers digital eyebrow shoots up, and and you can see skepticism written all over his face.{{/GM}}\n\nYou don\'t know what department you work in?"
  branches {
    responseText: "Yeah, of course I know.  That pond out there kinda messes with me though."
    nextNodeIndex: 6
    idRef {
      id: "5900fc79303539a013007bbb:5910a287343831801a002456"
    }
  }
  branches {
    responseText: "{{CC}}Attack{{/CC}} Hostile takeovers?"
    nextNodeIndex: 3
    idRef {
      id: "5900fc79303539a013007bbb:5910a288343831801a002458"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5910a2b2343831801a00245b"
  }
  index: 6
  text: "Oh you do, huh? \n\nTell me... Which department is it that you\'re suppose to be in then?"
  branches {
    responseText: "Legal"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "sUserName"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "Sara Hendrickson"
        }
      }
    }
    nextNodeIndex: 7
    hideIfUnavailable: true
    idRef {
      id: "5900fc79303539a013007bbb:5910a2f1343831801a002460"
    }
    comment: "Authorized"
  }
  branches {
    responseText: "Legal"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "sUserName"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          string_value: "Sara Hendrickson"
        }
      }
    }
    nextNodeIndex: 8
    hideIfUnavailable: true
    idRef {
      id: "5900fc79303539a013007bbb:5910a3b3343831801a002477"
    }
    comment: "Invalid"
  }
  branches {
    responseText: "Archives"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "sUserName"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "Leonard Clark"
        }
      }
    }
    nextNodeIndex: 7
    hideIfUnavailable: true
    idRef {
      id: "5900fc79303539a013007bbb:5910a2f1343831801a002462"
    }
    auxiliaryLink: true
    comment: "Authorized"
  }
  branches {
    responseText: "Archives"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "sUserName"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          string_value: "Leonard Clark"
        }
      }
    }
    nextNodeIndex: 8
    hideIfUnavailable: true
    idRef {
      id: "5900fc79303539a013007bbb:5910a3b3343831801a002479"
    }
    auxiliaryLink: true
    comment: "Invalid"
  }
  branches {
    responseText: "Human Resources"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "sUserName"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "Ryan Blowers"
        }
      }
    }
    nextNodeIndex: 7
    hideIfUnavailable: true
    idRef {
      id: "5900fc79303539a013007bbb:5910a2f2343831801a002464"
    }
    auxiliaryLink: true
    comment: "Authorized"
  }
  branches {
    responseText: "Human Resources"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "sUserName"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          string_value: "Ryan Blowers"
        }
      }
    }
    nextNodeIndex: 8
    hideIfUnavailable: true
    idRef {
      id: "5900fc79303539a013007bbb:5910a3b3343831801a00247b"
    }
    auxiliaryLink: true
    comment: "Invalid"
  }
  branches {
    responseText: "Payroll"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "sUserName"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "Bryan Park"
        }
      }
    }
    nextNodeIndex: 7
    hideIfUnavailable: true
    idRef {
      id: "5900fc79303539a013007bbb:5910a2f2343831801a002466"
    }
    auxiliaryLink: true
    comment: "Authorized"
  }
  branches {
    responseText: "Payroll"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "sUserName"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          string_value: "Bryan Park"
        }
      }
    }
    nextNodeIndex: 8
    hideIfUnavailable: true
    idRef {
      id: "5900fc79303539a013007bbb:5910a3b4343831801a00247f"
    }
    auxiliaryLink: true
    comment: "Invalid"
  }
  branches {
    responseText: "Research and Development"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "sUserName"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "Amanda Miller"
        }
      }
    }
    nextNodeIndex: 7
    hideIfUnavailable: true
    idRef {
      id: "5900fc79303539a013007bbb:5910a2f2343831801a002468"
    }
    auxiliaryLink: true
    comment: "Authorized"
  }
  branches {
    responseText: "Research and Development"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "sUserName"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          string_value: "Amanda Miller"
        }
      }
    }
    nextNodeIndex: 8
    hideIfUnavailable: true
    idRef {
      id: "5900fc79303539a013007bbb:5910a3b4343831801a00247d"
    }
    auxiliaryLink: true
    comment: "Invalid"
  }
  branches {
    responseText: "Security"
    nextNodeIndex: 9
    idRef {
      id: "5900fc79303539a013007bbb:5910a40c343831801a002483"
    }
  }
  branches {
    responseText: "Uh... New here.  I can\'t remember."
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "iYOS"
            }
          }
        }
        args {
          call_value {
            functionName: "Random (int)"
            args {
              int_value: 6
            }
            args {
              int_value: 13
            }
          }
        }
      }
    }
    nextNodeIndex: 10
    idRef {
      id: "5900fc79303539a013007bbb:5910a32e343831801a00246a"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5910a515343831801a002486"
  }
  index: 7
  text: "Yeah, that scans.\n\nLast warning... Get out of here."
  nodeType: ConversationNodeType_Simple
  comment: "Authorized NODE"
}
nodes {
  idRef {
    id: "5910a567343831801a002492"
  }
  index: 8
  text: "That\'s not what my records indicate..."
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "5900fc79303539a013007bbb:5910a59b343831801a002496"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5910a5bd343831801a0024a7"
  }
  index: 9
  text: "{{GM}}He laughs loudly.{{/GM}}\n\nSwing and a miss, my shadow dwelling friend.  I\'m head of the digital security department, and you don\'t work for me.\n\nPerhaps I can introduce you to a few of your co-workers though?"
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "5900fc79303539a013007bbb:5910a60c343831801a0024ab"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5910a33e343831801a00246d"
  }
  index: 10
  text: "Funny.  Your ID profile says that you\'ve been with the company for $(scene.iYOS) years...\n\nI think I know what\'s going on.   SHADOWRUNNER!"
  branches {
    responseText: "Shit."
    nextNodeIndex: 3
    idRef {
      id: "5900fc79303539a013007bbb:5910a367343831801a00246f"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
roots {
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bHeatTriggered"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bMetSecurityDecker"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bMetSecurityDecker"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  nextNodeIndex: 0
  idRef {
    id: "5900fc79303539a013007bbb:5900fc79303539a013007bbf"
  }
  comment: "Heat Safe - First Time"
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bHeatTriggered"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bMetSecurityDecker"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  nextNodeIndex: 4
  idRef {
    id: "5900fc79303539a013007bbb:59036b37343831b410002af1"
  }
  comment: "Heat Safe - Secondary Visit"
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bHeatTriggered"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  nextNodeIndex: 3
  idRef {
    id: "5900fc79303539a013007bbb:5900fc9e303539a013007bc2"
  }
  auxiliaryLink: true
  comment: "Heat Threshold Reached"
}
