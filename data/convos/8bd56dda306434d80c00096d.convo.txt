idRef {
  id: "8bd56dda306434d80c00096d"
}
ui_name: "c05-s2_PikePlace_Frank"
nodes {
  idRef {
    id: "8bd599e9306434d80c000973"
  }
  index: 0
  text: "{{GM}}The ork before you wears the standard Stuffer Shack employee uniform. His nametag reads FRANK. The uniform is well-kept and well-fitted, but the tears streaming down his large, crooked face do little to improve his appearance. He does not seem to notice your approach.{{/GM}}"
  branches {
    responseText: "I take it you knew the victim?"
    nextNodeIndex: 1
    idRef {
      id: "8bd56dda306434d80c00096d:574c540c663136f813003156"
    }
  }
  branches {
    responseText: "What\'s with the waterworks?"
    nextNodeIndex: 4
    idRef {
      id: "8bd56dda306434d80c00096d:574c540c663136f813003162"
    }
  }
  branches {
    responseText: "Hoi, friend. Everything okay?"
    nextNodeIndex: 5
    idRef {
      id: "8bd56dda306434d80c00096d:574c540c663136f813003165"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "8bdf6c18306434d80c000a08"
  }
}
nodes {
  idRef {
    id: "8bd6c4f3306434d80c000978"
  }
  index: 1
  text: "{{GM}}The ork glares at you through his tears.{{/GM}}\n\nYeah, what\'s it to you?"
  branches {
    responseText: "I need to ask you some questions."
    nextNodeIndex: 2
    idRef {
      id: "8bd56dda306434d80c00096d:574c540c663136f813003159"
    }
  }
  branches {
    responseText: "My condolences. Were the two of you close?"
    nextNodeIndex: 3
    idRef {
      id: "8bd56dda306434d80c00096d:574c540c663136f81300315c"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "8bdf6c18306434d80c000a08"
  }
}
nodes {
  idRef {
    id: "51a4f5d5396163e80e0045db"
  }
  index: 2
  text: "Frag yourself, asshole."
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "8bdf6c18306434d80c000a08"
  }
  actions {
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "8bdf6c18306434d80c000a08"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "51a4f555396163e80e0045d8"
  }
  index: 3
  text: "{{GM}}Frank wipes the tears.{{/GM}}\n\nYou surprised me, I\'m just not used to folks being too friendly around here. \n\n{{GM}}The ork wipes his face with a dirty napkin.{{/GM}}\n\nYeah... we were pretty close, as coworkers go. Blind Lucy and I worked here at the Shack for three years together. Started the same day on the same shift."
  branches {
    responseText: ""
    nextNodeIndex: 6
    idRef {
      id: "8bd56dda306434d80c00096d:574c540c663136f81300315f"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "8bdf6c18306434d80c000a08"
  }
}
nodes {
  idRef {
    id: "8bd6f063306434d80c00097a"
  }
  index: 4
  text: "{{GM}}The ork kid is surprised at your comment, but quickly brushes it off, wiping his face.{{/GM}}\n\nJust allergies, asshole."
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "8bdf6c18306434d80c000a08"
  }
  actions {
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "8bdf6c18306434d80c000a08"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "8bd7171c306434d80c00097c"
  }
  index: 5
  text: "No... \n\n{{GM}}The ork takes a deep breath before looking up.{{/GM}}\n\nThat\'s my friend on the pavement back there. Blind Lucy. We worked at the Shack for three years together. And now... well... I heard the Ripper got her."
  branches {
    responseText: ""
    nextNodeIndex: 6
    idRef {
      id: "8bd56dda306434d80c00096d:574c540c663136f813003168"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "8bdf6c18306434d80c000a08"
  }
}
nodes {
  idRef {
    id: "8bd8236a306434d80c00097f"
  }
  index: 6
  text: ""
  branches {
    responseText: "\342\200\234Blind Lucy\342\200\235?"
    nextNodeIndex: 7
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "51b224cc623331181a004e3a"
    }
  }
  branches {
    responseText: "Seen anyone strange in the store lately?"
    nextNodeIndex: 13
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "51a4ff92396163e80e0047ee"
    }
  }
  branches {
    responseText: "Did Lucy have any enemies?"
    nextNodeIndex: 14
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "51e6c147623331f81f001e73"
    }
  }
  branches {
    responseText: "When was the last time you saw Lucy?"
    nextNodeIndex: 15
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "51e6c142623331f81f001e72"
    }
  }
  branches {
    responseText: "That\'s all I needed to know. Thanks for your help, and I\'m sorry for your loss."
    nextNodeIndex: 16
    idRef {
      id: "8bd56dda306434d80c00096d:574c540c663136f813003190"
    }
  }
  branches {
    responseText: "That\'s all I needed to know."
    nextNodeIndex: 16
    idRef {
      id: "8bd56dda306434d80c00096d:574c540c663136f8130031ae"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "8bdf6c18306434d80c000a08"
  }
  comment: "Ork Frank"
}
nodes {
  idRef {
    id: "8bda7d7b306434d80c000985"
  }
  index: 7
  text: "Well, Lucy wasn\'t completely blind... but she was legally blind. She had to wear these huge glasses and hold things right up to her face. But she got new eyes about a year ago."
  branches {
    responseText: ""
    nextNodeIndex: 8
    idRef {
      id: "8bd56dda306434d80c00096d:574c540c663136f81300316d"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "8bdf6c18306434d80c000a08"
  }
}
nodes {
  idRef {
    id: "51a4f9cc396163e80e00469e"
  }
  index: 8
  text: ""
  branches {
    responseText: "Any idea how she scored the new eyes?"
    nextNodeIndex: 9
    idRef {
      id: "8bd56dda306434d80c00096d:574c540c663136f813003170"
    }
  }
  branches {
    responseText: "How did she afford new eyes working at Stuffer Shack?"
    nextNodeIndex: 10
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "8bd56dda306434d80c00096d:57f9e9e6396630e816008061"
    }
  }
  branches {
    responseText: "I see. Er, no pun intended."
    nextNodeIndex: 11
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "51a4ff78396163e80e0047ed"
    }
  }
  branches {
    responseText: "Mind if I ask a few more questions?"
    nextNodeIndex: 12
    idRef {
      id: "8bd56dda306434d80c00096d:574c540c663136f81300317b"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "8bdf6c18306434d80c000a08"
  }
  comment: "Lucy Blind"
}
nodes {
  idRef {
    id: "51a4f9cc396163e80e0046a1"
  }
  index: 9
  text: "{{GM}}Frank thinks about it for a moment, and then shakes his head \'no.\'{{/GM}}\n\nNo... she wouldn\'t talk about it much at all. She just called it her \"stroke of good luck.\" \n\nI guess her luck finally ran out."
  branches {
    responseText: ""
    nextNodeIndex: 6
    idRef {
      id: "8bd56dda306434d80c00096d:574c540c663136f813003173"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "8bdf6c18306434d80c000a08"
  }
}
nodes {
  idRef {
    id: "57f9e9f9396630e816008064"
  }
  index: 10
  text: "{{GM}}Frank shrugs.{{/GM}}\n\nYou got me. I bet she got discounted ones from Nightengales, or Organ Grinders, or maybe even on the black market."
  branches {
    responseText: ""
    nextNodeIndex: 8
    idRef {
      id: "8bd56dda306434d80c00096d:57f9ea03396630e816008066"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "8bdf6c18306434d80c000a08"
  }
}
nodes {
  idRef {
    id: "51a4f9cc396163e80e0046a7"
  }
  index: 11
  text: "{{GM}}The ork looks up sharply - then lets out a sad laugh.{{/GM}} \n\nLucy loved the worst puns... that one was one of her favorites. I guess you can see why."
  branches {
    responseText: ""
    nextNodeIndex: 8
    idRef {
      id: "8bd56dda306434d80c00096d:574c540c663136f813003178"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "8bdf6c18306434d80c000a08"
  }
}
nodes {
  idRef {
    id: "51a4f9e2396163e80e0046d3"
  }
  index: 12
  text: "{{GM}}Frank shrugs.{{/GM}}\n\nSure, I don\'t mind."
  branches {
    responseText: ""
    nextNodeIndex: 6
    idRef {
      id: "8bd56dda306434d80c00096d:574c540c663136f81300317e"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "8bdf6c18306434d80c000a08"
  }
}
nodes {
  idRef {
    id: "8bdaa2d9306434d80c000987"
  }
  index: 13
  text: "{{GM}}The ork looks at you askance.{{/GM}}\n\nOmae, it\'s a Stuffer Shack. I see weird shit every day.\n\nBut no... nothing stranger than usual."
  branches {
    responseText: ""
    nextNodeIndex: 6
    idRef {
      id: "8bd56dda306434d80c00096d:574c540c663136f813003183"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "8bdf6c18306434d80c000a08"
  }
}
nodes {
  idRef {
    id: "8bdac7e9306434d80c000989"
  }
  index: 14
  text: "{{GM}}The ork kid wipes his face again.{{/GM}}\n\nI can\'t think of any. I\'m not sure. I know she had an ugly break-up with her boyfriend after getting those new eyes put in. That guy was pretty upset for some reason and wouldn\342\200\231t leave Lucy be, until she filed for a restraining order. That all seemed to die down a few months ago, though.\n\nShe didn\'t like the local Humanis goons harassing me, but I can\'t believe even someone as drek-y as them would do something like this."
  branches {
    responseText: ""
    nextNodeIndex: 6
    idRef {
      id: "8bd56dda306434d80c00096d:574c540c663136f813003188"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "8bdf6c18306434d80c000a08"
  }
}
nodes {
  idRef {
    id: "51a4f66c396163e80e0045f5"
  }
  index: 15
  text: "{{GM}}Frank gestures at the Stuffer Shack behind him.{{/GM}}\n\nWe were here at work. I think she was heading to the market to meet a friend. Frag... I was supposed to join them, but we got some last minute customers. \n\n{{GM}}He sighs.{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 6
    idRef {
      id: "8bd56dda306434d80c00096d:574c540c663136f81300318d"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "8bdf6c18306434d80c000a08"
  }
}
nodes {
  idRef {
    id: "51a4fafd396163e80e004716"
  }
  index: 16
  text: "{{GM}}Frank stops you.{{/GM}}\n\nWait... you wouldn\'t happen to be part of the investigation, would you?"
  branches {
    responseText: "In my own way. Why do you ask?"
    nextNodeIndex: 17
    idRef {
      id: "8bd56dda306434d80c00096d:574c540c663136f813003193"
    }
  }
  branches {
    responseText: "I am. Why?"
    nextNodeIndex: 17
    idRef {
      id: "8bd56dda306434d80c00096d:574c540c663136f8130031a8"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "Just a concerned citizen, sorry."
    nextNodeIndex: 21
    idRef {
      id: "8bd56dda306434d80c00096d:574c540c663136f8130031ab"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "8bdf6c18306434d80c000a08"
  }
}
nodes {
  idRef {
    id: "51a4fcbb396163e80e0047ec"
  }
  index: 17
  text: "{{GM}}Frank traces a line around his throat, indicating a necklace.{{/GM}}\n\nWell... Lucy had this special necklace. An intricate wood carving of a dragonfly with symbols on it. She wore it everyday, said her mom gave it to her when she left Denver. She called it her Lucky Charm.\n\nAnyway, you know how Lone Star is. All of her stuff\'ll be bagged and placed in evidence storage until the Seventh World awakens. I just thought... "
  branches {
    responseText: ""
    nextNodeIndex: 18
    idRef {
      id: "8bd56dda306434d80c00096d:574c540c663136f813003196"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "8bdf6c18306434d80c000a08"
  }
}
nodes {
  idRef {
    id: "51a50032396163e80e0047f1"
  }
  index: 18
  text: "{{GM}}Frank clears his throat, gaining courage based on the fact that you haven\'t shot him down yet.{{/GM}}\n\nWell, I just thought if you could somehow get that necklace before Lone Star locks everything up... I could, you know, send it back to her mom. I feel like I owe Lucy that much."
  branches {
    responseText: "I understand. If I can find it at the scene, I\'ll bring it to you."
    nextNodeIndex: 19
    idRef {
      id: "8bd56dda306434d80c00096d:574c540c663136f813003199"
    }
  }
  branches {
    responseText: "Tampering with evidence could put me in a bad spot with Lone Star. I can\'t risk it."
    nextNodeIndex: 21
    idRef {
      id: "8bd56dda306434d80c00096d:574c540c663136f81300319c"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "Stealing evidence from a crime scene is a pretty serious offense. What\'s in it for me?"
    nextNodeIndex: 20
    idRef {
      id: "8bd56dda306434d80c00096d:574c540c663136f81300319f"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "8bdf6c18306434d80c000a08"
  }
}
nodes {
  idRef {
    id: "51a50287396163e80e00483a"
  }
  index: 19
  text: "{{GM}}Frank\'s face crashes as relief and hope flood into him.{{/GM}}\n\nThank you for your help.  I\'ve gotta head back in. I can\'t deal with customers right now, so I\'ll be hiding in the back.  \n\nCome find me if you can get her necklace."
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "hasAcceptedFrankRequest"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bAllowedInShack"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Recover Lucy\342\200\231s Necklace from the Pike Place Crime Scene"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "51a50443396163e80e0048c2"
  }
  index: 20
  text: "{{GM}}He sighs.{{/GM}} \n\nI... I can throw a couple hundred nuyen your way. It\'s everything I\'ve got until payday."
  branches {
    responseText: "Alright, it\'s a deal."
    nextNodeIndex: 19
    idRef {
      id: "8bd56dda306434d80c00096d:574c540c663136f8130031a2"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "Sorry, not worth it."
    nextNodeIndex: 21
    idRef {
      id: "8bd56dda306434d80c00096d:574c540c663136f8130031a5"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bAskedFrankForPayout"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "51a5007c396163e80e0047f9"
  }
  index: 21
  text: "{{GM}}He looks disappointed.{{/GM}} Well, no problem. Thanks for your concern."
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "8bdf6c18306434d80c000a08"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "51a6b035623331bc230044e9"
  }
  index: 22
  text: "{{GM}}Frank looks up as you approach.{{/GM}}\n\nWhat\'s the commotion up front? I don\'t think I can deal with customers right now..."
  branches {
    responseText: "Good news/bad news situation"
    nextNodeIndex: 23
    idRef {
      id: "8bd56dda306434d80c00096d:580073206131317837005ddf"
    }
  }
  branches {
    responseText: "{{GM}}Etiquette: Security{{/GM}} What security features does Stuffer Shack have?"
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 14
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: 33
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "8bd56dda306434d80c00096d:580073206131317837005de1"
    }
  }
  branches {
    responseText: "{{GM}}Etiquette: Shadowrunner{{/GM}} I need to wipe the camera footage before I leave. Where can I do that?"
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 17
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: 34
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "8bd56dda306434d80c00096d:580073216131317837005de5"
    }
  }
  branches {
    responseText: "{{GM}}Etiquette: Gang{{/GM}} This is Cutter territory, but if I throw up a tag for the Disassemblers, no one will question \'random gang violence\'."
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 15
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: 35
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "8bd56dda306434d80c00096d:580073b26131317837005de7"
    }
  }
  branches {
    responseText: "Where is the most valuable thing in this place before I leave?"
    nextNodeIndex: 36
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "8bd56dda306434d80c00096d:580073216131317837005de3"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "8bdf6c18306434d80c000a08"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "580074b76131317837005e46"
  }
  index: 23
  text: "{{GM}}Frank wipes his nose with the sleeve of his filthy Stuffer Shack uniform.{{/GM}}\n\nWhaddya mean, good news bad news? What happened?"
  branches {
    responseText: ""
    nextNodeIndex: 24
    idRef {
      id: "8bd56dda306434d80c00096d:580074bb6131317837005e48"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "580074bd6131317837005e4b"
  }
  index: 24
  text: ""
  branches {
    responseText: "Crazy person out there who wants to get into the Manager\'s office."
    conditions {
      ops {
        functionName: "Compare Actor Race"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Race"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 25
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "8bd56dda306434d80c00096d:580074c96131317837005e4d"
    }
  }
  branches {
    responseText: "There\'s a Humanis goon out there ready to break heads unless he gets into the Manager\'s Office."
    conditions {
      ops {
        functionName: "Compare Actor Race"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Race"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 26
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "8bd56dda306434d80c00096d:580074c96131317837005e4f"
    }
  }
  branches {
    responseText: "I\'m not sure what this guy wants, but he\'s really serious about getting into the manager\'s office."
    nextNodeIndex: 27
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "8bd56dda306434d80c00096d:580077f06131317837005f68"
    }
  }
  branches {
    responseText: "How do I get into the manager\'s office?"
    nextNodeIndex: 28
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "8bd56dda306434d80c00096d:580076c86131317837005e7a"
    }
  }
  branches {
    responseText: "Anything else valuable around here?"
    nextNodeIndex: 29
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "8bd56dda306434d80c00096d:580076c96131317837005e7c"
    }
  }
  branches {
    responseText: "{{GM}}Disguise{{/GM}} How is this? Do I look like a Stuffer Shack employee?"
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Tsang Disguise"
            }
          }
        }
      }
    }
    nextNodeIndex: 30
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "8bd56dda306434d80c00096d:580076c86131317837005e78"
    }
  }
  branches {
    responseText: "I need help-- do you have my back?"
    nextNodeIndex: 31
    hideIfUnavailable: true
    idRef {
      id: "8bd56dda306434d80c00096d:580074c96131317837005e51"
    }
  }
  branches {
    responseText: "Lay low, and stay out of sight."
    nextNodeIndex: 32
    hideIfUnavailable: true
    idRef {
      id: "8bd56dda306434d80c00096d:580076506131317837005e76"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "Frank React Loop"
}
nodes {
  idRef {
    id: "580077b46131317837005f63"
  }
  index: 25
  text: "{{GM}}Frank swallows, the scare enough to stop his tears.{{/GM}}\n\nI-- who? What do they want?"
  branches {
    responseText: ""
    nextNodeIndex: 24
    idRef {
      id: "8bd56dda306434d80c00096d:580077b96131317837005f65"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "580078126131317837005f6b"
  }
  index: 26
  text: "{{GM}}Frank\'s face loses all color, and his hands tremble as he makes a fist.{{/GM}}\n\nHumanis? Fraggin\' humans, they don\'t got enough?"
  branches {
    responseText: ""
    nextNodeIndex: 24
    idRef {
      id: "8bd56dda306434d80c00096d:580078146131317837005f6d"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "580078e36131317837005ff1"
  }
  index: 27
  text: "{{GM}}Frank shrugs{{/GM}}\n\nNick\'s office is locked. He always locks it, when he\'s away. He would normally be there, but with the Lucy stuff they took him down to First and Union to the big Lonestar building to help them contact next of kin."
  branches {
    responseText: ""
    nextNodeIndex: 24
    idRef {
      id: "8bd56dda306434d80c00096d:58007ad26131317837005ff3"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "58007ad96131317837005ff8"
  }
  index: 28
  text: "{{GM}}Frank wipes more of his face, composing himself.{{/GM}}\n\nNick had a big vent installed in the wall, because of how hot it got in there with the servers and everything. Maybe a small person, a one of those little drones could slip in through there, and open the door from the inside?"
  branches {
    responseText: ""
    nextNodeIndex: 24
    idRef {
      id: "8bd56dda306434d80c00096d:58007b296131317837005ffa"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bKnowsAboutVent"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "580078676131317837005feb"
  }
  index: 29
  text: "{{GM}}Frank rubs his face, blowing his nose.{{/GM}}\n\nI-- there\'s the cleaning drones. They\'re easy to hack, so we have them on lockdown mode back here. What little cash money and corpscript we get goes into a dropbox in Nick\'s office. There\'s a lot of simsense recordings on the matrix servers, so we can burn custom chips per order."
  branches {
    responseText: ""
    nextNodeIndex: 24
    idRef {
      id: "8bd56dda306434d80c00096d:580078dd6131317837005fed"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "58007b4c6131317837005fff"
  }
  index: 30
  text: "{{GM}}Frank watches you with curiosity.{{/GM}}\n\nYeah, but I don\'t get it."
  branches {
    responseText: ""
    nextNodeIndex: 24
    idRef {
      id: "8bd56dda306434d80c00096d:58007b6a6131317837006001"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "58007b716131317837006006"
  }
  index: 31
  text: "{{GM}}Frank looks terrified, shaking his head.{{/GM}}\n\nI\'m sorry, $(l.guy)... But I\'m no fighter."
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "58007b876131317837006009"
  }
  index: 32
  text: "{{GM}}Frank looks relieved, and nods.{{/GM}}"
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "580075066131317837005e5c"
  }
  index: 33
  text: "{{GM}}Frank gestures to the drone charging station against the wall.{{/GM}}\n\nThere are some drones... and I guess the shotgun that Nick has in his office. He got it as a gag, and it has a tag that says \'Customer Complaint Help Line.\'"
  branches {
    responseText: ""
    nextNodeIndex: 24
    idRef {
      id: "8bd56dda306434d80c00096d:580075156131317837005e67"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "580075106131317837005e65"
  }
  index: 34
  text: "{{GM}}Frank points in the direction of the manager\'s office.{{/GM}}\n\nNick has the servers all in his office- makes it hotter than hell, but he wants them safe in there."
  branches {
    responseText: ""
    nextNodeIndex: 24
    idRef {
      id: "8bd56dda306434d80c00096d:5800751a6131317837005e6a"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5800750d6131317837005e62"
  }
  index: 35
  text: "{{GM}}Frank nods when you mention the Cutters, but his jaw drops when you mention the rival.{{/GM}}\n\nAre you from around here? How does random gang violence help us?"
  branches {
    responseText: ""
    nextNodeIndex: 24
    idRef {
      id: "8bd56dda306434d80c00096d:580075216131317837005e6e"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5800750b6131317837005e5f"
  }
  index: 36
  text: "{{GM}}Frank wipes his nose with a filthy sleeve, shaking his head.\"\n\nI dunno, omae. I guess probably the cash safe in Nick\'s office."
  branches {
    responseText: ""
    nextNodeIndex: 24
    idRef {
      id: "8bd56dda306434d80c00096d:580075256131317837005e72"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "8bd56dda306434d80c00096d:5800726d6131317837005cfb"
  }
  index: 37
  text: "{{GM}}Frank looks up as you approach, wiping his face.{{/GM}}\n\nWere you able to find Lucy\'s necklace?"
  branches {
    responseText: "I\'ve got it right here, Frank. You can send this to her family now. {{GM}}Give Frank the necklace.{{/GM}}"
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "c05-s1_LucyNecklace"
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Item from Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "c05-s1_LucyNecklace"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Set Goal Status"
        args {
          call_value {
            functionName: "Get Map Item (Goal)"
            args {
              string_value: "Recover Lucy\342\200\231s Necklace from the Pike Place Crime Scene"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "GoalStatus"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 38
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "8bd56dda306434d80c00096d:5800726d6131317837005cfd"
    }
  }
  branches {
    responseText: "{{CC}}REWARD{{/CC}} I believe you mentioned a small donation?"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bAskedFrankForPayout"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "c05-s1_LucyNecklace"
            }
          }
        }
      }
    }
    nextNodeIndex: 39
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "8bd56dda306434d80c00096d:58025c3d663136140d003442"
    }
  }
  branches {
    responseText: "I\'ve got it, sure. I don\'t recall if we discussed payment..."
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bAskedFrankForPayout"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "c05-s1_LucyNecklace"
            }
          }
        }
      }
    }
    nextNodeIndex: 40
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "8bd56dda306434d80c00096d:5800726d6131317837005d05"
    }
  }
  branches {
    responseText: "Not yet."
    nextNodeIndex: 43
    idRef {
      id: "8bd56dda306434d80c00096d:580bbd85663136180f0001ff"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "8bd56dda306434d80c00096d:5800726d6131317837005cff"
  }
  index: 38
  text: "{{GM}}As he takes the necklace from you, you can sense a weight lifting from Frank\'s shoulders.{{/GM}}\n\n I can do this much for Lucy, at least. Thank you, friend. I owe you."
  branches {
    responseText: "Happy to help."
    nextNodeIndex: -1
    idRef {
      id: "8bd56dda306434d80c00096d:5800726d6131317837005d01"
    }
  }
  branches {
    responseText: "Just make sure that gets to Lucy\'s family. I don\'t want it turning up in some Lone Star office with my prints on it."
    nextNodeIndex: -1
    idRef {
      id: "8bd56dda306434d80c00096d:5800726d6131317837005d03"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "58025c81663136140d003445"
  }
  index: 39
  text: ""
  branches {
    responseText: ""
    nextNodeIndex: 40
    idRef {
      id: "8bd56dda306434d80c00096d:58025c8a663136140d003451"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "8bd56dda306434d80c00096d:5800726d6131317837005d07"
  }
  index: 40
  text: "{{GM}}He sighs.{{/GM}} Look, here\'s 200 nuyen... it\'s all I can spare."
  branches {
    responseText: "Deal. Here\'s the necklace. {{GM}}Give Frank the necklace.{{/GM}}"
    actions {
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 200
        }
      }
      ops {
        functionName: "Remove Item from Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "c05-s1_LucyNecklace"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Set Goal Status"
        args {
          call_value {
            functionName: "Get Map Item (Goal)"
            args {
              string_value: "Recover Lucy\342\200\231s Necklace from the Pike Place Crime Scene"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "GoalStatus"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 41
    idRef {
      id: "8bd56dda306434d80c00096d:5800726d6131317837005d09"
    }
  }
  branches {
    responseText: "Sorry, but the wood on this piece alone is worth more than 200\302\245. Looks like I\'ll have to find another buyer."
    nextNodeIndex: 42
    idRef {
      id: "8bd56dda306434d80c00096d:5800726d6131317837005d0d"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "8bd56dda306434d80c00096d:5800726d6131317837005d0b"
  }
  index: 41
  text: "{{GM}}As he takes the necklace from you, you can sense a weight lifting from Frank\'s shoulders.{{/GM}}\n\nI can do this much for Lucy, at least. Thank you for your time."
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "8bd56dda306434d80c00096d:5800726d6131317837005d0f"
  }
  index: 42
  text: "{{GM}}Frank\'s face registers his shock.{{/GM}}\n\nWhat-- really? Wow... You\'re a piece of drek."
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bFrankAngry"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Recover Lucy\342\200\231s Necklace from the Pike Place Crime Scene"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "580bbd8d663136180f000202"
  }
  index: 43
  text: "Please, I\'d like to send it back to her family."
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "580bc388663136180f000323"
  }
  index: 44
  text: "{{GM}}Frank\'s care at handling the wooden necklace is evident. He wipes away a tear at your approach.{{/GM}}\n\nGood to see you, omae. Thank you for your help, I\'m sure this will mean everything to Lucy\'s folks."
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "8bdf6c18306434d80c000a08"
  }
  actions {
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "8bdf6c18306434d80c000a08"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "580bc3a7663136180f000326"
  }
  index: 45
  text: "{{GM}}Frank blows his nose, avoiding your eyes.{{/GM}}\n\nI got nothing to say to you, fuck-o. Go bother elsewhere."
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "8bdf6c18306434d80c000a08"
          }
        }
      }
    }
  }
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Evaluate If Actor is Inside Region"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "8bdf6c18306434d80c000a08"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "AreOrAreNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "58029cea6631366c0c002f77"
          }
        }
      }
    }
  }
  nextNodeIndex: 0
  hideIfUnavailable: true
  idRef {
    id: "8bd56dda306434d80c00096d:574c540c663136f813003153"
  }
  comment: "First Meeting"
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Evaluate If Actor is Inside Region"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "8bdf6c18306434d80c000a08"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "AreOrAreNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "58029cea6631366c0c002f77"
          }
        }
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bHostilitiesInitiated"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  nextNodeIndex: 22
  hideIfUnavailable: true
  idRef {
    id: "8bd56dda306434d80c00096d:574c540c663136f8130031b1"
  }
  comment: "Stuffer Shack - Mendoza"
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bHostilitiesInitiated"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Evaluate If Actor is Inside Region"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "8bdf6c18306434d80c000a08"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "AreOrAreNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "58029cea6631366c0c002f77"
          }
        }
      }
    }
    ops {
      functionName: "Evaluate Goal"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Recover Lucy\342\200\231s Necklace from the Pike Place Crime Scene"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  nextNodeIndex: 37
  hideIfUnavailable: true
  idRef {
    id: "8bd56dda306434d80c00096d:5800726d6131317837005cf9"
  }
  comment: "Stuffer Shack - Cleared"
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Evaluate Goal"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Recover Lucy\342\200\231s Necklace from the Pike Place Crime Scene"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bFrankAngry"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bHostilitiesInitiated"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  nextNodeIndex: 44
  idRef {
    id: "8bd56dda306434d80c00096d:580bc20a663136180f00031e"
  }
  comment: "Frank, Happy"
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Evaluate Goal"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Recover Lucy\342\200\231s Necklace from the Pike Place Crime Scene"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bFrankAngry"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bHostilitiesInitiated"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  nextNodeIndex: 45
  idRef {
    id: "8bd56dda306434d80c00096d:580bc20f663136180f000320"
  }
  comment: "Frank, Angry"
}
