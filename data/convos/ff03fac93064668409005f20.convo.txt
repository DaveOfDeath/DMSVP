idRef {
  id: "ff03fac93064668409005f20"
}
ui_name: "c06-s1_BTLGuy"
nodes {
  idRef {
    id: "ff0446c13064668409005f26"
  }
  index: 0
  text: "Haven\'t seen you before $(l.guy). Lookin\' to go somewhere special?"
  branches {
    responseText: ""
    nextNodeIndex: 1
  }
  nodeType: ConversationNodeType_Simple
  autoFollowBranchDelay: ConversationAutoFollowType_None
}
nodes {
  idRef {
    id: "2d33591e306466400b001ab7"
  }
  index: 1
  text: "{{GM}}A scream echoes through the pipes of the rotten walls. Hard to tell where it came from.{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 2
  }
  nodeType: ConversationNodeType_GM_Voice
  autoFollowBranchDelay: ConversationAutoFollowType_None
}
nodes {
  idRef {
    id: "2d4f53fe306466400b001d6e"
  }
  index: 2
  text: ""
  branches {
    responseText: "What was that sound?"
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "Status_BTLGuy"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: 3
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "51ad3e47396163580f0043d9"
    }
  }
  branches {
    responseText: "I need to get to the top floor."
    conditions {
      ops {
        functionName: "Evaluate Goal"
        args {
          call_value {
            functionName: "Get Map Item (Goal)"
            args {
              string_value: "Get to the Top Floor"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "GoalStatus"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 4
    hideIfUnavailable: true
  }
  branches {
    responseText: "I heard you\'re in the middle of a recording session..."
    conditions {
      ops {
        functionName: "OR"
        args {
          call_value {
            functionName: "Comparison (bool)"
            args {
              call_value {
                functionName: "Get Variable (bool)"
                args {
                  string_value: "hasAcceptedFatherNice"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "IsOrIsNot"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "bool"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Comparison (bool)"
            args {
              call_value {
                functionName: "Get Variable (bool)"
                args {
                  string_value: "hasAcceptedFatherMean"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "IsOrIsNot"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "bool"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
      }
    }
    nextNodeIndex: 10
    hideIfUnavailable: true
  }
  branches {
    responseText: "I\'ve decided that I need to kick your ass."
    conditions {
      ops {
        functionName: "OR"
        args {
          call_value {
            functionName: "Comparison (bool)"
            args {
              call_value {
                functionName: "Get Variable (bool)"
                args {
                  string_value: "Puz_BTLGuy_undecided"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "IsOrIsNot"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "bool"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Comparison (bool)"
            args {
              call_value {
                functionName: "Get Variable (bool)"
                args {
                  string_value: "Puz_BTLGuy_wimp"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "IsOrIsNot"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "bool"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "AttackBTLGuy"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    hideIfUnavailable: true
  }
  branches {
    responseText: "I think I\'ll have a look around and think about it."
    actions {
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "Puz_BTLGuy_undecided"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "Puz_BTLGuy_wimp"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 16
  }
  nodeType: ConversationNodeType_Simple
  autoFollowBranchDelay: ConversationAutoFollowType_None
}
nodes {
  idRef {
    id: "2d4f7665306466400b001d77"
  }
  index: 3
  text: "{{GM}}He smiles with his mouth but his eyes say \"predator\".{{/GM}}\n\nWho knows? Could be anything. Probably someone riding the wrong end of a Yakuza execution BTL. We get all kinds.\n\nI can hook you up, if you\'re interested."
  branches {
    responseText: ""
    nextNodeIndex: 2
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  autoFollowBranchDelay: ConversationAutoFollowType_None
}
nodes {
  idRef {
    id: "912bb842306466101100006a"
  }
  index: 4
  text: "Nobody goes up there without Stevie J\'s say-so. You best stay here and have some fun."
  branches {
    responseText: "You\'re gonna help me get up there, or you\'re gonna get hurt."
    nextNodeIndex: 5
    hideIfUnavailable: true
  }
  branches {
    responseText: "{{CC}}Etiquette: Street{{/CC}} You look like a player, so I\'ve got a proposition for you. I suggest you listen carefully."
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 18
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "Puz_BTLGuy_INT"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "Puz_BTLGuy_wimp"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "Puz_BTLGuy_undecided"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 6
  }
  branches {
    responseText: "{{CC}}Intelligence: 3{{/CC}} Takes a smart guy to run a setup like this. Want to make a deal?"
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Actor Attribute"
            args {
              call_value {
                functionName: "Active Actor"
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "BaseOrCurrent"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "ActorAttributes"
                }
                args {
                  int_value: 4
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          int_value: 3
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "Puz_BTLGuy_INT"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "Puz_BTLGuy_wimp"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "Puz_BTLGuy_undecided"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 6
    auxiliaryLink: true
  }
  branches {
    responseText: "Okay, nevermind."
    actions {
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "Puz_BTLGuy_undecided"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "Puz_BTLGuy_wimp"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "97521752306466dc09004225"
  }
  index: 5
  text: "You\'re living dangerously, moron. Don\'t you know who Mr. J is? \n\nHe\'s the guy who uses morons like you for a freaking throw-rug!"
  branches {
    responseText: "But Stevie\'s not here right now. You are. {{GM}}Attack him.{{/GM}}"
    actions {
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "AttackBTLGuy"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  branches {
    responseText: "Sounds like a tough guy, this Mr. J. I\'ll be careful."
    actions {
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "Puz_BTLGuy_wimp"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
  autoFollowBranchDelay: ConversationAutoFollowType_None
}
nodes {
  idRef {
    id: "912bfee13064661011000078"
  }
  index: 6
  text: "I\'m a business man. Whatcha got for me?"
  branches {
    responseText: "I\'m here to wreck Stevie J\'s shit. It\'s going to happen. So, I can add you to my to-do list, OR you can step aside and when the smoke clears, you run this BTL shop."
    nextNodeIndex: 7
  }
  branches {
    responseText: "Get out now and never come back, and you won\'t end up dead like the rest of Stevie J\'s goons."
    nextNodeIndex: 7
    auxiliaryLink: true
  }
  branches {
    responseText: "I\'m looking to get in with Stevie. Can I take the BTL he\'s waiting on upstairs?"
    conditions {
      ops {
        functionName: "OR"
        args {
          call_value {
            functionName: "Comparison (bool)"
            args {
              call_value {
                functionName: "Get Variable (bool)"
                args {
                  string_value: "hasAcceptedFatherNice"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "IsOrIsNot"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "bool"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Comparison (bool)"
            args {
              call_value {
                functionName: "Get Variable (bool)"
                args {
                  string_value: "hasAcceptedFatherMean"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "IsOrIsNot"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "bool"
                }
                args {
                  int_value: 1
                }
              }
            }
          }
        }
      }
    }
    nextNodeIndex: 9
    hideIfUnavailable: true
  }
  nodeType: ConversationNodeType_Simple
  autoFollowBranchDelay: ConversationAutoFollowType_None
}
nodes {
  idRef {
    id: "912bfee1306466101100007b"
  }
  index: 7
  text: "You make a persuasive case. I think I\'d prefer to live.\n\nHere\'s the passcode for the elevator down the hall."
  branches {
    responseText: "Now show me where that man\'s son Zipper is, and you\'re off my list."
    conditions {
      ops {
        functionName: "Evaluate Goal"
        args {
          call_value {
            functionName: "Get Map Item (Goal)"
            args {
              string_value: "Save the Man\'s Son"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "GoalStatus"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 8
    hideIfUnavailable: true
  }
  nodeType: ConversationNodeType_Simple
  autoFollowBranchDelay: ConversationAutoFollowType_None
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Track_BTLComputer"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Add Item to Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "c06-s1_ElevatorPassCode"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "91ae88573064661011000230"
  }
  index: 8
  text: "Hero, huh? Don\'t see that every day."
  branches {
    responseText: "Shut your mouth and show me the way."
    actions {
      ops {
        functionName: "Order Actor to Move To (Region)"
        args {
          call_value {
            functionName: "Get Map Item (Actor)"
            args {
              string_value: "fa36ebe8306466ac190013b0"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "ff9982bd3064665c16006767"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "FacingDirection"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Enable/Disable Interactable Object"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "EnableOrDisable"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (InteractableObject)"
            args {
              string_value: "fa36ebe8306466ac190013b0"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
  autoFollowBranchDelay: ConversationAutoFollowType_None
}
nodes {
  idRef {
    id: "519ed797623331ec1200424e"
  }
  index: 9
  text: "Every BTL junkie wants to get in with Stevie. Tell you what, I\'ll let you go upstairs and talk to him, maybe he likes you. If he decides he\'d rather feed you to his hellhounds, well, that ain\'t on me."
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Add Item to Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "c06-s1_BTL-Recording"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "seattle"
          }
          args {
            string_value: "c06_BTLChip"
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
}
nodes {
  idRef {
    id: "912cfb713064661011000085"
  }
  index: 10
  text: "Sure am. My gear is state of the art if you can believe it."
  branches {
    responseText: "How about a tour of this amazing studio?"
    actions {
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "Puz_BTLGuy_undecided"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "Puz_BTLGuy_wimp"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 11
  }
  branches {
    responseText: "This wasn\'t on my agenda, but... let the kid go. Let him go, or I\'ll make you regret it."
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "Status_Mother"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 2
        }
      }
    }
    nextNodeIndex: 12
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "51ad41b2396163580f0043da"
    }
  }
  branches {
    responseText: "Give me the kid and you may get to keep all your fingers."
    conditions {
      ops {
        functionName: "Evaluate Goal"
        args {
          call_value {
            functionName: "Get Map Item (Goal)"
            args {
              string_value: "Save the Man\'s Son"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "GoalStatus"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "AttackBTLGuy"
            }
          }
        }
      }
    }
    nextNodeIndex: 13
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "51ad41c3396163580f0043db"
    }
  }
  branches {
    responseText: "{{CC}}Charisma: 3{{/CC}} I\'m looking for something very... special. Something... violent."
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Actor Attribute"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "BaseOrCurrent"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "ActorAttributes"
                }
                args {
                  int_value: 3
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          int_value: 3
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "Puz_BTL_CHA"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 14
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "976e20d8306466dc090044cc"
  }
  index: 11
  text: "Listen $(l.guy), I\'m too busy for your chit-chat. Buy something or get out."
  nodeType: ConversationNodeType_Simple
  autoFollowBranchDelay: ConversationAutoFollowType_None
}
nodes {
  idRef {
    id: "9761cddd306466dc090043cb"
  }
  index: 12
  text: "That old bastard send you? Tell him he\'s not getting his son back. Now get out before I throw you out."
  branches {
    responseText: "You were warned. {{GM}}Attack.{{/GM}}"
    actions {
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "AttackBTLGuy"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  branches {
    responseText: "Fine. I didn\'t promise him anything. This isn\'t my drek to clean up anyway. "
    actions {
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "Puz_BTLGuy_wimp"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
  autoFollowBranchDelay: ConversationAutoFollowType_None
}
nodes {
  idRef {
    id: "9761858d306466dc090043c1"
  }
  index: 13
  text: "Not one for small talk, are you. That old bastard send you? How about I record your pain instead."
  nodeType: ConversationNodeType_Simple
  autoFollowBranchDelay: ConversationAutoFollowType_None
}
nodes {
  idRef {
    id: "912d35a23064661011000092"
  }
  index: 14
  text: "Look around... clearly, I\'m not going to be offended by ANY idea you can come up with."
  branches {
    responseText: "I want to kill someone... and record it."
    nextNodeIndex: 15
  }
  nodeType: ConversationNodeType_Simple
  autoFollowBranchDelay: ConversationAutoFollowType_None
}
nodes {
  idRef {
    id: "912d35a23064661011000095"
  }
  index: 15
  text: "{{GM}}The thug looks like he\'s thinking hard for a moment.{{/GM}}\n\nWow, you\'re one sick bastard. I like it. Perfect timing too, I could use a trigger man for a little project I\'ve got going. Come with me!"
  branches {
    responseText: "Show me the way."
    actions {
      ops {
        functionName: "Order Actor to Move To (Region)"
        args {
          call_value {
            functionName: "Get Map Item (Actor)"
            args {
              string_value: "fa36ebe8306466ac190013b0"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "ff9982bd3064665c16006767"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "FacingDirection"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Enable/Disable Interactable Object"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "EnableOrDisable"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (InteractableObject)"
            args {
              string_value: "fa36ebe8306466ac190013b0"
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "Track_BTLComputer"
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
  autoFollowBranchDelay: ConversationAutoFollowType_None
}
nodes {
  idRef {
    id: "36fa71d8306466c811002d30"
  }
  index: 16
  text: "Listen slot, this isn\'t a Stuffer Shack. Buy something or get out."
  nodeType: ConversationNodeType_Simple
  autoFollowBranchDelay: ConversationAutoFollowType_None
}
nodes {
  idRef {
    id: "2d57b72b306466400b001e25"
  }
  index: 17
  text: "Decide you need a fix more than you need a beat-down? Smart move. Now what do you need?"
  branches {
    responseText: ""
    nextNodeIndex: 2
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  autoFollowBranchDelay: ConversationAutoFollowType_None
}
nodes {
  idRef {
    id: "2d4cb4a6306466400b001d16"
  }
  index: 18
  text: "You\'re back. Decide what you want yet? I\'ve got something for all kinds."
  branches {
    responseText: ""
    nextNodeIndex: 2
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  autoFollowBranchDelay: ConversationAutoFollowType_None
}
nodes {
  idRef {
    id: "32cd463d306466e406001bbb"
  }
  index: 19
  text: "Hey, I thought we had an understanding.\n\nNow leave me alone. I\'ve got some upstanding customers here to deal with."
  nodeType: ConversationNodeType_Simple
  autoFollowBranchDelay: ConversationAutoFollowType_None
}
nodes {
  idRef {
    id: "388a78a2306466a807000e22"
  }
  index: 20
  text: "Hey, I thought we had an understanding...\n\nWhat do you want now?"
  branches {
    responseText: "Show me where that man\'s son Zipper is, and we\'re really, truly done."
    nextNodeIndex: 21
  }
  nodeType: ConversationNodeType_Simple
  autoFollowBranchDelay: ConversationAutoFollowType_None
}
nodes {
  idRef {
    id: "38f24faa306466200a00196d"
  }
  index: 21
  text: "Hero, huh? Don\'t see that every day."
  branches {
    responseText: "Shut your mouth and show me the way."
    actions {
      ops {
        functionName: "Order Actor to Move To (Region)"
        args {
          call_value {
            functionName: "Get Map Item (Actor)"
            args {
              string_value: "fa36ebe8306466ac190013b0"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "ff9982bd3064665c16006767"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "FacingDirection"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Enable/Disable Interactable Object"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "EnableOrDisable"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (InteractableObject)"
            args {
              string_value: "fa36ebe8306466ac190013b0"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
  autoFollowBranchDelay: ConversationAutoFollowType_None
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Puz_BTLGuy_undecided"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Puz_BTLGuy_wimp"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Puz_BTLGuy_INT"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  nextNodeIndex: 0
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Puz_BTLGuy_wimp"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Puz_BTLGuy_INT"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  nextNodeIndex: 17
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Puz_BTLGuy_undecided"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Puz_BTLGuy_INT"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  nextNodeIndex: 18
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Puz_BTLGuy_INT"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "OR"
      args {
        call_value {
          functionName: "Comparison (bool)"
          args {
            call_value {
              functionName: "Get Variable (bool)"
              args {
                string_value: "hasOpenedStudioDoor"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "IsOrIsNot"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "bool"
              }
              args {
                int_value: 1
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Evaluate Goal"
          args {
            call_value {
              functionName: "Get Map Item (Goal)"
              args {
                string_value: "Save the Man\'s Son"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "GoalStatus"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "IsOrIsNot"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
    }
  }
  nextNodeIndex: 19
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Puz_BTLGuy_INT"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Evaluate Goal"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Save the Man\'s Son"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "hasOpenedStudioDoor"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  nextNodeIndex: 20
}
