idRef {
  id: "2f2c21da3064348c0900679a"
}
ui_name: "c02-s1_Morgue_Dresden02"
nodes {
  idRef {
    id: "2f2c2a163064348c090067a0"
  }
  index: 0
  text: "Sam is my second official Emerald City Ripper victim. The count varies on how many victims there actually are, depending on if you count SINless as real people or not. There have been other corpses showing up scattered around the city with this same MO."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "2f2c21da3064348c0900679a:574bf9a63966300826006167"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "574bf9a6396630082600616a"
  }
  index: 1
  text: ""
  branches {
    responseText: "Emerald City Ripper?"
    nextNodeIndex: 2
    idRef {
      id: "2f2c21da3064348c0900679a:574bf8b23966300826006121"
    }
  }
  branches {
    responseText: "Ripper, huh? I guess the classics never go out of style."
    nextNodeIndex: 2
    idRef {
      id: "2f2c21da3064348c0900679a:574bf8b2396630082600611b"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "Sounds grisly."
    nextNodeIndex: 8
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "2f2c21da3064348c0900679a:574bf8b2396630082600611e"
    }
  }
  branches {
    responseText: "If you consider SINless people?"
    nextNodeIndex: 9
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "2f2c21da3064348c0900679a:5753e365396630fc04001695"
    }
  }
  branches {
    responseText: "Who was the first victim?"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bFirstVictim"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bFirstVictim"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 10
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "2f2c21da3064348c0900679a:574bf911396630082600614e"
    }
  }
  branches {
    responseText: "What did the Ripper take from the first victim?"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bFirstVictim"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 11
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "2f2c21da3064348c0900679a:574bf9fb39663008260061aa"
    }
  }
  branches {
    responseText: "Who was the second victim?"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bSecondVictim"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bSecondVictim"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 12
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "2f2c21da3064348c0900679a:574c02b43966300826006231"
    }
  }
  branches {
    responseText: "Do you know what organ the second victim lost?"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bSecondVictim"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 13
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "2f2c21da3064348c0900679a:574fa357613131d43b003a0b"
    }
  }
  branches {
    responseText: "Who was the third victim?"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bThirdVictim"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bThirdVictim"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 14
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "2f2c21da3064348c0900679a:574c02b43966300826006233"
    }
  }
  branches {
    responseText: "What did the Ripper take from the third victim?"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bThirdVictim"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 15
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "2f2c21da3064348c0900679a:574c02d83966300826006237"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "Convo Loop"
}
nodes {
  idRef {
    id: "2f2d19f13064348c090067a5"
  }
  index: 2
  text: "{{GM}}Dresden sighs.{{/GM}} I know, right? That\342\200\231s what the Seattle screamsheets and bloodhounds have insisted on calling the latest and greatest serial killer in the Seattle Metroplex. They couldn\'t come up with something more original? \n\nAll I know is that like the original Jack, our Ripper knows how to handle a scalpel. But this one\342\200\231s even more twisted... he or she always removes an internal organ as a trophy from the victim."
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "2f2c21da3064348c0900679a:574c023139663008260061fb"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "574c023139663008260061fe"
  }
  index: 3
  text: ""
  branches {
    responseText: "{{CC}}Academic{{/CC}} Couldn\'t it be something catchy and terrifying, like \'Devil in the White City\'?"
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 18
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: 4
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "2f2c21da3064348c0900679a:574bfc8539663008260061c3"
    }
  }
  branches {
    responseText: "What prize did the Ripper take from Sam?"
    nextNodeIndex: 5
    idRef {
      id: "2f2c21da3064348c0900679a:574bf8b23966300826006124"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "Delicious. A trophy hunter. What trophy did the Ripper take from Sam?"
    nextNodeIndex: 5
    idRef {
      id: "2f2c21da3064348c0900679a:574bf8b23966300826006127"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "...And?"
    nextNodeIndex: 5
    idRef {
      id: "2f2c21da3064348c0900679a:574bf8b2396630082600612a"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "Ripper Convo Loop"
}
nodes {
  idRef {
    id: "574c01c339663008260061c6"
  }
  index: 4
  text: "{{GM}}Dresden stares at you, a calculating look in his eyes, and then shakes his head{{/GM}}\n\nNo, it always has to be something new, something catchy, something old re-branded."
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "2f2c21da3064348c0900679a:574c0245396630082600620e"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "2f2de2c73064348c090067ae"
  }
  index: 5
  text: "Watts\342\200\231 liver was cleanly cut out. From what I\'ve heard, he hadn\'t been treating it very well."
  branches {
    responseText: "How about the other lucky contestants?"
    nextNodeIndex: 6
    idRef {
      id: "2f2c21da3064348c0900679a:574bf8b2396630082600612d"
    }
  }
  branches {
    responseText: "Wiz. What else?"
    nextNodeIndex: 6
    idRef {
      id: "2f2c21da3064348c0900679a:574bf8b23966300826006133"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "39295215306434f00f00681f"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "2f2ec8dd3064348c090067b7"
  }
  index: 6
  text: "The first victim\342\200\231s heart was missing, and the second had uterus... I mean, the pancreas removed. Third was kidneys."
  branches {
    responseText: ""
    nextNodeIndex: 7
    idRef {
      id: "2f2c21da3064348c0900679a:574bf8b23966300826006130"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "519c028f3961636019006787"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "d7b7f8dd303633b80c0018cd"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "d263d4983036333017003fae"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Dresden02Complete"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Move To (Region)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "d263d4983036333017003fae"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "392ad326306434f00f00687b"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 3
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "963a397a6233318426002943"
  }
  index: 7
  text: "Dresden! Get out here!"
  sourceInSceneRef {
    id: "39295215306434f00f00681f"
  }
}
nodes {
  idRef {
    id: "574bf92d3966300826006152"
  }
  index: 8
  text: "{{GM}}Dresden looks over Sam\'s body with clinical detachment, gesturing at the incision as he speaks.{{/GM}} \n\nGrisly, and weird. I don\'t know who the Ripper is; wherever he or she got trained, but they drug the patient, clean the body, extract the organ and then let the victim bleed out."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "2f2c21da3064348c0900679a:574bf9bc39663008260061a7"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5753e3b1396630fc0400170c"
  }
  index: 9
  text: "{{GM}}Dresden smiles sadly{{/GM}}\n\nIf you ask Lonestar, if you don\'t got a System Identification Number, you\'re not a real person. Several million residents of the greater Seattle Metroplex feel very differently about it. Personally, I consider them people, but it affects how the count of the victims are done."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "2f2c21da3064348c0900679a:5753e3b3396630fc0400170e"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "2f2c21da3064348c0900679a:574bfbe239663008260061af"
  }
  index: 10
  text: "{{GM}}Dresden bumps his chin with the first knuckle of his blue-gloved fist, careful not to get any gunk too close to his mouth.{{/GM}}\nFirst one was Eisen. It wasn\'t that long ago. She got dumped locally, and showed up on my slab already cleaned and dead. \n\nThat\'s a hell of a story, but maybe another time."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "2f2c21da3064348c0900679a:574bfbe239663008260061b1"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "2f2c21da3064348c0900679a:574bfc1739663008260061ba"
  }
  index: 11
  text: "First victim lost her heart, your standard four-chambered blood pump."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "2f2c21da3064348c0900679a:574bfc1739663008260061bc"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "574c0337396630082600623a"
  }
  index: 12
  text: "{{GM}}Dresden looks distant for a moment, the smile slipping at the edges while he\'s thinking about something unpleasant.{{/GM}}\n\nHope Williams. Sorry, I don\'t want to talk about the second victim at all."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "2f2c21da3064348c0900679a:574c037d396630082600628c"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "2f2c21da3064348c0900679a:574fa391613131d43b003a0d"
  }
  index: 13
  text: "Second victim... pancreas? I\'m not completely sure."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "2f2c21da3064348c0900679a:574fa391613131d43b003a0f"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "574c039c3966300826006290"
  }
  index: 14
  text: "Bolden. Cut down, dumped in Kirkland, on the edge of Lake Washington.\n\nCaused quite a fuss up in Bellvue, which is when this \'Ripper\' nonsense really caught fire."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "2f2c21da3064348c0900679a:574c03de3966300826006295"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "574c03c43966300826006293"
  }
  index: 15
  text: "Kidney, I think. Er- Maybe both kidneys?  I\'d have to review my notes to remember all the details."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "2f2c21da3064348c0900679a:574c03e23966300826006299"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
roots {
  responseText: ""
  nextNodeIndex: 0
  idRef {
    id: "2f2c21da3064348c0900679a:574bf8b23966300826006118"
  }
}
