idRef {
  id: "2f2c21da3064348c0900679a"
}
ui_name: "c02-s1_Morgue_Dresden02"
nodes {
  idRef {
    id: "2f2c2a163064348c090067a0"
  }
  index: 0
  text: "Sam is my ...uhh.. second Emerald City Ripper victim. The third one was downtown. "
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "2f2c21da3064348c0900679a:574bf9a63966300826006167"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "574bf9a6396630082600616a"
  }
  index: 1
  text: ""
  branches {
    responseText: "Ripper, huh? I guess the classics never go out of style."
    nextNodeIndex: 3
    idRef {
      id: "2f2c21da3064348c0900679a:574bf8b2396630082600611b"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "Sounds grisly."
    nextNodeIndex: 2
    idRef {
      id: "2f2c21da3064348c0900679a:574bf8b2396630082600611e"
    }
  }
  branches {
    responseText: "Emerald City Ripper?"
    nextNodeIndex: 3
    idRef {
      id: "2f2c21da3064348c0900679a:574bf8b23966300826006121"
    }
  }
  branches {
    responseText: "Who was the first victim?"
    nextNodeIndex: 9
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "2f2c21da3064348c0900679a:574bf911396630082600614e"
    }
  }
  branches {
    responseText: "What did the Ripper take from the first victim?"
    nextNodeIndex: 10
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "2f2c21da3064348c0900679a:574bf9fb39663008260061aa"
    }
  }
  branches {
    responseText: "Who was the second victim?"
    nextNodeIndex: 11
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "2f2c21da3064348c0900679a:574c02b43966300826006231"
    }
  }
  branches {
    responseText: "Who was the third victim?"
    nextNodeIndex: 12
    idRef {
      id: "2f2c21da3064348c0900679a:574c02b43966300826006233"
    }
  }
  branches {
    responseText: "What did the Ripper take from the third victim?"
    nextNodeIndex: 13
    idRef {
      id: "2f2c21da3064348c0900679a:574c02d83966300826006237"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "Convo Loop"
}
nodes {
  idRef {
    id: "574bf92d3966300826006152"
  }
  index: 2
  text: "Grisly, and weird. I don\'t know who the Ripper is; wherever he or she got trained, but they clean the body, drug the patient, extract the organ, and let the victim bleed out."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "2f2c21da3064348c0900679a:574bf9bc39663008260061a7"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "2f2d19f13064348c090067a5"
  }
  index: 3
  text: "{{GM}}Dresden sighs.{{/GM}} I know, right? They couldn\'t come up with something more original? That\342\200\231s what the Seattle screamsheets and bloodhounds have insisted on calling the latest and greatest serial killer in the Seattle Metroplex. \n\nAll I know is that like the original Jack, our Ripper knows how to handle a scalpel. But this one\342\200\231s even more twisted... he or she always removes an internal organ from the victim."
  branches {
    responseText: ""
    nextNodeIndex: 4
    idRef {
      id: "2f2c21da3064348c0900679a:574c023139663008260061fb"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "574c023139663008260061fe"
  }
  index: 4
  text: ""
  branches {
    responseText: "{{CC}}Academic{{/CC}} Couldn\'t it be something catchy and terrifying, like \'Devil in the White City\'?"
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 18
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: 5
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "2f2c21da3064348c0900679a:574bfc8539663008260061c3"
    }
  }
  branches {
    responseText: "What prize did the Ripper take from Sam?"
    nextNodeIndex: 6
    idRef {
      id: "2f2c21da3064348c0900679a:574bf8b23966300826006124"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "Delicious. A trophy hunter. What was it?"
    nextNodeIndex: 6
    idRef {
      id: "2f2c21da3064348c0900679a:574bf8b23966300826006127"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "...And?"
    nextNodeIndex: 6
    idRef {
      id: "2f2c21da3064348c0900679a:574bf8b2396630082600612a"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "Ripper Convo Loop"
}
nodes {
  idRef {
    id: "574c01c339663008260061c6"
  }
  index: 5
  text: "{{GM}}Dresden stares at you, a calculating look in his eyes, and then shakes his head{{/GM}}\n\nNo, it always has to be something new, something catchy, something old re-branded."
  branches {
    responseText: ""
    nextNodeIndex: 4
    idRef {
      id: "2f2c21da3064348c0900679a:574c0245396630082600620e"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "2f2de2c73064348c090067ae"
  }
  index: 6
  text: "Watts\342\200\231 liver was cleanly cut out. From what I\'ve heard, he hadn\'t been treating it very well."
  branches {
    responseText: "How about the other lucky contestants?"
    nextNodeIndex: 7
    idRef {
      id: "2f2c21da3064348c0900679a:574bf8b2396630082600612d"
    }
  }
  branches {
    responseText: "Wiz. What else?"
    nextNodeIndex: 7
    idRef {
      id: "2f2c21da3064348c0900679a:574bf8b23966300826006133"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "39295215306434f00f00681f"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "2f2ec8dd3064348c090067b7"
  }
  index: 7
  text: "The first victim\342\200\231s heart was missing, and the third had uterus... I mean, the spleen removed. "
  branches {
    responseText: ""
    nextNodeIndex: 8
    idRef {
      id: "2f2c21da3064348c0900679a:574bf8b23966300826006130"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "519c028f3961636019006787"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "d7b7f8dd303633b80c0018cd"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "d263d4983036333017003fae"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Dresden02Complete"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Move To (Region)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "d263d4983036333017003fae"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "392ad326306434f00f00687b"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 3
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "963a397a6233318426002943"
  }
  index: 8
  text: "Dresden! Get out here!"
  sourceInSceneRef {
    id: "39295215306434f00f00681f"
  }
}
nodes {
  idRef {
    id: "2f2c21da3064348c0900679a:574bfbe239663008260061af"
  }
  index: 9
  text: "Eisen, I think? It wasn\'t that long ago. She showed up on my slab, cleaned and cut on."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "2f2c21da3064348c0900679a:574bfbe239663008260061b1"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "2f2c21da3064348c0900679a:574bfc1739663008260061ba"
  }
  index: 10
  text: "First victim lost her heart, your standard four-chambered emotional blood pump."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "2f2c21da3064348c0900679a:574bfc1739663008260061bc"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "574c0337396630082600623a"
  }
  index: 11
  text: "I didn\'t work the second victim, they were downtown. Czech, or Cech? Something like that.  From what I heard, the MO was the same as the first body, though.\n\nOperated, organ extracted, dumped naked and clean afterward."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "2f2c21da3064348c0900679a:574c037d396630082600628c"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "574c039c3966300826006290"
  }
  index: 12
  text: "Bolden, I think the name was. Cut down, dumped into Lake Washington."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "2f2c21da3064348c0900679a:574c03de3966300826006295"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "574c03c43966300826006293"
  }
  index: 13
  text: "Kidney, I think. Er- Both of them, if I remember correctly."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "2f2c21da3064348c0900679a:574c03e23966300826006299"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
roots {
  responseText: ""
  nextNodeIndex: 0
  idRef {
    id: "2f2c21da3064348c0900679a:574bf8b23966300826006118"
  }
}
