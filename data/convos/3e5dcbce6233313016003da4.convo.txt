idRef {
  id: "3e5dcbce6233313016003da4"
}
ui_name: "c11-s2_Matrix_JohnnyRegroup"
nodes {
  idRef {
    id: "3e5e2c5b6233313016003daa"
  }
  index: 0
  text: "So here\'s what we know: Our DNA sequence belongs to a dead man. The death was never explained and happened under suspicious circumstances. Our dead man worked with chop shops... which fits with the profile of the LIVING Ripper Killer that you\'ve met. \n"
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "3e5dcbce6233313016003da4:5968383e346265ac2700398d"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "3e5e769e6233313016003dad"
  }
  index: 1
  text: "The NewsNet article said our dead man left his entire estate to his psychiatrist. \nWe track down who his psychiatrist was, and that will give us our next clue."
  branches {
    responseText: ""
    nextNodeIndex: 2
    idRef {
      id: "3e5dcbce6233313016003da4:5968383e346265ac27003990"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "3e5e88236233313016003db0"
  }
  index: 2
  text: "My gut says, we can deck in to the medical board\'s records and reverse trace to find this doctor. \n\nGood news is that their trace system isn\'t as dangerous for the Seamstress Union. Bad news is their Black IC is honed with decades of dubious medical research.\nYou in?"
  branches {
    responseText: "Punch it, man. "
    actions {
      ops {
        functionName: "Change Actor Team"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Actor)"
                args {
                  string_value: "fafbad9c623331341400482c"
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (string)"
            args {
              string_value: "FactionList"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (SceneDimension)"
            args {
              string_value: "Default"
            }
          }
        }
      }
      ops {
        functionName: "Change Actor Control"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Actor)"
                args {
                  string_value: "fafbad9c623331341400482c"
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "PlayerOrAI"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Force-Use Interactable Object (with Actor)"
        args {
          call_value {
            functionName: "Get Map Item (InteractableObject)"
            args {
              string_value: "3e60eac16233313016003dd8"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Actor)"
            args {
              string_value: "fafbad9c623331341400482c"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    idRef {
      id: "3e5dcbce6233313016003da4:5968383e346265ac27003993"
    }
  }
  branches {
    responseText: "{{CC}}Decker{{/CC}} I\'ll track down this psychiatrist."
    conditions {
      ops {
        functionName: "Evaluate If Actor Is Decker"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Force-Use Interactable Object (with Actor)"
        args {
          call_value {
            functionName: "Get Map Item (InteractableObject)"
            args {
              string_value: "3e60eac16233313016003dd8"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    hideIfUnavailable: true
    idRef {
      id: "3e5dcbce6233313016003da4:5968383e346265ac27003995"
    }
  }
  branches {
    responseText: "{{CC}}Violet{{/CC}} Hey, kid. You ready to take on the medical board?"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Story Variable (bool)"
            args {
              string_value: "57084f7c6631365c1600767e"
            }
            args {
              string_value: "Crew_Recruited_Violet"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 3
    idRef {
      id: "596834b2346265ac2700392b:5968ae95346265581b007420"
    }
  }
  branches {
    responseText: "Give me a minute to collect my thoughts."
    nextNodeIndex: -1
    idRef {
      id: "3e5dcbce6233313016003da4:5968383e346265ac27003997"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5968af1e346265581b00743e"
  }
  index: 3
  text: "{{GM}}Violet grins.{{/GM}}\n\nHell yeah. I\'ve even been in their system before. "
  branches {
    responseText: ""
    nextNodeIndex: 4
    idRef {
      id: "3e5dcbce6233313016003da4:597456aa396630681e00511b"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5961b21f3462655813003e9f"
  }
}
nodes {
  idRef {
    id: "597456aa396630681e00511e"
  }
  index: 4
  text: "{{GM}}She pats her deck affectionately.{{/GM}}\n\nOnce. Like a while ago. But I tweaked one of their personality test programs for a friend. I mean, a client, I guess. I mean, she paid me to do it."
  branches {
    responseText: "Go for it."
    actions {
      ops {
        functionName: "Change Actor Team"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Actor)"
                args {
                  string_value: "5961b21f3462655813003e9f"
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (string)"
            args {
              string_value: "FactionList"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (SceneDimension)"
            args {
              string_value: "Default"
            }
          }
        }
      }
      ops {
        functionName: "Change Actor Control"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Actor)"
                args {
                  string_value: "5961b21f3462655813003e9f"
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "PlayerOrAI"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Force-Use Interactable Object (with Actor)"
        args {
          call_value {
            functionName: "Get Map Item (InteractableObject)"
            args {
              string_value: "3e60eac16233313016003dd8"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Actor)"
            args {
              string_value: "5961b21f3462655813003e9f"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    idRef {
      id: "3e5dcbce6233313016003da4:5968b026346265581b007440"
    }
  }
  branches {
    responseText: "Sounds like there\'s a story behind that."
    nextNodeIndex: 5
    idRef {
      id: "3e5dcbce6233313016003da4:5968b08c346265581b007442"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5961b21f3462655813003e9f"
  }
}
nodes {
  idRef {
    id: "5968b0f5346265581b007445"
  }
  index: 5
  text: "Yeah? Um, sure. She was on trial for something. Stealing from her employer? I think. Anyway, her lawyer said the only way for her to walk would be if the court\'s medical expert said she was, like insane, but you know, just had a compulsion to steal.\n\nAnd since the medical expert was an expert system run by the medical board, she asked me to make sure she passed. Or failed, or whatever. {{GM}}Violet shrugs.{{/GM}}"
  branches {
    responseText: "Go ahead and track down this psychiatrist, then."
    actions {
      ops {
        functionName: "Change Actor Team"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Actor)"
                args {
                  string_value: "5961b21f3462655813003e9f"
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (string)"
            args {
              string_value: "FactionList"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (SceneDimension)"
            args {
              string_value: "Default"
            }
          }
        }
      }
      ops {
        functionName: "Change Actor Control"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Actor)"
                args {
                  string_value: "5961b21f3462655813003e9f"
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "PlayerOrAI"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Force-Use Interactable Object (with Actor)"
        args {
          call_value {
            functionName: "Get Map Item (InteractableObject)"
            args {
              string_value: "3e60eac16233313016003dd8"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Actor)"
            args {
              string_value: "5961b21f3462655813003e9f"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    idRef {
      id: "3e5dcbce6233313016003da4:5968b208346265581b007449"
    }
  }
  branches {
    responseText: "Did she get off?"
    nextNodeIndex: 6
    idRef {
      id: "3e5dcbce6233313016003da4:5968b1fd346265581b007447"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5961b21f3462655813003e9f"
  }
}
nodes {
  idRef {
    id: "3e5dcbce6233313016003da4:5968b22e346265581b00744c"
  }
  index: 6
  text: "Sort of? Like, the program said she wasn\'t culpable, and the court mandated a treatment program rather than jail.\n\nBut like, she went to this place- I mean, they sent her there, and she said it was a total nightmare. Like, she didn\'t know who was crazier, the patients or the doctors. In the end, they installed a datajack in her neck that just ran a simsense program so whenever she even thought about stealing something it made her violently ill."
  branches {
    responseText: "Hopefully it turns out better this time."
    actions {
      ops {
        functionName: "Change Actor Team"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Actor)"
                args {
                  string_value: "5961b21f3462655813003e9f"
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (string)"
            args {
              string_value: "FactionList"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (SceneDimension)"
            args {
              string_value: "Default"
            }
          }
        }
      }
      ops {
        functionName: "Change Actor Control"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Actor)"
                args {
                  string_value: "5961b21f3462655813003e9f"
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "PlayerOrAI"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Force-Use Interactable Object (with Actor)"
        args {
          call_value {
            functionName: "Get Map Item (InteractableObject)"
            args {
              string_value: "3e60eac16233313016003dd8"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Actor)"
            args {
              string_value: "5961b21f3462655813003e9f"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    idRef {
      id: "3e5dcbce6233313016003da4:5968b22e346265581b00744e"
    }
  }
  branches {
    responseText: "What happened after that?"
    nextNodeIndex: 7
    idRef {
      id: "3e5dcbce6233313016003da4:5968b350346265581b007455"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5961b21f3462655813003e9f"
  }
}
nodes {
  idRef {
    id: "3e5dcbce6233313016003da4:5968b395346265581b007457"
  }
  index: 7
  text: "Doc Castle ended up removing the jack after a month. She said it looked like a first year intern had installed it... \"While high on Novacoke and Bliss, blindfolded, and with only a basic understanding of metahuman anatomy.\" {{GM}}Violet seems pleased with her impression of Doctor Castle.{{/GM}}"
  branches {
    responseText: "Go ahead and track down this psychiatrist, then."
    actions {
      ops {
        functionName: "Change Actor Team"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Actor)"
                args {
                  string_value: "5961b21f3462655813003e9f"
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (string)"
            args {
              string_value: "FactionList"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (SceneDimension)"
            args {
              string_value: "Default"
            }
          }
        }
      }
      ops {
        functionName: "Change Actor Control"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Actor)"
                args {
                  string_value: "5961b21f3462655813003e9f"
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "PlayerOrAI"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Force-Use Interactable Object (with Actor)"
        args {
          call_value {
            functionName: "Get Map Item (InteractableObject)"
            args {
              string_value: "3e60eac16233313016003dd8"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Actor)"
            args {
              string_value: "5961b21f3462655813003e9f"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    idRef {
      id: "3e5dcbce6233313016003da4:5968b395346265581b007459"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5961b21f3462655813003e9f"
  }
}
roots {
  responseText: ""
  nextNodeIndex: 0
  idRef {
    id: "3e5dcbce6233313016003da4:5968383e346265ac2700398a"
  }
}
