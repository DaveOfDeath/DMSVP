idRef {
  id: "3e5dcbce6233313016003da4"
}
ui_name: "c11-s2_Matrix_JohnnyRegroup"
nodes {
  idRef {
    id: "3e5e2c5b6233313016003daa"
  }
  index: 0
  text: "So here\'s what we know. Our DNA evidence belongs to a dead man, whose death was never explained. He worked with chop shops... which fits with the LIVING guy that you\'ve met. \n"
  branches {
    responseText: ""
    nextNodeIndex: 1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "3e5e769e6233313016003dad"
  }
  index: 1
  text: "The NewsNet says he left his estate to his psychiatrist. Maybe finding out who his psychiatrist was will give us our next clue."
  branches {
    responseText: ""
    nextNodeIndex: 2
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "3e5e88236233313016003db0"
  }
  index: 2
  text: "My gut says, we can deck in to the medical board\'s records and reverse trace to find this doctor. You in?"
  branches {
    responseText: "Punch it, man. "
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "hasNoDecking"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Force-Use Interactable Object (with Actor)"
        args {
          call_value {
            functionName: "Get Map Item (InteractableObject)"
            args {
              string_value: "3e80638b6233313016003de3"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Actor)"
            args {
              string_value: "fafbad9c623331341400482c"
            }
          }
        }
      }
      ops {
        functionName: "End Current Team Round"
      }
    }
    nextNodeIndex: -1
    hideIfUnavailable: true
  }
  branches {
    responseText: "Punch it, man. "
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "hasNoDecking"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Force-Use Interactable Object (with Actor)"
        args {
          call_value {
            functionName: "Get Map Item (InteractableObject)"
            args {
              string_value: "3e80638b6233313016003de3"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Actor)"
            args {
              string_value: "fafbad9c623331341400482c"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    hideIfUnavailable: true
  }
  branches {
    responseText: "Give me a minute to collect my thoughts."
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
roots {
  responseText: ""
  nextNodeIndex: 0
}
