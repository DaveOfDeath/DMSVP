idRef {
  id: "51b0eaa26336359408001add"
}
ui_name: "c21-s1 Brother Christopher"
nodes {
  idRef {
    id: "51b0eab46336359408001ae3"
  }
  index: 0
  text: "I rejoice to be with you. How may I help you?"
  branches {
    responseText: "I need a replacement for my keycard."
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "c21-s1 Melted blank UB ID card"
            }
          }
        }
      }
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Maintenance"
            }
          }
        }
      }
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "c21-s1_Willy Hansen ID"
            }
          }
        }
      }
    }
    nextNodeIndex: 1
    hideIfUnavailable: true
    idRef {
      id: "51b0eaa26336359408001add:599755f066313694170015b4"
    }
  }
  branches {
    responseText: "Sister Sally at the front desk sent me to you. "
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "TalkedtoSally"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "c21-s1 Melted blank UB ID card"
            }
          }
        }
      }
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bHasDisguise_Janitor"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 12
    hideIfUnavailable: true
    idRef {
      id: "51b0eaa26336359408001add:599755f066313694170015d8"
    }
  }
  branches {
    responseText: "Is this the office door?"
    conditions {
      ops {
        functionName: "AND"
        args {
          call_value {
            functionName: "Evaluate If Actor Has Item"
            args {
              call_value {
                functionName: "Specific Actor"
                args {
                  call_value {
                    functionName: "Get Map Item (Player)"
                    args {
                      int_value: 0
                    }
                  }
                }
                args {
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "HasOrHasNot"
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Map Item (Item)"
                args {
                  string_value: "c21-s1 Home Access Card"
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Evaluate If Actor Has Item"
            args {
              call_value {
                functionName: "Specific Actor"
                args {
                  call_value {
                    functionName: "Triggering Actor"
                  }
                }
                args {
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "HasOrHasNot"
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Map Item (Item)"
                args {
                  string_value: "c21-s1 Janitor ID Card"
                }
              }
            }
          }
        }
      }
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "c21-s1_Sanctuary Access Card"
            }
          }
        }
      }
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bHasDisguise_Janitor"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 17
    hideIfUnavailable: true
    idRef {
      id: "51b0eaa26336359408001add:599755f066313694170015ef"
    }
  }
  branches {
    responseText: "Is this the office door?"
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "c21-s1_Sanctuary Access Card"
            }
          }
        }
      }
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bHasDisguise_Cult"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 20
    hideIfUnavailable: true
    idRef {
      id: "51b0eaa26336359408001add:599755f066313694170015fd"
    }
  }
  branches {
    responseText: "Is this the office door?"
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "c21-s1_Sanctuary Access Card"
            }
          }
        }
      }
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bHasDisguise_Janitor"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 21
    hideIfUnavailable: true
    idRef {
      id: "51b0eaa26336359408001add:599755f06631369417001600"
    }
  }
  branches {
    responseText: "I have a blank keycard."
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "c21-s1 Blank UB ID card"
            }
          }
        }
      }
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "c21-s1_Sanctuary Access Card"
            }
          }
        }
      }
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bHasDisguise_Janitor"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 22
    hideIfUnavailable: true
    idRef {
      id: "51b0eaa26336359408001add:599755f06631369417001603"
    }
  }
  branches {
    responseText: "Is this the office door?"
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "c21-s1_Sanctuary Access Card"
            }
          }
        }
      }
    }
    nextNodeIndex: 23
    hideIfUnavailable: true
    idRef {
      id: "51b0eaa26336359408001add:599755f06631369417001606"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "SpoketoChristopher"
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
}
nodes {
  idRef {
    id: "51b0fbf96336359408001ae7"
  }
  index: 1
  text: "Do you have your old keycard?"
  branches {
    responseText: "{{GM}}Hand him the melted UB keycard.{{/GM}}"
    actions {
      ops {
        functionName: "Remove Item from Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "c21-s1 Melted blank UB ID card"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 2
    idRef {
      id: "51b0eaa26336359408001add:599755f066313694170015b7"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51b0fc286336359408001aea"
  }
  index: 2
  text: "Wow, what happened to this?"
  branches {
    responseText: "It melted in the clothes dryer."
    nextNodeIndex: 3
    idRef {
      id: "51b0eaa26336359408001add:599755f066313694170015ba"
    }
  }
  branches {
    responseText: "Long story. Might take awhile."
    nextNodeIndex: 11
    idRef {
      id: "51b0eaa26336359408001add:599755f066313694170015d2"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51b0fcb86336359408001aee"
  }
  index: 3
  text: "You would be surprised how many times I\'ve heard that one."
  branches {
    responseText: ""
    nextNodeIndex: 4
    idRef {
      id: "51b0eaa26336359408001add:599755f066313694170015bd"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51b0ff276336359408001b3f"
  }
  index: 4
  text: "Why are you out of uniform?"
  branches {
    responseText: "I was mugged while recruiting in the Barrens."
    nextNodeIndex: 5
    idRef {
      id: "51b0eaa26336359408001add:599755f066313694170015c0"
    }
  }
  branches {
    responseText: "I was working undercover in the Barrens."
    nextNodeIndex: 6
    idRef {
      id: "51b0eaa26336359408001add:599755f066313694170015c3"
    }
  }
}
nodes {
  idRef {
    id: "51b0ff276336359408001b42"
  }
  index: 5
  text: "Really sorry to hear that. I\'ll let you into the office and you can use a terminal to log in and make yourself a new card. "
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Force-Use Interactable Object (Basic)"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "51c0ecf9633635141d003918"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "51b0ff276336359408001b45"
  }
  index: 6
  text: "Who are you working undercover for?"
  branches {
    responseText: "Jessica Watts."
    nextNodeIndex: 7
    idRef {
      id: "51b0eaa26336359408001add:599755f066313694170015c6"
    }
  }
  branches {
    responseText: "Grandmother Jessica."
    nextNodeIndex: 8
    idRef {
      id: "51b0eaa26336359408001add:599755f066313694170015c9"
    }
  }
  branches {
    responseText: "Lynne Telestrian."
    nextNodeIndex: 9
    idRef {
      id: "51b0eaa26336359408001add:599755f066313694170015cc"
    }
  }
  branches {
    responseText: "Mother Lynne."
    nextNodeIndex: 10
    idRef {
      id: "51b0eaa26336359408001add:599755f066313694170015cf"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51b0ff276336359408001b48"
  }
  index: 7
  text: "As I suspected you\'re not one of us. Get out of here. "
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "PissedOffChristopher"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "51b0ff276336359408001b4b"
  }
  index: 8
  text: "Wow, never heard about that before. Sounds chill.\n\nI\'ll let you into the office. Use a terminal to log in and make yourself a new card. "
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Force-Use Interactable Object (Basic)"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "51c0ecf9633635141d003918"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "51b0ff276336359408001b4e"
  }
  index: 9
  text: "As I suspected you\'re not one of us. Get out of here. "
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "PissedOffChristopher"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "51b3cdcc633635c017002b59"
  }
  index: 10
  text: "That makes no sense. I\'m not letting you in until Mother Lynne is here with you. "
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "PissedOffChristopher"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "51b0fe8f6336359408001b01"
  }
  index: 11
  text: "I look forward to hearing it one day."
  branches {
    responseText: ""
    nextNodeIndex: 4
    idRef {
      id: "51b0eaa26336359408001add:599755f066313694170015d5"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51b0ff8c6336359408001b65"
  }
  index: 12
  text: "And why did she send you to me?"
  branches {
    responseText: "My keycard was ruined and I need a new one."
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "c21-s1 Melted blank UB ID card"
            }
          }
        }
      }
    }
    nextNodeIndex: 13
    hideIfUnavailable: true
    idRef {
      id: "51b0eaa26336359408001add:599755f066313694170015db"
    }
  }
  branches {
    responseText: "She said to talk to you about getting access to the office."
    nextNodeIndex: 14
    idRef {
      id: "51b0eaa26336359408001add:599755f066313694170015e1"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51b101676336359408001b6a"
  }
  index: 13
  text: ""
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "51b0eaa26336359408001add:599755f066313694170015de"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51b101926336359408001b8f"
  }
  index: 14
  text: "Who are you, and why do you need to get into the office?"
  branches {
    responseText: "I\'m $(s.name) and my keycard is ruined."
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "c21-s1 Melted blank UB ID card"
            }
          }
        }
      }
    }
    nextNodeIndex: 15
    hideIfUnavailable: true
    idRef {
      id: "51b0eaa26336359408001add:599755f066313694170015e4"
    }
  }
  branches {
    responseText: "{{CC}}Etiquette: Security{{/CC}} I\'m $(s.name). My firm has been hired by a... Ms. Jessica Watts, to check the office terminals for Matrix security holes."
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 14
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    nextNodeIndex: 16
    idRef {
      id: "51b0eaa26336359408001add:599755f066313694170015ea"
    }
  }
  branches {
    responseText: "I will have to get back to you on that one."
    nextNodeIndex: -1
    idRef {
      id: "51b0eaa26336359408001add:599755f066313694170015ed"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51b104ed6336359408001bbc"
  }
  index: 15
  text: ""
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "51b0eaa26336359408001add:599755f066313694170015e7"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51b104ff6336359408001be1"
  }
  index: 16
  text: "Ok. Sister Dawne is in there, check in with her."
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Force-Use Interactable Object (Basic)"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "51c0ecf9633635141d003918"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "af18ea07306434e40800441a"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "51b93cf96336353827001706"
  }
  index: 17
  text: "Yes, but it is off limits to the public."
  branches {
    responseText: "I am a $(scene.BroSis), not a member of the public. My keycard is not working."
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "c21-s1 Melted blank UB ID card"
            }
          }
        }
      }
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Maintenance"
            }
          }
        }
      }
    }
    nextNodeIndex: 18
    hideIfUnavailable: true
    idRef {
      id: "51b0eaa26336359408001add:599755f066313694170015f2"
    }
  }
  branches {
    responseText: "I have a blank keycard."
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "c21-s1 Blank UB ID card"
            }
          }
        }
      }
    }
    nextNodeIndex: 19
    hideIfUnavailable: true
    idRef {
      id: "51b0eaa26336359408001add:599755f066313694170015f8"
    }
  }
  branches {
    responseText: "Thanks I will keep looking around."
    nextNodeIndex: -1
    idRef {
      id: "51b0eaa26336359408001add:599755f066313694170015fb"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51b93f226336353827001710"
  }
  index: 18
  text: ""
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "51b0eaa26336359408001add:599755f066313694170015f5"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51b93fd9633635382700173a"
  }
  index: 19
  text: "You shouldn\'t have a blank card.\n\n{{GM}}Brother Christopher takes the blank keycard from you.{{/GM}}"
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Remove Item from Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "c21-s1 Blank UB ID card"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "51b93d356336353827001709"
  }
  index: 20
  text: "Yes, it is $(scene.BroSis). You can enter with your Home or Sanctuary access keycard."
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51b93d7b633635382700170c"
  }
  index: 21
  text: "Yes. If you need to enter, you can use your janitor keycard to do so. "
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51b9401f633635382700173c"
  }
  index: 22
  text: "{{GM}}Brother Christopher takes the blank keycard from you.{{/GM}}\n\nYou shouldn\'t have a blank card."
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Remove Item from Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "c21-s1 Blank UB ID card"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "51ddd9e7303031280f00158b"
  }
  index: 23
  text: "Yes, it is $(scene.BroSis). I would not expect a new face to have such high clearance already. Your key card will allow you access."
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51cdfdd963363510120014f3"
  }
  index: 24
  text: "Go away, I\'m not letting you into the office. "
  nodeType: ConversationNodeType_Simple
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "PissedOffChristopher"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  nextNodeIndex: 0
  idRef {
    id: "51b0eaa26336359408001add:599755f066313694170015b1"
  }
}
roots {
  responseText: ""
  nextNodeIndex: 24
  idRef {
    id: "51b0eaa26336359408001add:599755f06631369417001609"
  }
}
