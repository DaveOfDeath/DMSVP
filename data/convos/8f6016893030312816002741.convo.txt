idRef {
  id: "8f6016893030312816002741"
}
ui_name: "c07-s1_DocStore"
nodes {
  idRef {
    id: "8f604ff83030312816002747"
  }
  index: 0
  text: "In shadowrunner circles, the term \"doctor\" is often used quite liberally to describe any sawbones with a needle and thread. But in the case of the Union\'s resident medical expert, nothing could be further from the truth. The safe house boasts a fully-equipped medical suite, complete with shamanic fetishes and a hermetic library. \n\nThis is Sixth World medicine of the highest caliber."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "8f6016893030312816002741:586372ee396630d40f007a44"
    }
  }
  nodeType: ConversationNodeType_GM_Voice
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "countDoctorVisits"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "hasTalkedToDoc"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "51d08f173236646019001ff1"
  }
  index: 1
  text: "{{GM}}The doctor herself is an unassuming sort, perhaps the type to go unnoticed entirely, if not for the spritely spirit perched on her shoulder like her own personal gargoyle. The spirit\'s burning eyes follow you constantly, even as the doctor\'s own eyes are buried in her charts. However, she does look up long enough to acknowledge your approach.{{/GM}}\n\nI\'m Dr. Castle. I understand you were instrumental in bringing Coyote back to us. Thank you for that, she\'s dear to many of us."
  branches {
    responseText: "And I suppose you were the one who patched her up. Impressive work."
    nextNodeIndex: 2
    idRef {
      id: "8f6016893030312816002741:586372ee396630d40f007a47"
    }
  }
  branches {
    responseText: "Null sheen. Now, fixing up her arm, that was a piece of work."
    nextNodeIndex: 3
    idRef {
      id: "8f6016893030312816002741:586372ee396630d40f007a4d"
    }
  }
  branches {
    responseText: "You\'re welcome, doc. And I gotta say, that was some work you did on her. Your talents may be going to waste down here."
    nextNodeIndex: 4
    idRef {
      id: "8f6016893030312816002741:586372ee396630d40f007a53"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51d0922b32366460190020aa"
  }
  index: 2
  text: "{{GM}}Doctor Castle nods, taking the compliment.{{/GM}}\n\nThank you. It\'s a shame she wouldn\'t let me repair her face, though."
  branches {
    responseText: ""
    nextNodeIndex: 5
    idRef {
      id: "8f6016893030312816002741:586372ee396630d40f007a4a"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51d0924c32366460190020ad"
  }
  index: 3
  text: "{{GM}}Doctor Castle shrugs, looking at the suite loaded with every luxury.{{/GM}}\n\nSurprisingly routine, about once a week, as it so happens."
  branches {
    responseText: ""
    nextNodeIndex: 5
    idRef {
      id: "8f6016893030312816002741:586372ee396630d40f007a50"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51d0921b3236646019002084"
  }
  index: 4
  text: "{{GM}}She nods, acknowledging your compliment.{{/GM}}\n\nHigh praise for a simple arm swap, especially since she wouldn\342\200\231t let me repair her face."
  branches {
    responseText: ""
    nextNodeIndex: 5
    idRef {
      id: "8f6016893030312816002741:586372ee396630d40f007a56"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51d0921b3236646019002087"
  }
  index: 5
  text: "{{GM}}She notes you eyeballing the facilities.{{/GM}}\n\nI can tell you\'re surprised to find a full-service medbay under a dive bar in a slum. Don\'t be. This more than a mere shadowrunner bar, after all."
  branches {
    responseText: ""
    nextNodeIndex: 6
    idRef {
      id: "8f6016893030312816002741:586372ee396630d40f007a59"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51d0933832366460190020f7"
  }
  index: 6
  text: "For a purveyor of cyberware and trauma kits, there is no better place to set up a practice. I patch runners up, install and maintain their cyberware, and provide medical supplies for their runs. I may not be as mobile as Doc Wagon, but I\'m the next best thing.\n\nIt also allows me funding to run a small clinic here in Touristville, get normal people regular treatment.\n\nCan I help you with anything?"
  branches {
    responseText: ""
    nextNodeIndex: 7
    idRef {
      id: "8f6016893030312816002741:586372ee396630d40f007a5c"
    }
  }
}
nodes {
  idRef {
    id: "51d0933832366460190020fa"
  }
  index: 7
  text: ""
  branches {
    responseText: "Tell me more about trauma kits."
    nextNodeIndex: 8
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "51d164b13236646019003016"
    }
  }
  branches {
    responseText: "Let\'s see your medical supplies."
    actions {
      ops {
        functionName: "Open Store Screen From Actor"
        args {
          call_value {
            functionName: "Get Map Item (Actor)"
            args {
              string_value: "8c5128bf3030313417004385"
            }
          }
        }
      }
    }
    nextNodeIndex: 7
    idRef {
      id: "8f6016893030312816002741:586372ee396630d40f007a67"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "What cyberware do you have available?"
    actions {
      ops {
        functionName: "Open Cyberware Screen From Actor"
        args {
          call_value {
            functionName: "Get Map Item (Actor)"
            args {
              string_value: "8c5128bf3030313417004385"
            }
          }
        }
      }
    }
    nextNodeIndex: 7
    idRef {
      id: "8f6016893030312816002741:586372ee396630d40f007a6a"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "I see shamanic fetishes. Are you a shaman too?"
    nextNodeIndex: 10
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "51d0955d3236646019002143"
    }
  }
  branches {
    responseText: "What\342\200\231s that on your shoulder?"
    nextNodeIndex: 11
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "51d0cf563236646019002cad"
    }
  }
  branches {
    responseText: "Thanks for your time."
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "countDoctorVisits"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: 12
    hideIfUnavailable: true
    idRef {
      id: "8f6016893030312816002741:586372ee396630d40f007a77"
    }
  }
  branches {
    responseText: "Nevermind."
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "countDoctorVisits"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: -1
    hideIfUnavailable: true
    idRef {
      id: "8f6016893030312816002741:586372ee396630d40f007a7a"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51d0933832366460190020fd"
  }
  index: 8
  text: "Trauma kits are fully-automated stabilization units that include a defibrillator, spray-on synthetic skin, drug regiments, and medical nanomachines. They can save a runner\'s life, if you move fast enough."
  branches {
    responseText: "So if you are bleeding out, one of those can get you back on your feet?"
    nextNodeIndex: 9
    idRef {
      id: "8f6016893030312816002741:586372ee396630d40f007a61"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51d093383236646019002100"
  }
  index: 9
  text: "Exactly, but you have to be quick. This is Doc Wagon\'s own field tech, but even their stuff has its limits.\n\nIf you\'re lucky, you can slap a patch on yourself before you pass out. These things will auto-activate if they\'re attached to a monitor of a patient in distress."
  branches {
    responseText: ""
    nextNodeIndex: 7
    idRef {
      id: "8f6016893030312816002741:586372ee396630d40f007a64"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51d09338323664601900210c"
  }
  index: 10
  text: "{{GM}}Doctor Castle looks at the fetishes and library.{{/GM}}\n\nWhile modern medical technology makes surgery less disruptive than it used to be, no trepanning or lobotomies, it\'s still an ordeal for both the body and the spirit, requiring extensive recuperation to properly heal.\n\nI am an MD ThD, trained in the ways of the spirit world as well as the scientific. I use magic where technology ends, and I heal the whole patient."
  branches {
    responseText: ""
    nextNodeIndex: 7
    idRef {
      id: "8f6016893030312816002741:586372ee396630d40f007a6f"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51d093383236646019002112"
  }
  index: 11
  text: "{{GM}}Doctor Castle acknowledges the spirit manifested on her shoulder.{{/GM}}\n\nThis little guy, Lucius, sustains the healing rituals I perform on my patients after surgery, dramatically reducing their recovery time and the attention I have to pay them while they recover. Not standard procedure at most facilities, but the results speak for themselves."
  branches {
    responseText: ""
    nextNodeIndex: 7
    idRef {
      id: "8f6016893030312816002741:586372ee396630d40f007a74"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51d093383236646019002118"
  }
  index: 12
  text: "{{GM}}Doc Castle gives you a final once-over, noting your gear.{{/GM}}\n\nI\'m sure we\'ll see each other again. Let me know if you need medical gear before your next run."
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "8f612570303031281600274a"
  }
  index: 13
  text: "{{GM}}Doctor Castle looks up from her charts long enough to make sure you don\'t have any amputated limbs or sucking chest wounds.{{/GM}}\n\nYou don\342\200\231t look like you\'re bleeding, so I assume you want to see my current inventory of cyberware and medkits."
  branches {
    responseText: ""
    nextNodeIndex: 7
    idRef {
      id: "8f6016893030312816002741:586372ee396630d40f007a7f"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "countDoctorVisits"
          }
        }
      }
      args {
        int_value: 2
      }
    }
  }
}
nodes {
  idRef {
    id: "51d08ba13236646019001e72"
  }
  index: 14
  text: "Can I help you?"
  branches {
    responseText: ""
    nextNodeIndex: 7
    idRef {
      id: "8f6016893030312816002741:586372ee396630d40f007a85"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "countDoctorVisits"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  nextNodeIndex: 0
  idRef {
    id: "8f6016893030312816002741:586372ee396630d40f007a41"
  }
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "countDoctorVisits"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  nextNodeIndex: 13
  idRef {
    id: "8f6016893030312816002741:586372ee396630d40f007a7c"
  }
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "countDoctorVisits"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 2
      }
    }
  }
  nextNodeIndex: 14
  idRef {
    id: "8f6016893030312816002741:586372ee396630d40f007a82"
  }
}
