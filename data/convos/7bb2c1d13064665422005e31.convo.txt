idRef {
  id: "7bb2c1d13064665422005e31"
}
ui_name: "c06-s2_HellHoundDoor"
nodes {
  idRef {
    id: "7bb2f34e3064665422005e37"
  }
  index: 0
  text: "{{GM}}The room beyond the bars is a stinking jumble of burned flesh and dog flop. An enormous hellhound, its fur streaked with whip marks, growls low. The eyes of a second hellhound burn menacingly in the corner.{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 1
  }
  nodeType: ConversationNodeType_GM_Voice
}
nodes {
  idRef {
    id: "a38763363064663c20004e6a"
  }
  index: 1
  text: ""
  branches {
    responseText: "{{GM}}Shove the zebra meat through the bars.{{/GM}}"
    conditions {
      ops {
        functionName: "OR"
        args {
          call_value {
            functionName: "Get Story Variable (bool)"
            args {
              string_value: "Dead Man\'s Switch: The Mystery of Sam Watts"
            }
            args {
              string_value: "c05_ZebraMeat"
            }
          }
        }
        args {
          call_value {
            functionName: "Evaluate If Actor Has Item"
            args {
              call_value {
                functionName: "Specific Actor"
                args {
                  call_value {
                    functionName: "Get Map Item (Player)"
                    args {
                      int_value: 0
                    }
                  }
                }
                args {
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "HasOrHasNot"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Map Item (Item)"
                args {
                  string_value: "c05_ZebraMeat"
                }
              }
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Play Sound"
        args {
          call_value {
            functionName: "Get Map Item (Sound)"
            args {
              string_value: "ambient_barrens"
            }
            args {
              string_value: "CreatureD"
            }
          }
        }
        args {
          float_value: 1
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Story Variable (bool)"
            args {
              string_value: "seattle"
            }
            args {
              string_value: "c05_ZebraMeat"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Remove Item from Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "c05_ZebraMeat"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "Chile_Zebra"
            }
          }
        }
        args {
          int_value: 1
        }
      }
      ops {
        functionName: "Change Actor Team"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "Hellhound"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 0
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (string)"
            args {
              string_value: "FactionList"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
        }
      }
      ops {
        functionName: "Order Actor to Protect (Point)"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "Hellhound"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 0
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Current Location of Actor"
            args {
              call_value {
                functionName: "Get Map Item (Actor)"
                args {
                  string_value: "7ba5adc23064665422005e15"
                }
              }
            }
          }
        }
      }
    }
    nextNodeIndex: 2
    hideIfUnavailable: true
  }
  branches {
    responseText: "{{GM}}Open the door.{{/GM}}"
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "HellHoundDoor_Open"
            }
          }
        }
        args {
          int_value: 1
        }
      }
      ops {
        functionName: "Delete Prop"
        args {
          call_value {
            functionName: "Get Map Item (Prop)"
            args {
              string_value: "a93e1a71306466f02400578d"
            }
          }
        }
      }
      ops {
        functionName: "Play Sound"
        args {
          call_value {
            functionName: "Get Map Item (Sound)"
            args {
              string_value: "props"
            }
            args {
              string_value: "DoorSlide"
            }
          }
        }
        args {
          float_value: 1
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "DoIfHoundsFedCheck"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  branches {
    responseText: "{{GM}}Do nothing yet.{{/GM}}"
    actions {
      ops {
        functionName: "Clear Camera Points of Interest"
      }
    }
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_GM_Voice
}
nodes {
  idRef {
    id: "a387d74c3064663c20004e7f"
  }
  index: 2
  text: "The hellhounds devour the zebra meat in a few massive bites, and they let out a contented growl."
  branches {
    responseText: ""
    nextNodeIndex: 1
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_GM_Voice
  actions {
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "fedHounds"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "51ed7e6a6233317c110017c0"
  }
  index: 3
  text: "The room beyond the bars is a stinking jumble of burned flesh and dog flop. An enormous hellhound, its fur streaked with whip marks, growls low."
  branches {
    responseText: ""
    nextNodeIndex: 4
  }
  nodeType: ConversationNodeType_GM_Voice
}
nodes {
  idRef {
    id: "51ed7e9a6233317c110017d4"
  }
  index: 4
  text: ""
  branches {
    responseText: "{{GM}}Shove the zebra meat through the bars.{{/GM}}"
    conditions {
      ops {
        functionName: "OR"
        args {
          call_value {
            functionName: "Get Story Variable (bool)"
            args {
              string_value: "Dead Man\'s Switch: The Mystery of Sam Watts"
            }
            args {
              string_value: "c05_ZebraMeat"
            }
          }
        }
        args {
          call_value {
            functionName: "Evaluate If Actor Has Item"
            args {
              call_value {
                functionName: "Specific Actor"
                args {
                  call_value {
                    functionName: "Get Map Item (Player)"
                    args {
                      int_value: 0
                    }
                  }
                }
                args {
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "HasOrHasNot"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Map Item (Item)"
                args {
                  string_value: "c05_ZebraMeat"
                }
              }
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Play Sound"
        args {
          call_value {
            functionName: "Get Map Item (Sound)"
            args {
              string_value: "ambient_barrens"
            }
            args {
              string_value: "CreatureD"
            }
          }
        }
        args {
          float_value: 1
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Story Variable (bool)"
            args {
              string_value: "seattle"
            }
            args {
              string_value: "c05_ZebraMeat"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Remove Item from Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "c05_ZebraMeat"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "Chile_Zebra"
            }
          }
        }
        args {
          int_value: 1
        }
      }
      ops {
        functionName: "Change Actor Team"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "Hellhound"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 0
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (string)"
            args {
              string_value: "FactionList"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
        }
      }
      ops {
        functionName: "Order Actor to Protect (Point)"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "Hellhound"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 0
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Current Location of Actor"
            args {
              call_value {
                functionName: "Get Map Item (Actor)"
                args {
                  string_value: "7ba5adc23064665422005e15"
                }
              }
            }
          }
        }
      }
    }
    nextNodeIndex: 5
    hideIfUnavailable: true
  }
  branches {
    responseText: "{{GM}}Open the door.{{/GM}}"
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "HellHoundDoor_Open"
            }
          }
        }
        args {
          int_value: 1
        }
      }
      ops {
        functionName: "Delete Prop"
        args {
          call_value {
            functionName: "Get Map Item (Prop)"
            args {
              string_value: "a93e1a71306466f02400578d"
            }
          }
        }
      }
      ops {
        functionName: "Play Sound"
        args {
          call_value {
            functionName: "Get Map Item (Sound)"
            args {
              string_value: "props"
            }
            args {
              string_value: "DoorSlide"
            }
          }
        }
        args {
          float_value: 1
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "DoIfHoundsFedCheck"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  branches {
    responseText: "{{GM}}Do nothing yet.{{/GM}}"
    actions {
      ops {
        functionName: "Clear Camera Points of Interest"
      }
    }
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_GM_Voice
}
nodes {
  idRef {
    id: "51ed7e9a6233317c110017d7"
  }
  index: 5
  text: "The hellhound devours the zebra meat in a few massive bites, then lets out a contented growl."
  branches {
    responseText: ""
    nextNodeIndex: 4
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_GM_Voice
  actions {
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "fedHounds"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "51ed7b156233317c11001751"
  }
  index: 6
  text: "The room beyond the bars is a stinking jumble of burned flesh and dog flop."
  branches {
    responseText: "{{GM}}Open the door.{{/GM}}"
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "HellHoundDoor_Open"
            }
          }
        }
        args {
          int_value: 1
        }
      }
      ops {
        functionName: "Delete Prop"
        args {
          call_value {
            functionName: "Get Map Item (Prop)"
            args {
              string_value: "a93e1a71306466f02400578d"
            }
          }
        }
      }
      ops {
        functionName: "Play Sound"
        args {
          call_value {
            functionName: "Get Map Item (Sound)"
            args {
              string_value: "props"
            }
            args {
              string_value: "DoorSlide"
            }
          }
        }
        args {
          float_value: 1
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "DoIfHoundsFedCheck"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  branches {
    responseText: "{{GM}}Do nothing yet.{{/GM}}"
    actions {
      ops {
        functionName: "Clear Camera Points of Interest"
      }
    }
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_GM_Voice
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "countCagedHellhounds"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 2
      }
    }
  }
  nextNodeIndex: 0
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "countCagedHellhounds"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  nextNodeIndex: 3
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "countCagedHellhounds"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  nextNodeIndex: 6
}
