idRef {
  id: "26ed5b3a306466b40a0018d7"
}
ui_name: "c06-s1_ElevatorControls"
nodes {
  idRef {
    id: "26edac3f306466b40a0018dd"
  }
  index: 0
  text: "Looks like this elevator only goes to the Penthouse."
  branches {
    responseText: "{{GM}}Push the button for Penthouse.{{/GM}}"
    conditions {
      ops {
        functionName: "Evaluate Turn Mode"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "TurnBasedOrFreeMove"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 1
    hideIfUnavailable: true
  }
  branches {
    responseText: "{{GM}}Push the button for Penthouse.{{/GM}}"
    conditions {
      ops {
        functionName: "Evaluate Turn Mode"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "TurnBasedOrFreeMove"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 1
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "c5b07d8230646680210015a2"
            }
          }
        }
      }
    }
    nextNodeIndex: 2
    hideIfUnavailable: true
  }
  branches {
    responseText: "{{GM}}Push the button for Penthouse.{{/GM}}"
    conditions {
      ops {
        functionName: "Evaluate Turn Mode"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "TurnBasedOrFreeMove"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 1
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "c5b07d8230646680210015a2"
            }
          }
        }
      }
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 1
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "919a24003064661011000174"
            }
          }
        }
      }
    }
    nextNodeIndex: 3
    hideIfUnavailable: true
  }
  branches {
    responseText: "{{GM}}Push the button for Penthouse.{{/GM}}"
    conditions {
      ops {
        functionName: "Evaluate Turn Mode"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "TurnBasedOrFreeMove"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 1
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "c5b07d8230646680210015a2"
            }
          }
        }
      }
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 1
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "919a24003064661011000174"
            }
          }
        }
      }
    }
    nextNodeIndex: 4
    hideIfUnavailable: true
  }
  branches {
    responseText: "{{GM}}Not yet...{{/GM}}"
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_GM_Voice
  autoFollowBranchDelay: ConversationAutoFollowType_None
}
nodes {
  idRef {
    id: "91dc7ae73064661011000446"
  }
  index: 1
  text: "$(l.name), if we go up there, I\'m not leaving until we find Coyote."
  branches {
    responseText: "{{GM}}Push the button and go up.{{/GM}}"
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "seattle"
            }
            args {
              string_value: "c06_BTLChip"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 2
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "seattle"
            }
            args {
              string_value: "c06_StairsElevator"
            }
          }
        }
        args {
          int_value: 1
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "seattle"
            }
            args {
              string_value: "c06_BTLChip"
            }
          }
        }
        args {
          int_value: 3
        }
      }
      ops {
        functionName: "Open Scene"
        args {
          call_value {
            functionName: "Get Map Item (Scene)"
            args {
              string_value: "c06-s2_AptsTopFloor"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    hideIfUnavailable: true
  }
  branches {
    responseText: "{{GM}}Push the button and go up.{{/GM}}"
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "seattle"
            }
            args {
              string_value: "c06_BTLChip"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          int_value: 2
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "seattle"
            }
            args {
              string_value: "c06_StairsElevator"
            }
          }
        }
        args {
          int_value: 1
        }
      }
      ops {
        functionName: "Open Scene"
        args {
          call_value {
            functionName: "Get Map Item (Scene)"
            args {
              string_value: "c06-s2_AptsTopFloor"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    hideIfUnavailable: true
  }
  branches {
    responseText: "You\'re right, we\'ll go up in a minute."
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "a361cd5a3064663c20004ca8"
  }
}
nodes {
  idRef {
    id: "8604b451306466d003004b45"
  }
  index: 2
  text: "$(l.name), if we go up there, I\'m not leaving until we find Coyote."
  branches {
    responseText: "{{GM}}Push the button and go up.{{/GM}}"
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "seattle"
            }
            args {
              string_value: "c06_BTLChip"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          int_value: 2
        }
      }
    }
    actions {
      ops {
        functionName: "Open Scene"
        args {
          call_value {
            functionName: "Get Map Item (Scene)"
            args {
              string_value: "c06-s2_AptsTopFloor"
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "seattle"
            }
            args {
              string_value: "c06_StairsElevator"
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    nextNodeIndex: -1
    hideIfUnavailable: true
  }
  branches {
    responseText: "{{GM}}Push the button and go up.{{/GM}}"
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "seattle"
            }
            args {
              string_value: "c06_BTLChip"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 2
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "seattle"
            }
            args {
              string_value: "c06_StairsElevator"
            }
          }
        }
        args {
          int_value: 1
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "seattle"
            }
            args {
              string_value: "c06_BTLChip"
            }
          }
        }
        args {
          int_value: 3
        }
      }
      ops {
        functionName: "Open Scene"
        args {
          call_value {
            functionName: "Get Map Item (Scene)"
            args {
              string_value: "c06-s2_AptsTopFloor"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    hideIfUnavailable: true
  }
  branches {
    responseText: "You\'re right, we\'ll go up in a minute."
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "a361cd5a3064663c20004ca8"
  }
}
nodes {
  idRef {
    id: "91d60cf530646610110003f4"
  }
  index: 3
  text: "Hey, $(l.name), you\'re not leaving me down here!"
  branches {
    responseText: "Well hurry up."
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "a361cd5a3064663c20004ca8"
  }
}
nodes {
  idRef {
    id: "91d8253030646610110003fd"
  }
  index: 4
  text: "{{GM}}Echoing from down the hallway{{/GM}}\n\nHey, $(l.name), you\'re not leaving me down here!"
  branches {
    responseText: "Well hurry up."
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "a361cd5a3064663c20004ca8"
  }
}
roots {
  responseText: ""
  nextNodeIndex: 0
}
