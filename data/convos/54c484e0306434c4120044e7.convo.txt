idRef {
  id: "54c484e0306434c4120044e7"
}
ui_name: "c04-s1_JinParks"
nodes {
  idRef {
    id: "54c4c580306434c4120044ed"
  }
  index: 0
  text: ""
  branches {
    responseText: ""
    nextNodeIndex: 1
    hideIfUnavailable: true
    idRef {
      id: "54c484e0306434c4120044e7:580c60d1396630440c001e90"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "54c4fec0306434c4120044f0"
  }
  index: 1
  text: "Need some hardware?"
  branches {
    responseText: ""
    nextNodeIndex: 2
    idRef {
      id: "54c484e0306434c4120044e7:596414e2343831b01b008353"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "596414e2343831b01b008356"
  }
  index: 2
  text: ""
  branches {
    responseText: "Did you sell a Browning Max Power to Coyote, the bartender?"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "BrowningReceiptSeen"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 3
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "51dc3b53623331241200448f"
    }
  }
  branches {
    responseText: "Have you heard of a woman named Glint?"
    nextNodeIndex: 7
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "54c484e0306434c4120044e7:580c6298396630440c001f06"
    }
  }
  branches {
    responseText: "Yeah, what do you have?"
    actions {
      ops {
        functionName: "Open Store Screen From Actor"
        args {
          call_value {
            functionName: "Get Map Item (Actor)"
            args {
              string_value: "54b5753f306434c4120044e3"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    idRef {
      id: "54c484e0306434c4120044e7:580c60d1396630440c001ea7"
    }
  }
  branches {
    responseText: "No thanks, not interested."
    nextNodeIndex: -1
    idRef {
      id: "54c484e0306434c4120044e7:580c60d1396630440c001ea9"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "GunDealer"
}
nodes {
  idRef {
    id: "54c5b6a5306434c4120044f3"
  }
  index: 3
  text: "{{GM}}Jin glances over your shoulder at the room behind you, blowing and popping a bubble.{{/GM}}\n\nHey $(l.guy), I\'m discreet. I don\342\200\231t talk about what my clients or what they buy. Bad for biz. \n\nHowever, I\'m sure she would recommend me - IF she was a customer. Which I\'m not saying she is."
  branches {
    responseText: "She can\342\200\231t recommend you if she\'s dead. Did she say anything about why she wanted it?"
    nextNodeIndex: 4
    idRef {
      id: "54c484e0306434c4120044e7:580c60d1396630440c001e95"
    }
  }
  branches {
    responseText: "Cut the drek. "
    nextNodeIndex: 5
    idRef {
      id: "54c484e0306434c4120044e7:580c60d1396630440c001e9b"
    }
  }
  branches {
    responseText: "Of course. I\'d expect no less. Listen, Coyote\'s missing and Mrs. Kubota asked me to find her. I need to know whatever you know."
    nextNodeIndex: 6
    idRef {
      id: "54c484e0306434c4120044e7:580c60d1396630440c001ea1"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "AskJinAboutBrowning"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "54c5fca1306434c4120044f6"
  }
  index: 4
  text: "All she said was that she was looking for stopping power. Ease back on the drama!"
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "54c484e0306434c4120044e7:580c60d1396630440c001e98"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "54c65704306434c4120044f9"
  }
  index: 5
  text: "Fine. She said she needed to stop a wild dog flat in its tracks."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "54c484e0306434c4120044e7:580c60d1396630440c001e9e"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "54c6a127306434c4120044fc"
  }
  index: 6
  text: "{{GM}}Jin stops, and at the mention of Mrs. Kubota\'s name, her entire demeanor changes.{{/GM}}\n\nWhatever Mrs. Kubota wants - I didn\342\200\231t realize Coyote was missing. Coyote said she expected to encounter some kind of paranormal at close range. I recommended the Ares Predator with some APDS rounds, but she couldn\342\200\231t afford it. I sold her a Browning Max Power."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "54c484e0306434c4120044e7:580c60d1396630440c001ea4"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "580c62b6396630440c001f2d"
  }
  index: 7
  text: "{{GM}}Jin raises an eyesbrow, smacking her gum a few times as she tries to read your angle.{{/GM}}\n\nGlint\'s a little poor for my taste, she never invested in her future like she should have. A good sawed-off shotgun is better than a quick wit, if you ask me."
  branches {
    responseText: ""
    nextNodeIndex: 2
    idRef {
      id: "54c484e0306434c4120044e7:580c62fa396630440c001f2f"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "54cc07f9306434c41200452b"
  }
  index: 8
  text: "{{GM}}The Asian woman\'s expression reads \"Open for Business\" but her demeanor reads, \"Dealer\" rather than \"Companion\". She has a jack on her neck, a gun on her hip, and a chip on her shoulder. She eyes you with a sneer.{{/GM}}\n\nYou look like you could use some firepower. Something... simple. I got guns so smart they practically fire themselves. You looking for tech? Got some of that too, if that\342\200\231s the way you roll."
  branches {
    responseText: ""
    nextNodeIndex: 9
    idRef {
      id: "54c484e0306434c4120044e7:580c60d1396630440c001eae"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51995aab62366508090007d0"
  }
  index: 9
  text: ""
  branches {
    responseText: "Show me what you got."
    actions {
      ops {
        functionName: "Open Store Screen From Actor"
        args {
          call_value {
            functionName: "Get Map Item (Actor)"
            args {
              string_value: "54b5753f306434c4120044e3"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
    idRef {
      id: "54c484e0306434c4120044e7:580c60d1396630440c001eb1"
    }
  }
  branches {
    responseText: "No thanks, not interested."
    nextNodeIndex: -1
    idRef {
      id: "54c484e0306434c4120044e7:580c60d1396630440c001eb3"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "EarlyInteraction"
}
nodes {
  idRef {
    id: "54cceded306434c412004531"
  }
  index: 10
  text: "{{GM}}The Asian woman\'s expression reads \"Open for Business\" but her demeanor reads, \"Dealer\" rather than \"Companion\". She has a jack on her neck, a gun on her hip, and a chip on her shoulder. She eyes you with a sneer.{{/GM}}\n\nYou look like you know your way around. Need something? Weapons? Drone tech?\n"
  branches {
    responseText: ""
    nextNodeIndex: 9
    idRef {
      id: "54c484e0306434c4120044e7:580c60d1396630440c001eb8"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "BeenUpstairs"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  nextNodeIndex: 0
  hideIfUnavailable: true
  idRef {
    id: "54c484e0306434c4120044e7:580c60d1396630440c001e8d"
  }
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Compare Actor Skill"
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "BaseOrCurrent"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "ActorSkills"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        int_value: 2
      }
    }
  }
  nextNodeIndex: 8
  idRef {
    id: "54c484e0306434c4120044e7:580c60d1396630440c001eab"
  }
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Compare Actor Skill"
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "BaseOrCurrent"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "ActorSkills"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        int_value: 2
      }
    }
  }
  nextNodeIndex: 10
  idRef {
    id: "54c484e0306434c4120044e7:580c60d1396630440c001eb5"
  }
}
