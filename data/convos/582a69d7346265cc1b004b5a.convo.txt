idRef {
  id: "582a69d7346265cc1b004b5a"
}
ui_name: "c16-s1_DockLegwork_Decker"
nodes {
  idRef {
    id: "582a6a38346265cc1b004b64"
  }
  index: 0
  text: "{{GM}}There\'s a simple log in prompt on this fueling station. The protocols look hopelessly out of date, and a good decker could easily break into the system to see who\'s paying for the fuel.{{/GM}}"
  branches {
    responseText: "{{CC}}Decker{{/CC}} {{GM}}Hack the terminal.{{/GM}}"
    conditions {
      ops {
        functionName: "Evaluate If Actor Is Decker"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Triggering Actor"
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 1
    idRef {
      id: "582a69d7346265cc1b004b5a:582a6b08346265cc1b004b66"
    }
  }
  branches {
    responseText: "{{GM}}Walk away.{{/GM}}"
    nextNodeIndex: -1
    idRef {
      id: "582a69d7346265cc1b004b5a:582a6b18346265cc1b004b68"
    }
  }
  nodeType: ConversationNodeType_Simple
  speaker_override_id: "55897a5a613464581a001ad7"
}
nodes {
  idRef {
    id: "582a6b37346265cc1b004b6b"
  }
  index: 1
  text: "{{GM}}You don\'t expect to learn much from the terminal, but someone was sloppy enough to use a corp credit card to pay for the party barge\'s fuel. A credit card belonging to Gaeatronics.{{/GM}}"
  branches {
    responseText: "Why is Gaeatronics paying for FirstNation beer?"
    nextNodeIndex: 2
    idRef {
      id: "582a69d7346265cc1b004b5a:582a6c3d346265cc1b004b6d"
    }
  }
  branches {
    responseText: "Gaeatronics. Should I know that name?"
    nextNodeIndex: 2
    idRef {
      id: "582a69d7346265cc1b004b5a:582a6cc9346265cc1b004b72"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  speaker_override_id: "55897a5a613464581a001ad7"
  actions {
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "HongKong:decker"
          }
          args {
            string_value: "Matrix_NodeHackSuccess"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bLegwork_KnowCorp"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "582a6c8d346265cc1b004b70"
  }
  index: 2
  text: " Gaeatronics... They\'re the biggest Salish owned corp around. Deal in \"earth-friendly\" power generation and waste management. That Gaeatronics?\n\nMaybe someone in the gang is related to an executive or something. It\'s hard to imagine them funding the FirstNation knowingly."
  branches {
    responseText: "Could be."
    nextNodeIndex: -1
    idRef {
      id: "582a69d7346265cc1b004b5a:582a6d3d346265cc1b004b74"
    }
  }
  branches {
    responseText: "{{GM}}Walk away.{{/GM}}"
    nextNodeIndex: -1
    idRef {
      id: "582a69d7346265cc1b004b5a:582a6d3e346265cc1b004b76"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceWithTagInScene: "isRiver"
}
nodes {
  idRef {
    id: "582a6dcf346265cc1b004b80"
  }
  index: 3
  text: "{{GM}}There\'s a simple log in prompt on this fueling station. The protocols look hopelessly out of date, and a good decker could easily break into the system to see who\'s paying for the fuel.{{/GM}}"
  branches {
    responseText: "{{CC}}Violet{{/CC}} {{GM}}Have Violet hack the terminal.{{/GM}}"
    conditions {
      ops {
        functionName: "Evaluate Tag for Actor"
        args {
          call_value {
            functionName: "All Actors on Team"
            args {
              call_value {
                functionName: "Get Preset Value (string)"
                args {
                  string_value: "FactionList"
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 1
                }
              }
            }
            args {
              call_value {
                functionName: "Get Map Item (SceneDimension)"
                args {
                  string_value: "Default"
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Tag From String"
            args {
              string_value: "isViolet"
            }
          }
        }
      }
    }
    nextNodeIndex: 1
    hideIfUnavailable: true
    idRef {
      id: "582a69d7346265cc1b004b5a:582a6de0346265cc1b004b82"
    }
    auxiliaryLink: true
  }
  branches {
    responseText: "{{CC}}Team Decker{{/CC}} {{GM}}Have your decker hack the terminal.{{/GM}}"
    conditions {
      ops {
        functionName: "Evaluate Tag for Actor"
        args {
          call_value {
            functionName: "All Actors on Team"
            args {
              call_value {
                functionName: "Get Preset Value (string)"
                args {
                  string_value: "FactionList"
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Map Item (SceneDimension)"
                args {
                  string_value: "Default"
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Tag From String"
            args {
              string_value: "isViolet"
            }
          }
        }
      }
    }
    nextNodeIndex: 1
    hideIfUnavailable: true
    idRef {
      id: "582a69d7346265cc1b004b5a:582a6e4f346265cc1b004b95"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  speaker_override_id: "55897a5a613464581a001ad7"
}
roots {
  conditions {
    ops {
      functionName: "Evaluate If Actor Is Decker"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  nextNodeIndex: 0
  idRef {
    id: "582a69d7346265cc1b004b5a:582a69d7346265cc1b004b5e"
  }
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Evaluate If Actor Is Decker"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  nextNodeIndex: 3
  idRef {
    id: "582a69d7346265cc1b004b5a:582a6a11346265cc1b004b61"
  }
}
