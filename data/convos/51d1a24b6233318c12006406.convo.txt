idRef {
  id: "51d1a24b6233318c12006406"
}
ui_name: "c08-s3_Seamstress_VanGraasFence"
nodes {
  idRef {
    id: "51d1a2766233318c1200640c"
  }
  index: 0
  text: "{{GM}}Van Graas doesn\'t look up from his digital display as you approach.{{/GM}}\n\nI\'m very busy. Show me something worth my time, or you walk away."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "51d1a24b6233318c12006406:58a933fc396630b41800514c"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "hasSeenFenceOffer"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "51d458ed623331241b0007bd"
  }
  index: 1
  text: ""
  branches {
    responseText: "Data from the NTSB. Renraku would pay to keep it quiet, and Ares would pay to know what it is."
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "c08-s2_CorpData"
            }
          }
        }
      }
    }
    nextNodeIndex: 2
    hideIfUnavailable: true
    idRef {
      id: "51d1a24b6233318c12006406:58a933fc396630b41800514f"
    }
  }
  branches {
    responseText: "Got a juicy list of BTL clients. Straight from a Yakuza syndicate lab."
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "c09-s1_Notebook"
            }
          }
        }
      }
    }
    nextNodeIndex: 7
    hideIfUnavailable: true
    idRef {
      id: "51d1a24b6233318c12006406:58a933fc396630b41800515e"
    }
  }
  branches {
    responseText: "I got a chip that Bobby outside is desperate to get his hands on."
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Sam\'s BTL chip"
            }
          }
        }
      }
    }
    nextNodeIndex: 12
    hideIfUnavailable: true
    idRef {
      id: "51d1a24b6233318c12006406:58a9347c396630b418005176"
    }
  }
  branches {
    responseText: "I got this... antique lighter? Maybe gold?"
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "c02-s1_JakesLighter"
            }
          }
        }
      }
    }
    nextNodeIndex: 21
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "51d1a24b6233318c12006406:58a9347e396630b418005178"
    }
  }
  branches {
    responseText: "It\'s nothing. Sorry to bother you."
    nextNodeIndex: -1
    idRef {
      id: "51d1a24b6233318c12006406:58a933fc396630b41800516d"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "Fence Loop"
}
nodes {
  idRef {
    id: "51d458ed623331241b0007c0"
  }
  index: 2
  text: "{{GM}}Van Grass shrugs.{{/GM}}\n\nI\'ve got 800 nuyen for something like that. "
  branches {
    responseText: ""
    nextNodeIndex: 3
    idRef {
      id: "51d1a24b6233318c12006406:58a933fc396630b418005152"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51d458ed623331241b0007c3"
  }
  index: 3
  text: ""
  branches {
    responseText: "Deal."
    nextNodeIndex: 4
    idRef {
      id: "51d1a24b6233318c12006406:58a933fc396630b418005155"
    }
  }
  branches {
    responseText: "{{CC}}Etiquette: Shadowrunner{{/CC}} I know you\'ll double dip on this one. Make it 1,000."
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 17
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    nextNodeIndex: 5
    idRef {
      id: "51d1a24b6233318c12006406:58a933fc396630b418005158"
    }
  }
  branches {
    responseText: "I\'ll think about it."
    nextNodeIndex: 6
    idRef {
      id: "51d1a24b6233318c12006406:58a933fc396630b41800515b"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "NTSB Loop"
}
nodes {
  idRef {
    id: "51d458ed623331241b0007c6"
  }
  index: 4
  text: "It\'s done."
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Add Nuyen"
      args {
        int_value: 800
      }
    }
    ops {
      functionName: "Remove Item from Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "c08-s2_CorpData"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "51d458ed623331241b0007c9"
  }
  index: 5
  text: "As long as you keep bringing in stuff like this, sure."
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Add Nuyen"
      args {
        int_value: 1000
      }
    }
    ops {
      functionName: "Remove Item from Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "c08-s2_CorpData"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "51d458ed623331241b0007cc"
  }
  index: 6
  text: "Don\'t think too long. Info like that has an expiration date, and there\'s no prize for runner-up."
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51d458ed623331241b0007cf"
  }
  index: 7
  text: "That\'s dangerous info. I\'d rather not handle it, so how about 600?"
  branches {
    responseText: ""
    nextNodeIndex: 8
    idRef {
      id: "51d1a24b6233318c12006406:58a933fc396630b418005161"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51d458ed623331241b0007d2"
  }
  index: 8
  text: ""
  branches {
    responseText: "Deal."
    nextNodeIndex: 9
    idRef {
      id: "51d1a24b6233318c12006406:58a933fc396630b418005164"
    }
  }
  branches {
    responseText: "{{CC}}Etiquette: Gang{{/CC}} Any rival BTL lab would pay top dollar, if you don\'t mind getting dirty. Make it 800."
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 15
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    nextNodeIndex: 10
    idRef {
      id: "51d1a24b6233318c12006406:58a933fc396630b418005167"
    }
  }
  branches {
    responseText: "I\'ll think about it."
    nextNodeIndex: 11
    idRef {
      id: "51d1a24b6233318c12006406:58a933fc396630b41800516a"
    }
  }
  nodeType: ConversationNodeType_Simple
  comment: "BTL Loop"
}
nodes {
  idRef {
    id: "51d45c05623331241b0007f1"
  }
  index: 9
  text: "It\'s done."
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Add Nuyen"
      args {
        int_value: 600
      }
    }
    ops {
      functionName: "Remove Item from Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "c09-s1_Notebook"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "51d45c34623331241b0007f3"
  }
  index: 10
  text: "I do mind. I\'ll get someone to do it for me. Deal."
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Remove Item from Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "c09-s1_Notebook"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Add Nuyen"
      args {
        int_value: 800
      }
    }
  }
}
nodes {
  idRef {
    id: "51d45c9a623331241b0007f5"
  }
  index: 11
  text: "Suit yourself. I\'d rather not deal with it anyway."
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "58a935ac396630b418005217"
  }
  index: 12
  text: "{{GM}}Van Graas gives you a considering look.{{/GM}}\n\nI\'m listening. Why should I be interested?"
  branches {
    responseText: "It\'s more than just a simchip"
    nextNodeIndex: 13
    idRef {
      id: "51d1a24b6233318c12006406:58a93685396630b418005227"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51d1a24b6233318c12006406:58a9363d396630b418005219"
  }
  index: 13
  text: "{{GM}}Van Graas waits for you to elaborate, and then shrugs.{{/GM}}\n\nI\'m curious what would have ended up in the dealer\'s hands that he would want to have back. I\'ll buy it for 400."
  branches {
    responseText: ""
    nextNodeIndex: 14
    idRef {
      id: "51d1a24b6233318c12006406:58a9369d396630b418005236"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "58a9369d396630b418005239"
  }
  index: 14
  text: ""
  branches {
    responseText: "Deal."
    nextNodeIndex: 15
    idRef {
      id: "51d1a24b6233318c12006406:58a9363d396630b41800521b"
    }
  }
  branches {
    responseText: "{{CC}}Etiquette: Gang{{/CC}} He peddles Yakuza product, so maybe the Mafia families would want this chip?"
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 15
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    nextNodeIndex: 16
    idRef {
      id: "51d1a24b6233318c12006406:58a9363d396630b41800521f"
    }
  }
  branches {
    responseText: "I\'ll think about it."
    nextNodeIndex: 20
    idRef {
      id: "51d1a24b6233318c12006406:58a9363d396630b418005223"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51d1a24b6233318c12006406:58a9363d396630b41800521d"
  }
  index: 15
  text: "It\'s done."
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Add Nuyen"
      args {
        int_value: 400
      }
    }
    ops {
      functionName: "Remove Item from Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "Sam\'s BTL chip"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "51d1a24b6233318c12006406:58a9363d396630b418005221"
  }
  index: 16
  text: "They will- A thousand seems fair?"
  branches {
    responseText: ""
    nextNodeIndex: 17
    idRef {
      id: "51d1a24b6233318c12006406:58a93727396630b418005241"
    }
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Remove Item from Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "c09-s1_Notebook"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Add Nuyen"
      args {
        int_value: 800
      }
    }
  }
}
nodes {
  idRef {
    id: "51d1a24b6233318c12006406:58a93729396630b418005243"
  }
  index: 17
  text: ""
  branches {
    responseText: "Deal."
    nextNodeIndex: 18
    idRef {
      id: "51d1a24b6233318c12006406:58a93729396630b418005245"
    }
  }
  branches {
    responseText: "I\'ll think about it."
    nextNodeIndex: 19
    idRef {
      id: "51d1a24b6233318c12006406:58a93729396630b41800524d"
    }
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51d1a24b6233318c12006406:58a93729396630b418005247"
  }
  index: 18
  text: "It\'s done."
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Add Nuyen"
      args {
        int_value: 1000
      }
    }
    ops {
      functionName: "Remove Item from Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "Sam\'s BTL chip"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "51d1a24b6233318c12006406:58a93729396630b41800524f"
  }
  index: 19
  text: "Don\'t let Kubota see you with that thing, she doesn\'t allow chipheads in her place."
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51d1a24b6233318c12006406:58a9377e396630b418005251"
  }
  index: 20
  text: "Don\'t let Kubota see you with that thing, she doesn\'t allow chipheads in her place."
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "58a9357e396630b4180051dd"
  }
  index: 21
  text: "{{GM}}Van Graas glances at the lighter, and then stares at you.{{/GM}}\n\nArmitage wouldn\'t like you trying to pawn his lighter. It\'s worthless, anyway."
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "51d1a24b6233318c12006406:58a935a3396630b4180051df"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "51d1a2c06233318c12006410"
  }
  index: 22
  text: "{{GM}}Van Grass looks at you skeptically.{{/GM}}\n\nDid you change your mind? Or did you find something in the last five minutes that\'s worth my time?"
  branches {
    responseText: ""
    nextNodeIndex: 1
    idRef {
      id: "51d1a24b6233318c12006406:58a933fc396630b418005172"
    }
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "hasSeenFenceOffer"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  nextNodeIndex: 0
  idRef {
    id: "51d1a24b6233318c12006406:58a933fc396630b418005149"
  }
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "hasSeenFenceOffer"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  nextNodeIndex: 22
  idRef {
    id: "51d1a24b6233318c12006406:58a933fc396630b41800516f"
  }
}
