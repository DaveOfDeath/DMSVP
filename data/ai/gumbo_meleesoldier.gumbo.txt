// Solider AI, actors with guns and standard consumables.

{str,VERSION,0.1c}
{number,MAX_ATTACKS,1}
{number,DEFAULT_LOOPS,1}
{number,SLAVE_SPIRIT_AP,3}
{number,CAN_COMBAT_SHOVE,0}
{number,CAN_SAY,0}
{actor,FLANKED_ATTACKER} //user var holds the flanked attacker from hurt self event
{method,OVERRIDE} //our override user method
{number,PREFER_ARMOR_REDUCED,15}
{number,IS_RANGED,1}

[DECIDE_MINOR]
? EVALUATE HAS_MOVETO
	RETURN true
? EVALUATE HAS_PATROL
	RETURN true
RETURN false
 
 
[DECIDE_MAJOR]
? IS SELF ~(in_combat) 
	RETURN FALSE
? EVALUATE HAS_MOVETO
	RETURN true
? EVALUATE HAS_PATROL
	RETURN true
? IS ENEMY $(alive)
	RETURN true
RETURN false
 
[MAJOR_START]
RUN MAJOR_ACTIVE
? IS AP>0
    LOOP
RETURN
 
[MAJOR_ACTIVE]
? RUN DO_MOVETO
:? RUN DO_PATROL
:? RUN NORMAL
:? RUN SEARCHER
RETURN
 
[MINOR_START]
? RUN DO_MOVETO
:? RUN DO_PATROL
? IS AP>0
    LOOP
RETURN
 
[SLEEP_START]
RETURN
 
[MAJOR_INTERRUPT_ON]
RETURN
 
[MAJOR_INTERRUPT_OFF]
RETURN
 
[MAJOR_END]
RETURN
 
[HURT_SELF]
REPORT ENEMY
//Have I been hit by someone who has flanked me?
? IS LATEST_ATTACKER $(self_flanked)
	SET FLANKED_ATTACKER LATEST_ATTACKER
	SET OVERRIDE TAKE_COVER_FROM_FLANKED_ATTACKER
RETURN
 
[HURT_FRIENDLY]
RETURN
 
[CAN_ENGAGE]
SET IS_RANGED 1
// Select something that is not AoE first
? SELECT INVENTORY $(attack, ranged) && ~(aoe)
	? IS ENEMY $(in_range, in_sight)
		SET IS_RANGED 1
		RETURN TRUE
? SELECT INVENTORY $(attack, ranged)
	? IS ENEMY $(in_range, in_sight)
		SET IS_RANGED 1
		RETURN TRUE
? SELECT INVENTORY $(attack, melee)
	? IS ENEMY $(alive, in_sight) && (dist <= 6)
		SET IS_RANGED 0
		RETURN TRUE
RETURN FALSE

[NORMAL]
@gate=CAN_ENGAGE
@loops=1
REPORT ENEMY
RUN CHECK_AMMO 
RUN CHECK_OVERRIDE
? IS SELF $(can_attack)
	RUN CHECK_NEAR_MELEE
? IS AP = 2 && IS_RANGED == 1
	RUN CHECK_NEAR_FLANKED
RUN CHECK_HEAL
RUN CHECK_FOR_AOE
RUN SCAN_FOR_EXPOSED
? IS IS_RANGED == 1
	RUN NORMAL_RANGED
:
	RUN NORMAL_MELEE
LOOP

[NORMAL_MELEE]
SELECT ENEMY $(alive, in_sight)
RUN DO_ATTACK
LOOP

[NORMAL_RANGED]
? IS SELF AP >= 2
	DEBUG "2 AP CHOICE" ITEM_SELECTION
	? SELECT ENEMY $(alive, in_range, in_sight)
		? IS random >= 50
			? IS ACTOR_SELECTION $(self_cover)
				RUN DO_ATTACK
				RETURN
			ELSE
				DEBUG "2 AP COVER SELCTION"
				? MOVEONLY ACTOR_SELECTION self_cover, sweet_range, two_ap
					DEBUG "Look for 2 AP COVER STRICT"
					? IS ACTOR_SELECTION ~(self_cover)
						MOVEONLY ACTOR_SELECTION self_cover, sweet_range, one_ap
					ELSE
						RUN DO_ATTACK
				:? MOVEONLY ACTOR_SELECTION self_cover, two_ap
					DEBUG "Look for 2 AP COVER LOOSE"
					? IS ACTOR_SELECTION ~(self_cover)
						MOVEONLY ACTOR_SELECTION self_cover, one_ap
					ELSE
						RUN DO_ATTACK
				? IS ACTOR_SELECTION $(self_cover)
					RUN DO_ATTACK
				? MOVE ACTOR_SELECTION self_cover
					DEBUG "MOVING TO ANY COVER"
					? IS ACTOR_SELECTION ~(self_cover)
						MOVE ACTOR_SELECTION self_cover
					ELSE
						RUN DO_ATTACK
				RETURN
		ELSE
			? IS SELF 100*hp/maxhp>55
				DEBUG "Chose to flank"
				DEBUG ACTOR_SELECTION 
				? IS ENEMY $(alive, in_range, in_sight, flanked)
					SELECT ENEMY $(alive, in_range, in_sight, flanked)
					RUN DO_ATTACK
				:? MOVEONLY ACTOR_SELECTION flanked
					RUN DO_ATTACK
				:
					RUN DO_ATTACK
			RUN DO_ATTACK
			RETURN
		ELSE
			MOVE ACTOR_SELECTION self_cover, flanked, sweet_range
				? IS ACTOR_SELECTION $(self_cover,flanked)
					RUN DO_ATTACK
				ELSE
					RUN DO_ATTACK
			RETURN
			ELSE
				MOVE ACTOR_SELECTION self_cover, flanked, sweet_range
					? IS ACTOR_SELECTION $(self_cover,flanked)
						RUN DO_ATTACK
					ELSE
						RUN DO_ATTACK
				RETURN
			DO $(attack,ranged) && ~(aoe)
			RETURN
	ELSE
		RUN SEARCHER
	
ELSEIF IS AP = 1
	DEBUG "1 AP CHOICE" ITEM_SELECTION
	? SELECT ENEMY $(alive, in_range, in_sight) 
		? IS SELF $(can_attack)
			RUN DO_ATTACK
		ELSE
			DEBUG ACTOR_SELECTION
			? IS ACTOR_SELECTION $(self_flanked)
				DEBUG "FLANKED BETTER MOVE"
				MOVEONLY ACTOR_SELECTION self_cover, sweet_range, one_ap
			ELSE
				RETURN
LOOP

[CHECK_NEAR_FLANKED]
? SELECT ENEMY $(alive, in_range, in_sight, self_flanked) && (dist <= 6)
	DEBUG ACTOR_SELECTION
	? MOVEONLY ACTOR_SELECTION self_cover, sweet_range, one_ap
		RUN DO_ATTACK
	:? MOVEONLY ACTOR_SELECTION self_cover, one_ap
		RUN DO_ATTACK
	:? MOVEONLY ACTOR_SELECTION self_cover, sweet_range, two_ap	
	:? MOVEONLY ACTOR_SELECTION self_cover, two_ap
	RUN DO_ATTACK
RETURN

[TAKE_COVER]
CLEAR OVERRIDE
DEBUG ACTOR_SELECTION
SELECT ENEMY $(alive, in_sight)
? MOVEONLY ACTOR_SELECTION self_cover, sweet_range
:? MOVE ACTOR_SELECTION self_cover, sweet_range
	RUN DO_ATTACK
RETURN


[CHECK_FOR_AOE]
? SELECT ENEMY $(alive, in_range, in_sight, is_grouped)
	? DO $(attack, aoe)
		SET OVERRIDE TAKE_COVER
RETURN
 
[CHECK_OVERRIDE]
? HAS OVERRIDE
	RUN OVERRIDE
RETURN

[SCAN_FOR_EXPOSED]
? IS random > 50
	? SELECT ENEMY $(alive, in_range, in_sight, flanked)
		RUN DO_ATTACK
RETURN

[CHECK_AMMO]
? IS SELF maxammo == 0
	RETURN
? IS SELF ammo <= maxammo*18/100 AND $(in_cover)
	RELOAD
	RUN DO_ATTACK
	RETURN
:? IS SELF ammo = 0 AND $(in_cover)
	RELOAD
	RUN DO_ATTACK
	RETURN
:? IS SELF ammo <= maxammo*18/100 AND ~(in_cover) AND AP >= 2
	? MOVEONLY in_cover, sweet_range, one_ap
		RELOAD
		RUN DO_ATTACK
	:? MOVEONLY in_cover, one_ap
		RELOAD
		RUN DO_ATTACK
	:? MOVEONLY in_cover, sweet_range, two_ap
	:? MOVEONLY in_cover, two_ap
:? IS SELF ammo = 0 AND ~(in_cover) AND AP >= 2
	? MOVEONLY in_cover, sweet_range, one_ap
		RELOAD
		RUN DO_ATTACK
	:? MOVEONLY in_cover, one_ap
		RELOAD
		RUN DO_ATTACK
	:? MOVEONLY in_cover, sweet_range, two_ap	
	:? MOVEONLY in_cover, two_ap
:? IS SELF ammo <= maxammo*18/100 AND ~(in_cover) 
	RELOAD
:? IS SELF ammo = 0 AND ~(in_cover) AND AP = 1
	RELOAD
RETURN

[CHECK_HEAL]
? SELECT INVENTORY $(heal)
	? IS SELF hp < maxhp*4/10 AND $(in_cover)
		SELECT SELF
			DO $(heal)
			RETURN
	:? IS SELF hp < maxhp*4/10 
			SELECT ENEMY $(alive, in_range, in_sight)
			MOVE in_cover, sweet_range
			RETURN

			
[TAKE_COVER_FROM_FLANKED_ATTACKER]
CLEAR OVERRIDE
? IS IS_RANGED == 0
	RETURN
DEBUG "Cover from flanked. Item " ITEM_SELECTION
? MOVEONLY FLANKED_ATTACKER self_cover, sweet_range, one_ap
	RUN DO_ATTACK
	END MAJOR
:? MOVEONLY FLANKED_ATTACKER self_cover, one_ap
	RUN DO_ATTACK
	END MAJOR
:? MOVEONLY FLANKED_ATTACKER self_cover, sweet_range, two_ap
	RUN DO_ATTACK
	END MAJOR
:? MOVEONLY FLANKED_ATTACKER self_cover, two_ap
	RUN DO_ATTACK
	END MAJOR
RETURN

[DO_ATTACK]
? IS SELF $(can_attack) && AP > 0
	? SELECT INVENTORY $(attack, ranged) && ~(aoe)
		? DO $(attack, ranged) && ~(aoe)
			DEBUG "I HAVE A RANGED WEAPON TO USE"
			RETURN TRUE
	? SELECT INVENTORY $(attack, ranged)
		? DO $(attack, ranged)
			DEBUG "I HAVE AN AOE TO USE"
			RETURN TRUE
	? SELECT INVENTORY $(attack, melee)		
		DEBUG "I CAN MELEE!" ACTOR_SELECTION
		? IS ACTOR_SELECTION dist > 1 AND $(in_sight)
			DEBUG "I AM GOING GO TO SOMEONE TO MELEE THEM!"
			MOVE ACTOR_SELECTION
		? DO $(attack, melee)
			RETURN TRUE
RETURN FALSE

[CHECK_NEAR_MELEE]
? SELECT ENEMY $(alive, in_sight) && (dist <= 3)
	DEBUG "I SHOULD DO A MELEE ATTACK!"
	? IS ACTOR_SELECTION dist = 1
		DO $(attack, melee)
	? IS AP>1
		MOVE ACTOR_SELECTION
		DO $(attack, melee)
	RETURN
RETURN

[SEARCHER]
@loops=3
? SELECT ENEMY $(alive)
	DEBUG "Search for" ACTOR_SELECTION 
:
	DEBUG "Search for nobody"
LOOK ACTOR_SELECTION
? SELECT ITEM_FAVORED
:? SELECT INVENTORY $(attack)
? MOVEONLY ACTOR_SELECTION self_cover, in_sight, in_range, forward, two_ap
:? MOVE ACTOR_SELECTION in_sight, in_range
:? MOVE ACTOR_SELECTION
	DEBUG "Searching fallback" ACTOR_SELECTION
? SELECT ENEMY $(alive, in_range, in_sight) // now i can see an enemy
	RETURN
LOOP
 
[HAS_MOVETO]
RETURN SELF $(moveto)

[DO_MOVETO]
@gate=HAS_MOVETO
@loops=3
MOVE moveto
LOOP

[HAS_PATROL]
RETURN SELF $(patrol)

[DO_PATROL]
@gate=HAS_PATROL
@loops=3
MOVE patrol
LOOP