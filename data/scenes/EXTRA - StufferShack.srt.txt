triggers {
  name: "delete- on load.disable matrix"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Enable/Disable Team\'s Turn"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Matrix"
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "5838ad97346265e81a0060c6"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "delete- on interact1.switch"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "528aa29b666538f80c003f94"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5838ad28346265e81a0060c2"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Matrix"
          }
        }
      }
    }
    ops {
      functionName: "Change Actor Control"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5838ad28346265e81a0060c2"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PlayerOrAI"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5838ad28346265e81a0060c2"
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "5838aded346265e81a0060cb"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "delete- on interact2.switch"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "528aa24d666538f80c003f33"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Change Actor Control"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5838ad28346265e81a0060c2"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PlayerOrAI"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5838ad28346265e81a0060c2"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Matrix"
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "5838ae43346265e81a0060cc"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "delete- on one round matrix. hostil"
  events {
    ops {
      functionName: "On Camera Region Activated"
      args {
        call_value {
          functionName: "Get Map Item (CameraRegion)"
          args {
            string_value: "5838acfd346265e81a0060c0"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Evaluate If Actor is Inside Region"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Matrix"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "AreOrAreNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5838acfd346265e81a0060c0"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5838b073346265e81a0060cf"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Matrix"
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Wait for Rounds"
      args {
        int_value: 1
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Matrix"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Hunt And Destroy (Team)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "5838b073346265e81a0060cf"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Matrix"
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "5838b223346265e81a0060d0"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "CharacterScaleDummyTrigger"
  events {
    ops {
      functionName: "On Map Setup"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "57084f7c6631365c1600767e"
          }
          args {
            string_value: "CharacterScaleAmount"
          }
        }
      }
      args {
        int_value: 2
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "57084f7c6631365c1600767e"
          }
          args {
            string_value: "Crew_Advancement_Available"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "57084f7c6631365c1600767e"
          }
          args {
            string_value: "Crew_Recruited_Coyote"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "57084f7c6631365c1600767e"
          }
          args {
            string_value: "Crew_Recruited_Jon"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "57084f7c6631365c1600767e"
          }
          args {
            string_value: "Crew_Recruited_Paco"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "57084f7c6631365c1600767e"
          }
          args {
            string_value: "Crew_Recruited_River"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "57084f7c6631365c1600767e"
          }
          args {
            string_value: "Crew_Recruited_Seamus"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "57084f7c6631365c1600767e"
          }
          args {
            string_value: "Crew_Recruited_Violet"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "584cabb4346265a81b003568"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "onInteract.River.OpenHiring.OpenScene"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "584cac15346265a81b00356a"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Open Hiring Screen and Open Scene"
      args {
        call_value {
          functionName: "Get Map Item (Scene)"
          args {
            string_value: "c16-s1-Bonus_River"
          }
        }
      }
      args {
        string_value: "Test River\'s Deeper Shade of Blue?"
      }
    }
  }
  isActive: true
  idRef {
    id: "584cac1e346265a81b00356b"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "NewTrigger"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Add Item to Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "DocWagonPlatinum"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Add Item to Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "DocWagonPlatinum"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Add Item to Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "HealthPack_hi"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Add Item to Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "HealthPack_hi"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "584ee93d6631361808006bfd"
  }
  elseActions {
  }
  is_oneshot: true
}
regions {
  name: "camMain"
  position {
    x: -44
    y: -14
    width: 57
    height: 41
  }
  enabledAtStart: true
  is_camera_region: true
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "581be3603462659c2a003022"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "CAM-Matrix"
  position {
    x: -50
    y: -63
    width: 37
    height: 27
  }
  enabledAtStart: true
  is_camera_region: true
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "5838acfd346265e81a0060c0"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: -16
    y: 0
    z: 2
  }
  orientation: ORIENTATION_S
  idRef {
    id: "581be37e3462659c2a003023"
  }
  lod: 0
  character_instance {
    character_mod {
      archetypeName: "Player"
    }
    team_id: "Shadowrunners"
    char_name: "New Actor"
    enabled_at_start: true
    pc_spawn_number: 0
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -16
    y: 0
    z: 3
  }
  orientation: ORIENTATION_S
  idRef {
    id: "5821d0023462651415005992"
  }
  lod: 0
  character_instance {
    prefab_name: "Story/JakeArmitage"
    character_sheet_id: "Story_Jake"
    equipment_sheet_id: "Story_Jake"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_paranormal: 0
        etiquette_socialite: 0
        etiquette_infected: 0
        chi_casting: 0
        drain_resistance: 0
        drone_combat: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        throwing_blades: 0
        spirit_control: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Jake Armitage"
    pc_spawn_number: -1
    hiring_type: HiringType_Forced
    portrait {
      filename: "NPC_HumanMale_JakeArmitage"
    }
    description_bio: "Bad memory, poor sleep habits. Knows the game like no one else."
    hiring_cost_override: 0
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -24
    y: 0
    z: -51
  }
  orientation: ORIENTATION_S
  idRef {
    id: "5838ad28346265e81a0060c2"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/TrollFemale"
    character_sheet_id: "Persona_Violet_Lv1"
    equipment_sheet_id: "Persona_Violet_Lv1_Gear"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Violet"
    GeneralTags: "isViolet"
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    hiring_type: HiringType_Hireable
    portrait {
      filename: "pc_orkfemale_excl_oni"
    }
    description_bio: "A street kid with street muscle who brings her unusal style to the Matrix."
    portrait_code_override: "s6h12c1b0t9"
    dimension_name: "Matrix"
    karma: 1
    hiring_cost_override: 0
    hiring_tag: "Crew: Decker"
    id: "Persona_Lv1_Violet"
    crew_id: "Violet"
    cyberware_head: "(Head) Datajack"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -32
    y: 0
    z: -54
  }
  orientation: ORIENTATION_S
  idRef {
    id: "5838b073346265e81a0060cf"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/HumanMale"
    character_sheet_id: "Persona_Lv1_Decker"
    equipment_sheet_id: "NPC Decker Lv1 Gear"
    character_mod {
      stats {
        essence: 1
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Corporate Decker"
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    karma: 6
  }
}
worldMapLocation {
  filename: ""
  location {
    x: 0
    y: 0
  }
}
mapName: "EXTRA - StufferShack"
parentStory: ""
scene_title: "New Scene"
scene_subtitle: ""
scene_synopsis: ""
scene_image: ""
scene_continue_button_skip: false
scene_restore_runner_health: false
directional_light_dir {
  x: -0.5
  y: -1
  z: -0.75
}
directional_light_color {
  r: 0.50196081
  g: 0.50196081
  b: 0.50196081
}
ambient_light_color {
  r: 0.50196081
  g: 0.50196081
  b: 0.50196081
}
allow_drawn_weapons: false
team_affiliations {
  team_name: "Shadowrunners"
  affiliation: 0
  affiliation: 1
  affiliation: 1
  affiliation: 0
}
team_affiliations {
  team_name: "Gangers"
  affiliation: 1
  affiliation: 0
  affiliation: 1
  affiliation: 0
}
team_affiliations {
  team_name: "LoneStar"
  affiliation: 1
  affiliation: 1
  affiliation: 0
  affiliation: 0
}
team_affiliations {
  team_name: "Civilians"
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
}
scene_dimensions {
  dimension_name: "Default"
  initial_alarm_state: 0
  turns_per_round: 1
}
scene_dimensions {
  dimension_name: "Matrix"
  initial_alarm_state: 15
  turns_per_round: 3
  is_matrix: true
}
character_roster {
}
show_hiring_screen_on_scene_load: false
scene_hiring_prerequisites {
  prereq_description: ""
  prereq_conditions {
  }
}
hiring_slot_count: 0
hiring_minimum_karma: 0
hiring_maximum_karma: 0
roster_overrides {
}
use_hiring_cost_warning: false
hiring_average_cost: 90
override_hiring_average_cost: true
show_equip_screen_on_scene_load: false
is_persistant: false
is_persistant_has_value: false
can_move_outside_camera_regions: false
can_start_before_triggers: true
can_use_team_advancement: true
