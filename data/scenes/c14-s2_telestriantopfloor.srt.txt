triggers {
  name: "SceneInit"
  events {
    ops {
      functionName: "On Map Setup"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Waypoint on Prop"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PrimaryOrSecondary"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "14ec5ba23030313010003d7a"
          }
        }
      }
    }
    ops {
      functionName: "Play FX at Point"
      args {
        string_value: "MatrixControlNodeHacked"
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "2dbad6313030318409006e04"
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isDronePresent"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isBroken"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "595077dd3438316c10001e81"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/standing_idle_flirty"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "2863bc01303031a0040018bf"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "DeckingStarted"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "14ec5ba23030313010003d7a"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Clear Waypoint from Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "14ec5ba23030313010003d7a"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bDoorsAvailable"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Start Conversation Between Actors"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "5951e57d343831f416005e7a"
          }
        }
      }
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5951e8a1343831f416005ea0"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "8eea001c3030314413001938"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "ElevatorObjectiveOnBaronDone_OFF"
  events {
    ops {
      functionName: "On Conversation Complete"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Regain Control of the Elevators in the Matrix"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "51afe2803030312417005879"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "BaronConvoOnDeckInToMatrix"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "51b8ae43303031381600390d"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Matrix"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "props"
          }
          args {
            string_value: "PDA-Ring1"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Start Conversation Between Actors"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "4445eb5f30303160150082a7"
          }
        }
      }
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "8eaf881a3030314413001908"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "51b8ae64303031381600390e"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Ambush.Setup"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eSetupAmbush"
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "51b8a9d5303031b00900395e"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "8e231249303031441300185b"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 7
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "8ee4e9853030314413001935"
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "8e24d804303031441300185c"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 7
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "8f7986a13030312c12007e03"
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "8e24f2b3303031441300185d"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 7
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "8f798ca03030312c12007e04"
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "8e250854303031441300185e"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 7
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "51ba56aa303031f40f00393d"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "8ea27505303031441300189c"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 7
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "51b8a9eb303031b00900395f"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "8ea27ba5303031441300189d"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 7
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "51b8a894303031b00900395b"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "8e252fb2303031441300185f"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 7
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "8ef1bd56303031441300193d"
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "8ea26d79303031441300189b"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 7
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "51ba6875303031f40f0039ba"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "8f776bc23030312c12007e02"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Ambush.SetReady"
  events {
    ops {
      functionName: "On Actor Teleport"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isGuard"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Play Animation From Manifest"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Animation)"
          args {
            string_value: "HongKong:General/crouch_idle_pistol"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59509279343831300800217b"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Ambush.Aggro"
  events {
    ops {
      functionName: "On Actor Awareness of Another Actor"
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Team Alliance"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeamAlliance"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "There they are.\nOPEN FIRE!"
      }
      args {
        float_value: 2550
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 128
      }
      args {
        float_value: 13
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Order Actor to Hunt And Destroy (Team)"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 2
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "594f69e83438310814000a20"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Ambush.Victory"
  events {
    ops {
      functionName: "On New Round"
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iGuardsKilled"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 8
      }
    }
  }
  actions {
    ops {
      functionName: "Start Conversation Between Actors"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "51ba6956303031f40f0039bb"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "8eaf881a3030314413001908"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "51ba6875303031f40f0039ba"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Drone.OfficeVent"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "393e08883030311016006f2e"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Evaluate If Actor is Inside Region"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "AreOrAreNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "1500922f3030313010003d85"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "1501ac763030313010003d86"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 2
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "dca2ef80303031c417007ea4"
  }
  elseActions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "1500922f3030313010003d85"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 2
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "Drone.HallwayVent"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "51acd0403030312814007e98"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Evaluate If Actor is Inside Region"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "AreOrAreNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "150327b63030313010003d88"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "15024c883030313010003d87"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 2
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "1527cea13030313010003d92"
  }
  elseActions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "150327b63030313010003d88"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 7
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 2
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "UnlockCameraNode"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "numSecCam2NodeICDead"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 2
      }
    }
  }
  actions {
    ops {
      functionName: "Set Region Enabled"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "1573a7d73030313010003db7"
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "51acd3a53030312814007e9a"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "51cdd8c2303031fc17000c2f"
          }
        }
      }
      args {
        call_value {
          functionName: "Specified Point (3D)"
          args {
            float_value: 124
          }
          args {
            float_value: 0
          }
          args {
            float_value: -43
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "344c2ec63030319816004e58"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "BaronAfterFindAchorLocation_OFF"
  events {
    ops {
      functionName: "On Conversation Complete"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "51b7ae2d3030315c15004695"
          }
        }
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "51b7a8dd3030315c15004663"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "8eaf881a3030314413001908"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "51b7aa253030315c1500467e"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "GoToVPPanelObjective_OFF"
  events {
    ops {
      functionName: "On Conversation Complete"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Waypoint on Prop"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PrimaryOrSecondary"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "396a3a923030317015004219"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "396a3a923030317015004219"
          }
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Gain Access to Eric Silverstar\'s Office"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Search the CEO\342\200\231s LAN on the Top Floor"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Have at Least one Runner Able to Deck Until You Have the Information You Need"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "7ac48e3a303031940600550b"
          }
        }
      }
    }
    ops {
      functionName: "Add Actor Karma"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        int_value: 8
      }
    }
  }
  isActive: false
  idRef {
    id: "51b7ae2d3030315c15004695"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "AddHackableEffectToElevatorNode"
  events {
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Play FX at Point"
      args {
        string_value: "MatrixControlNodeHacked"
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "334610f5303031c004006e67"
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "decker"
          }
          args {
            string_value: "Matrix_NodeHackReady"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "51ab85f93030313c160066c7"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "VPConsoleInteract"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "396a3a923030317015004219"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Team Survival Percentage"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 100
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "props"
          }
          args {
            string_value: "PDA-Ring1"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Start Conversation Between Actors"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "51b7b7a73030315c1500470d"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "8eaf881a3030314413001908"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "51b27a5d3030316c0f0039ab"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "39b7288b3030317015004278"
  }
  elseActions {
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "props"
          }
          args {
            string_value: "PDA-Ring1"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Start Conversation Between Actors"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "51b7bf7d3030315c150047dc"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "8eaf881a3030314413001908"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "FadeOutForExitTransition_OFF"
  events {
    ops {
      functionName: "On Conversation Complete"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "51b7d0aa3030315006003732"
          }
        }
      }
    }
    ops {
      functionName: "Fade Camera Out"
      args {
        float_value: 3
      }
      args {
        float_value: 1
      }
    }
  }
  isActive: false
  idRef {
    id: "51b27a5d3030316c0f0039ab"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "DoSceneTransition_OFF"
  events {
    ops {
      functionName: "On Camera Fade Out"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Open Scene"
      args {
        call_value {
          functionName: "Get Map Item (Scene)"
          args {
            string_value: "c14-s3_daytelestrianoffice"
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "51b7d0aa3030315006003732"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: " "
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "59489cf0663136ec0700557f"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Global.Goal.Player0Died"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "You are dead"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "51b8a3d0303031b00900390f"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Global.Goal.TeamHasNoDecks"
  events {
    ops {
      functionName: "On New Round"
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Evaluate If Team Has Cyberdeck"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Have at Least one Runner Able to Deck Until You Have the Information You Need"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "7ac48e3a303031940600550b"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Global.GatherParty"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eGatherParty"
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Teleport Actor to Area Around Point"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        int_value: 1
      }
      args {
        int_value: 4
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "14ec5ba23030313010003d7a"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Force-Use Interactable Object (Basic)"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "393e08933030311016006f4a"
          }
        }
      }
    }
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Nearest Tagged Prop to Actor"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isClosed1"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Nearest Tagged Prop to Actor"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isWindow1"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (Player)"
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Nearest Tagged Prop to Actor"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isClosed2"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Nearest Tagged Prop to Actor"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isWindow2"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (Player)"
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Nearest Tagged Prop to Actor"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isClosed3"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Nearest Tagged Prop to Actor"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isWindow3"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (Player)"
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Nearest Tagged Prop to Actor"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isClosed4"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Nearest Tagged Prop to Actor"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isWindow4"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (Player)"
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Nearest Tagged Prop to Actor"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isClosed5"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Nearest Tagged Prop to Actor"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isWindow5"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (Player)"
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Nearest Tagged Prop to Actor"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isClosed6"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Nearest Tagged Prop to Actor"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isWindow6"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (Player)"
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Delete Props by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isOpenWindow"
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5951e1e6343831f416005e6a"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Global.PlayerBroughtDrone"
  events {
    ops {
      functionName: "On Actor Alive"
    }
  }
  conditions {
    ops {
      functionName: "AND"
      args {
        call_value {
          functionName: "Compare Actor Team"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "IsOrIsNot"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Compare Actor Race"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "IsOrIsNot"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Race"
              }
              args {
                int_value: 8
              }
            }
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bDronePresent"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isNoDronePresent"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isDronePresent"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59489cf8663136ec07005580"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Global.GuardsKilled"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isGuard"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iGuardsKilled"
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  isActive: true
  idRef {
    id: "594958a7663136780c007e41"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Global.PostMatrixAutoSave"
  events {
    ops {
      functionName: "On Camera Region Activated"
      args {
        call_value {
          functionName: "Get Map Item (CameraRegion)"
          args {
            string_value: "a36d8056303031b40300272f"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Autosave Game"
    }
  }
  isActive: false
  idRef {
    id: "5951e80d343831f416005e9f"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Office.CEOOfficeReaction"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5949ceb5663136780c007e56"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iCEOComment"
          }
        }
      }
      args {
        call_value {
          functionName: "Random (int)"
          args {
            int_value: 1
          }
          args {
            int_value: 6
          }
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "eCEOComment"
          }
        }
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "$(scene.sCEOComment)"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 15
      }
      args {
        float_value: 3
      }
      args {
        float_value: 1
      }
    }
  }
  isActive: true
  idRef {
    id: "5949ceda663136780c007e57"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "     Comment[1]"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eCEOComment"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iCEOComment"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "sCEOComment"
          }
        }
      }
      args {
        string_value: "Whoa.  Clearly it pays to be the boss."
      }
    }
  }
  isActive: true
  idRef {
    id: "5951fc83343831f41600608e"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "     Comment[2] ELF"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eCEOComment"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iCEOComment"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 2
      }
    }
    ops {
      functionName: "Compare Actor Race"
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Race"
          }
          args {
            int_value: 2
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "sCEOComment"
          }
        }
      }
      args {
        string_value: "Ghost, what is that smell?"
      }
    }
  }
  isActive: true
  idRef {
    id: "5951fce7343831f41600608f"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "     Comment[2] ELSE"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eCEOComment"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iCEOComment"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 2
      }
    }
    ops {
      functionName: "Compare Actor Race"
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Race"
          }
          args {
            int_value: 2
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "sCEOComment"
          }
        }
      }
      args {
        string_value: "That wood polish smell is way too strong!"
      }
    }
  }
  isActive: true
  idRef {
    id: "5951fd6e343831f416006094"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "     Comment[3]"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eCEOComment"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iCEOComment"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 3
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "sCEOComment"
          }
        }
      }
      args {
        string_value: "Bet this guy\'s got an AWESOME bar stash in here."
      }
    }
  }
  isActive: true
  idRef {
    id: "5951fceb343831f416006090"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "     Comment[4]"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eCEOComment"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iCEOComment"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 4
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "sCEOComment"
          }
        }
      }
      args {
        string_value: "So this is how the 1% works..."
      }
    }
  }
  isActive: true
  idRef {
    id: "5951fceb343831f416006091"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "     Comment[5]"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eCEOComment"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iCEOComment"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 5
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "sCEOComment"
          }
        }
      }
      args {
        string_value: "I\'d bet this guy is a real tool."
      }
    }
  }
  isActive: true
  idRef {
    id: "5951fced343831f416006092"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "     Comment[6]"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eCEOComment"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iCEOComment"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 6
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "sCEOComment"
          }
        }
      }
      args {
        string_value: "Let\'s get through this quick.  I don\'t want this smell stuck to me."
      }
    }
  }
  isActive: true
  idRef {
    id: "5951fced343831f416006093"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Office.SecurityDoor"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "594f42363438310814000905"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "HongKong:props"
          }
          args {
            string_value: "alarmwarning"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Display Text over Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "594f42363438310814000905"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "Telestrian DNA Sample Required"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 8
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "594f42363438310814000905"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "594f488a3438310814000919"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Office.ConfrenceRoomDoor"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "393e08b73030311016006fae"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "594f4dfd343831081400091f"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "594f520f34383108140009a3"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Office.DoorSmash"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "eSmashDoor"
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "HongKong:props"
          }
          args {
            string_value: "glasscasebreak"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Apply Camera Shake"
      args {
        float_value: 3
      }
      args {
        float_value: 0.75
      }
    }
    ops {
      functionName: "Delete Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "393e08b73030311016006fae"
          }
        }
      }
    }
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isBroken"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bAltPathOpen"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "594f545234383108140009de"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Office.ExecElevator"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "393e08e53030311016007029"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Triggering Prop (Interactable)"
        }
      }
    }
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "HongKong:props"
          }
          args {
            string_value: "alarmwarning"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Display Text over Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "393e08e53030311016007029"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "Telestrian DNA Sample Required"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "594f65633438310814000a1d"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Office.LiquorCabinet"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "393e08ea3030311016007030"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Skill"
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "BaseOrCurrent"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "ActorSkills"
          }
          args {
            int_value: 16
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  actions {
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "393e08ea3030311016007030"
          }
        }
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "Whoever this guy is, he sure does have a thing for whiskeys.   Must be a dozen or more in here."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 18
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "59520027343831f416006096"
  }
  elseActions {
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "393e08ea3030311016007030"
          }
        }
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "This guy knows his whiskeys.  I grab one for myself."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 18
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Add Item to Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "c14-s2_Whiskey"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  is_oneshot: true
}
triggers {
  name: " "
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "59518391343831f416005e3d"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Matrix.IC_SpawnEffect"
  events {
    ops {
      functionName: "On Actor Teleport"
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 6
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Matrix"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Play FX on Actor"
      args {
        string_value: "MatrixESPSpawn"
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "51d2457b3030316417007741"
              }
            }
          }
          args {
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Face Point"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Last Created Persona"
            }
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59517b61343831f416005e20"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Matrix.WarpCamera"
  events {
    ops {
      functionName: "On Actor Teleport"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "595071303438316c10001e49"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Matrix.Secretary"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "59507bc83438313008002163"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Start Conversation Between Actors"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "59507c0e3438313008002165"
          }
        }
      }
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "595077dd3438316c10001e81"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59507bee3438313008002164"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Matrix.HeatThreshold"
  events {
    ops {
      functionName: "On Dimension Heat Threshold"
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Matrix"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Kill Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "595077dd3438316c10001e81"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DeathMethod"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor to Area Around Point"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isHeatIC"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        int_value: 0
      }
      args {
        int_value: 4
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "5951f371343831f416005ed0"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Hunt And Destroy (Team)"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isHeatIC"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Matrix"
          }
        }
      }
    }
    ops {
      functionName: "Set Region Enabled"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "59505dc53438316c10001e3f"
          }
        }
      }
    }
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isNodePortal_Entry"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5951f3af343831f416005ed2"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Matrix.HeatThreshold.IC_Defeated"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isHeatIC"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Trigger: Wait Until Triggered Again"
    }
    ops {
      functionName: "Set Region Enabled"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "59505dc53438316c10001e3f"
          }
        }
      }
    }
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isNodePortal_Entry"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5951f51f343831f416005ed4"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Matrix.Data.ElevatorControl"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "595072ee3438316c10001e4b"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "595072ee3438316c10001e4b"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "hasHackedElevators"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Regain Control of the Elevators in the Matrix"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "decker"
          }
          args {
            string_value: "Matrix_NodeHackSuccess"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Add Actor Karma"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        int_value: 6
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "eSetupAmbush"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bDoorsAvailable"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "594f4988343831081400091d"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "594f3e1b34383108140008f0"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "393e08b73030311016006fae"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "594f3f1234383108140008f9"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5951e80d343831f416005e9f"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "33a2606b303031dc05005d1a"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Matrix.Data.PublicMailServer"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "595074053438316c10001e4e"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "595074053438316c10001e4e"
          }
        }
      }
    }
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "decker"
          }
          args {
            string_value: "Matrix_NodeHackSuccess"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Start Conversation Between Actors"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "2dd97b79303031140b006ec1"
          }
        }
      }
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "51afc18e303031540f004dd6"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "2de1e988303031140b006ecd"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Matrix.Data.PrivateMailServer"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "595073ce3438316c10001e4c"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "595073ce3438316c10001e4c"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "51b7aa253030315c1500467e"
          }
        }
      }
    }
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "decker"
          }
          args {
            string_value: "Matrix_NodeHackSuccess"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Start Conversation Between Actors"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "397d99fa3030317015004223"
          }
        }
      }
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "51afc194303031540f004dd7"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "33ac33ec303031dc05005d22"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Matrix.Data.VoicemailServer"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "595074863438316c10001e56"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "595074863438316c10001e56"
          }
        }
      }
    }
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "decker"
          }
          args {
            string_value: "Matrix_NodeHackSuccess"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Start Conversation Between Actors"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "51ab93b8303031d811001289"
          }
        }
      }
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "51afc197303031540f004dd8"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "518d7674643431b03f0041ab"
          }
          args {
            string_value: "c14_knowsThatThePlantExploded"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "2eaf46b4303031140b006f97"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Matrix.Data.Camera1"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "595074643438316c10001e55"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "8f0dfc763030314413001945"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "595074643438316c10001e55"
          }
        }
      }
    }
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "decker"
          }
          args {
            string_value: "Matrix_NodeHackSuccess"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "1587d89a3030313010003dd8"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Matrix.Data.Camera2"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "595073d63438316c10001e4d"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "8f0e30d03030314413001946"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "595073d63438316c10001e4d"
          }
        }
      }
    }
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "decker"
          }
          args {
            string_value: "Matrix_NodeHackSuccess"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "2daa669f3030318409006df2"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Matrix.Public.Tripline"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "59517ad7343831f416005e1e"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isNodePortal_Public"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Region Enabled"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "59505dd33438316c10001e40"
          }
        }
      }
    }
    ops {
      functionName: "Set Region Enabled"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "59505de93438316c10001e41"
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor to Area Around Actor"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isIC_Public"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        int_value: 3
      }
      args {
        int_value: 7
      }
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Hunt And Destroy (Team)"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isIC_Public"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Matrix"
          }
        }
      }
    }
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "HongKong:decker"
          }
          args {
            string_value: "Matrix_ESP-BeingSummoned"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59517aed343831f416005e1f"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Matrix.Public.IC_Defeated"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isIC_Public"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Trigger: Wait Until Triggered Again"
    }
    ops {
      functionName: "Set Region Enabled"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "59505dd33438316c10001e40"
          }
        }
      }
    }
    ops {
      functionName: "Set Region Enabled"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "59505de93438316c10001e41"
          }
        }
      }
    }
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isNodePortal_Public"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59517eb9343831f416005e39"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: " "
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "59518388343831f416005e3a"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Matrix.Voicemail.Tripline"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "595184ce343831f416005e3e"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isNodePortal_Voicemail"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Region Enabled"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "59505dec3438316c10001e42"
          }
        }
      }
    }
    ops {
      functionName: "Set Region Enabled"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "59505dee3438316c10001e43"
          }
        }
      }
    }
    ops {
      functionName: "Set Region Enabled"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "59505e053438316c10001e48"
          }
        }
      }
    }
    ops {
      functionName: "Suspend Team\'s Turn"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 6
          }
        }
      }
      args {
        int_value: 1
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Matrix"
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor to Area Around Point"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isIC_Voicemail1"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        int_value: 0
      }
      args {
        int_value: 3
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "59518798343831f416005e46"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Hunt And Destroy (Team)"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isIC_Voicemail1"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Matrix"
          }
        }
      }
    }
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "HongKong:decker"
          }
          args {
            string_value: "Matrix_ESP-BeingSummoned"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59518391343831f416005e3b"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Matrix.Voicemail.KillCounter"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isIC_Voicemail"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iIC_VoicemailKilled"
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  isActive: true
  idRef {
    id: "5951854a343831f416005e3f"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Matrix.Voicemail.Wave[2]"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isIC_Voicemail1"
          }
        }
      }
    }
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "iIC_VoicemailKilled"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        int_value: 2
      }
    }
  }
  actions {
    ops {
      functionName: "Teleport Actor to Area Around Point"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isIC_Voicemail2"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        int_value: 3
      }
      args {
        int_value: 4
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "59518798343831f416005e46"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Hunt And Destroy (Team)"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isIC_Voicemail2"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Matrix"
          }
        }
      }
    }
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "HongKong:decker"
          }
          args {
            string_value: "Matrix_ESP-BeingSummoned"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5951860d343831f416005e40"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Matrix.Voicemail.IC_Defeated"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isIC_Voicemail"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Trigger: Wait Until Triggered Again"
    }
    ops {
      functionName: "Trigger: Wait Until Triggered Again"
    }
    ops {
      functionName: "Trigger: Wait Until Triggered Again"
    }
    ops {
      functionName: "Trigger: Wait Until Triggered Again"
    }
    ops {
      functionName: "Set Region Enabled"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "59505dec3438316c10001e42"
          }
        }
      }
    }
    ops {
      functionName: "Set Region Enabled"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "59505dee3438316c10001e43"
          }
        }
      }
    }
    ops {
      functionName: "Set Region Enabled"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "59505e053438316c10001e48"
          }
        }
      }
    }
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isNodePortal_Voicemail"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59518391343831f416005e3c"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: " "
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "5951d637343831f416005e48"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Matrix.Private.Tripline"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5951d6f0343831f416005e4c"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isNodePortal_Voicemail"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Region Enabled"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "59505df13438316c10001e44"
          }
        }
      }
    }
    ops {
      functionName: "Set Region Enabled"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "59505df63438316c10001e45"
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor to Area Around Point"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isIC_Private"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        int_value: 1
      }
      args {
        int_value: 8
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "5951d656343831f416005e4b"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "HongKong:decker"
          }
          args {
            string_value: "Matrix_ESP-BeingSummoned"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Hunt And Destroy (Team)"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isNodePortal_Private"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Matrix"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5951d637343831f416005e49"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Matrix.Private.IC_Defeated"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isIC_Private"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Trigger: Wait Until Triggered Again"
    }
    ops {
      functionName: "Trigger: Wait Until Triggered Again"
    }
    ops {
      functionName: "Trigger: Wait Until Triggered Again"
    }
    ops {
      functionName: "Set Region Enabled"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "59505df13438316c10001e44"
          }
        }
      }
    }
    ops {
      functionName: "Set Region Enabled"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "59505df63438316c10001e45"
          }
        }
      }
    }
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isNodePortal_Private"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5951d637343831f416005e4a"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: " "
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "5951dddb343831f416005e4f"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Matrix.Elevator.Tripline"
  events {
    ops {
      functionName: "On Actor Awareness of Another Actor"
    }
  }
  conditions {
    ops {
      functionName: "AND"
      args {
        call_value {
          functionName: "Compare Actor Team"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "IsOrIsNot"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Matrix"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Evaluate Tag for Actor"
          args {
            call_value {
              functionName: "Specific Actor"
              args {
                call_value {
                  functionName: "Triggering Actor"
                }
              }
              args {
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "HasOrHasNot"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isIC_Elevator"
              }
            }
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isNodePortal_Elevator"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Region Enabled"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "59505df83438316c10001e46"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Hunt And Destroy (Team)"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isIC_Elevator"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Matrix"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5951dddb343831f416005e50"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Matrix.Elevator.IC_Defeated"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isNodePortal_Elevator"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Trigger: Wait Until Triggered Again"
    }
    ops {
      functionName: "Trigger: Wait Until Triggered Again"
    }
    ops {
      functionName: "Trigger: Wait Until Triggered Again"
    }
    ops {
      functionName: "Set Region Enabled"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "59505df83438316c10001e46"
          }
        }
      }
    }
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isNodePortal_Elevator"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5951dddb343831f416005e51"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: " "
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "5951eb69343831f416005eb2"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Matrix.ALT.Tripline"
  events {
    ops {
      functionName: "On Actor Awareness of Another Actor"
    }
  }
  conditions {
    ops {
      functionName: "AND"
      args {
        call_value {
          functionName: "Compare Actor Team"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "IsOrIsNot"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Matrix"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Comparison (Actor)"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "IsOrIsNot"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "51d2457b3030316417007741"
              }
            }
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isNodePortal_ALT"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Region Enabled"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "59505dfd3438316c10001e47"
          }
        }
      }
    }
    ops {
      functionName: "Start Conversation Between Actors"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "5951ea2f343831f416005ea4"
          }
        }
      }
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "51d2457b3030316417007741"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5951eb69343831f416005eb3"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Matrix.ALT.IC_Defeated"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isIC_ALT"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Trigger: Wait Until Triggered Again"
    }
    ops {
      functionName: "Trigger: Wait Until Triggered Again"
    }
    ops {
      functionName: "Set Region Enabled"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "59505dfd3438316c10001e47"
          }
        }
      }
    }
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isNodePortal_ALT"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5951eb69343831f416005eb4"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: " "
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "595a97e93438319012006944"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "-- Crew Managment System --"
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: true
  idRef {
    id: "595a97d33438319012006943"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "     Crew.Bartlett"
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "595a98003438319012006945"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "          Bartlett.On_Run"
  events {
    ops {
      functionName: "On Actor Alive"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isBartlett"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "57084f7c6631365c1600767e"
          }
          args {
            string_value: "Crew_OnLastRun_Bartlett"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "595a980b3438319012006946"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "          Bartlett.Killed_In_Action"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isBartlett"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "57084f7c6631365c1600767e"
          }
          args {
            string_value: "Crew_IsInjured_Bartlett"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "595a98633438319012006947"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "     Crew.Coyote"
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "595a98a93438319012006948"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "          Coyote.On_Run"
  events {
    ops {
      functionName: "On Actor Alive"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isCoyote"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "57084f7c6631365c1600767e"
          }
          args {
            string_value: "Crew_OnLastRun_Coyote"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "595a98a93438319012006949"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "          Coyote.Killed_In_Action"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isCoyote"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "57084f7c6631365c1600767e"
          }
          args {
            string_value: "Crew_IsInjured_Coyote"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "595a98a9343831901200694a"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "     Crew.Paco"
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "595a995b343831901200695b"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "          Paco.On_Run"
  events {
    ops {
      functionName: "On Actor Alive"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isPaco"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "57084f7c6631365c1600767e"
          }
          args {
            string_value: "Crew_OnLastRun_Paco"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "595a98b6343831901200694d"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "          Paco.Killed_In_Action"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isPaco"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "57084f7c6631365c1600767e"
          }
          args {
            string_value: "Crew_IsInjured_Paco"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "595a98b6343831901200694e"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "     Crew.River"
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "595a98b6343831901200694f"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "          River.On_Run"
  events {
    ops {
      functionName: "On Actor Alive"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isRiver"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "57084f7c6631365c1600767e"
          }
          args {
            string_value: "Crew_OnLastRun_River"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "595a99b3343831901200695c"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "          River.Killed_In_Action"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isRiver"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "57084f7c6631365c1600767e"
          }
          args {
            string_value: "Crew_IsInjured_River"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "595a98b63438319012006951"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "     Crew.Seamus"
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "595a98ba3438319012006952"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "          Seamus.On_Run"
  events {
    ops {
      functionName: "On Actor Alive"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isSeamus"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "57084f7c6631365c1600767e"
          }
          args {
            string_value: "Crew_OnLastRun_Seamus"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "595a98ba3438319012006953"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "          Seamus.Killed_In_Action"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isSeamus"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "57084f7c6631365c1600767e"
          }
          args {
            string_value: "Crew_IsInjured_Seamus"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "595a98ba3438319012006954"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "     Crew.Violet"
  events {
  }
  conditions {
  }
  actions {
  }
  isActive: false
  idRef {
    id: "595a98ba3438319012006955"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "          Violet.On_Run"
  events {
    ops {
      functionName: "On Actor Alive"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isViolet"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "57084f7c6631365c1600767e"
          }
          args {
            string_value: "Crew_OnLastRun_Violet"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "595a98ba3438319012006956"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "          Violet.Killed_In_Action"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isViolet"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "57084f7c6631365c1600767e"
          }
          args {
            string_value: "Crew_IsInjured_Violet"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "595a98ba3438319012006957"
  }
  elseActions {
  }
  is_oneshot: true
}
regions {
  name: "MainE_1"
  position {
    x: 69
    y: 9
    width: 1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "8e231249303031441300185b"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 0.88235295
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "MainE_2"
  position {
    x: 73
    y: 5
    width: 1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "8e24d804303031441300185c"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 0.88235295
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "MainE_3"
  position {
    x: 68
    y: 5
    width: 1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "8e24f2b3303031441300185d"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 0.88235295
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "MainE_4"
  position {
    x: 76
    y: 9
    width: 1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "8e250854303031441300185e"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 0.88235295
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "ExecE_3"
  position {
    x: 76
    y: 5
    width: 1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "8e252fb2303031441300185f"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 0.88235295
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "ExecE_4"
  position {
    x: 74
    y: 10
    width: 1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "8ea26d79303031441300189b"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 0.88235295
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "ExecE_1"
  position {
    x: 69
    y: 1
    width: 1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "8ea27505303031441300189c"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 0.88235295
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "ExecE_2"
  position {
    x: 73
    y: 12
    width: 1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "8ea27ba5303031441300189d"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 0.88235295
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Office"
  position {
    x: 53
    y: -24
    width: 23
    height: 24
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "8ef6ca5c3030314413001943"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 0.88235295
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "Main Camera Region"
  position {
    x: 39
    y: -35
    width: 59
    height: 71
  }
  enabledAtStart: true
  is_camera_region: true
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "a36d8056303031b40300272f"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.9
    y: -0.75
    z: -0.75
  }
  directional_light_color {
    r: 0.0627451
    g: 0.019607844
    b: 0.38431373
    a: 1
  }
  ambient_light_color {
    r: 0.49803922
    g: 0.44313726
    b: 0.43137255
    a: 0.88235295
  }
  ambience_template: "office-quiet"
  combat_music: "HongKong-Combat-Generic-Int1"
  default_music: "HongKong-Legwork-ExitStageLeft"
  loop_combat_music: true
  loop_default_music: true
  no_fow_in_region: false
  combat_intense_music: "HongKong-Combat-Generic-Int2"
  combat_wrapup_music: "HongKong-Combat-Generic-WrapUp"
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: "HongKong-Combat-Stinger-Start"
  combat_outro_stinger: "HongKong-Combat-Stinger-End"
  vfx_fill_prefab_name: ""
}
regions {
  name: "Matrix"
  position {
    x: 163
    y: -39
    width: 90
    height: 126
  }
  enabledAtStart: true
  is_camera_region: true
  is_matrix_node: true
  is_vfx_fill_region: false
  idRef {
    id: "14ee7d213030313010003d7b"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.81176472
    g: 0.25882354
    b: 0.81176472
    a: 1
  }
  ambient_light_color {
    r: 0.32941177
    g: 0.61176473
    b: 0.58823532
    a: 0.88235295
  }
  ambience_template: "office-quiet"
  combat_music: "HongKong-Stealth-Matrix1"
  default_music: "HongKong-Legwork-Hacking"
  loop_combat_music: false
  loop_default_music: true
  no_fow_in_region: false
  combat_intense_music: "HongKong-Combat-Matrix2"
  combat_wrapup_music: "HongKong-Combat-Generic-WrapUp"
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: "HongKong-Combat-Stinger-Start"
  combat_outro_stinger: "HongKong-Combat-Stinger-End"
  vfx_fill_prefab_name: ""
}
regions {
  name: "OfficeVentOut"
  position {
    x: 67
    y: 8
    width: 1
    height: 4
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "1500922f3030313010003d85"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 0.88235295
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "OfficeVentIn"
  position {
    x: 64
    y: 9
    width: 1
    height: 2
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "1501ac763030313010003d86"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 0.88235295
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "HallwayVentIn"
  position {
    x: 57
    y: 7
    width: 1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "15024c883030313010003d87"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 0.88235295
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "HallwayVentOut"
  position {
    x: 56
    y: 4
    width: 4
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "150327b63030313010003d88"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 0.88235295
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "MatrixSamediTarget"
  position {
    x: 49
    y: 53
    width: 1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "32e8a300303031cc1500157d"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 0.88235295
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "TriggerBaronConvoRegion"
  position {
    x: 222
    y: 75
    width: 4
    height: 4
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "51b8ae43303031381600390d"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "BoxCharacterCamRegion"
  position {
    x: 42
    y: 44
    width: 36
    height: 23
  }
  enabledAtStart: true
  is_camera_region: true
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "5230b8e6333463a018004b46"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  ambient_light_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "rCEO_Office"
  position {
    x: 70
    y: -3
    width: 6
    height: 3
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "5949ceb5663136780c007e56"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "rNode1_Exit"
  position {
    x: 221
    y: 61
    width: 4
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "59505dc53438316c10001e3f"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: true
  linked_teleporter_region: "59505dd33438316c10001e40"
  teleport_facing: 4
  teleport_sound_fx: "ChiCast_BuffStart"
  teleport_sound_volume: 0.75
  teleport_source_fx: ""
  teleport_destination_fx: ""
  teleport_pc_only: true
  teleport_fade_time: 0
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "rNode2_Enter"
  position {
    x: 200
    y: 76
    width: 4
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "59505dd33438316c10001e40"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: true
  linked_teleporter_region: "59505dc53438316c10001e3f"
  teleport_facing: 0
  teleport_sound_fx: "ChiCast_BuffStart"
  teleport_sound_volume: 0.75
  teleport_source_fx: ""
  teleport_destination_fx: ""
  teleport_pc_only: true
  teleport_fade_time: 0
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "rNode2_Exit"
  position {
    x: 191
    y: 57
    width: 4
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "59505de93438316c10001e41"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: true
  linked_teleporter_region: "59505dec3438316c10001e42"
  teleport_facing: 4
  teleport_sound_fx: "ChiCast_BuffStart"
  teleport_sound_volume: 0.75
  teleport_source_fx: ""
  teleport_destination_fx: ""
  teleport_pc_only: true
  teleport_fade_time: 0
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "rNode3_Enter"
  position {
    x: 175
    y: 33
    width: 4
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "59505dec3438316c10001e42"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: true
  linked_teleporter_region: "59505de93438316c10001e41"
  teleport_facing: 0
  teleport_sound_fx: "ChiCast_BuffStart"
  teleport_sound_volume: 0.75
  teleport_source_fx: ""
  teleport_destination_fx: ""
  teleport_pc_only: true
  teleport_fade_time: 0
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "rNode3_Exit"
  position {
    x: 173
    y: 11
    width: 4
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "59505dee3438316c10001e43"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: true
  linked_teleporter_region: "59505df13438316c10001e44"
  teleport_facing: 4
  teleport_sound_fx: "ChiCast_BuffStart"
  teleport_sound_volume: 0.75
  teleport_source_fx: ""
  teleport_destination_fx: ""
  teleport_pc_only: true
  teleport_fade_time: 0
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "rNode4_Enter"
  position {
    x: 177
    y: -1
    width: 4
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "59505df13438316c10001e44"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: true
  linked_teleporter_region: "59505dee3438316c10001e43"
  teleport_facing: 0
  teleport_sound_fx: "ChiCast_BuffStart"
  teleport_sound_volume: 0.75
  teleport_source_fx: ""
  teleport_destination_fx: ""
  teleport_pc_only: true
  teleport_fade_time: 0
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "rNode4_Exit"
  position {
    x: 173
    y: -34
    width: 4
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "59505df63438316c10001e45"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: true
  linked_teleporter_region: "59505df83438316c10001e46"
  teleport_facing: 4
  teleport_sound_fx: "ChiCast_BuffStart"
  teleport_sound_volume: 0.75
  teleport_source_fx: ""
  teleport_destination_fx: ""
  teleport_pc_only: true
  teleport_fade_time: 0
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "rNode5_Enter"
  position {
    x: 220
    y: -2
    width: 4
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "59505df83438316c10001e46"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: true
  linked_teleporter_region: "59505df63438316c10001e45"
  teleport_facing: 0
  teleport_sound_fx: "ChiCast_BuffStart"
  teleport_sound_volume: 0.75
  teleport_source_fx: ""
  teleport_destination_fx: ""
  teleport_pc_only: true
  teleport_fade_time: 0
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "rNode_ALT_Enter"
  position {
    x: 206
    y: 23
    width: 1
    height: 4
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "59505dfd3438316c10001e47"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: true
  linked_teleporter_region: "59505e053438316c10001e48"
  teleport_facing: 6
  teleport_sound_fx: "ChiCast_BuffStart"
  teleport_sound_volume: 0.75
  teleport_source_fx: ""
  teleport_destination_fx: ""
  teleport_pc_only: true
  teleport_fade_time: 0
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "rNode3_ALT"
  position {
    x: 189
    y: 20
    width: 1
    height: 4
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "59505e053438316c10001e48"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: true
  linked_teleporter_region: "59505dfd3438316c10001e47"
  teleport_facing: 2
  teleport_sound_fx: "ChiCast_BuffStart"
  teleport_sound_volume: 0.75
  teleport_source_fx: ""
  teleport_destination_fx: ""
  teleport_pc_only: true
  teleport_fade_time: 0
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "rSecretaryGreeting"
  position {
    x: 218
    y: 69
    width: 7
    height: 4
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "59507bc83438313008002163"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "rTripline_Public"
  position {
    x: 200
    y: 68
    width: 4
    height: 2
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "59517ad7343831f416005e1e"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "rTripline_Voicemail"
  position {
    x: 173
    y: 28
    width: 8
    height: 2
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "595184ce343831f416005e3e"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
regions {
  name: "rTripline_Private"
  position {
    x: 170
    y: -11
    width: 15
    height: 3
  }
  enabledAtStart: true
  is_camera_region: false
  is_matrix_node: false
  is_vfx_fill_region: false
  idRef {
    id: "5951d6f0343831f416005e4c"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
  combat_intense_music: ""
  combat_wrapup_music: ""
  loop_combat_intense_music: true
  loop_combat_wrapup_music: true
  combat_intense_threshold: 5
  combat_wrapup_threshold: 2
  combat_fade_interval: 2
  combat_intro_stinger: ""
  combat_outro_stinger: ""
  vfx_fill_prefab_name: ""
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 50
    y: 0
    z: 54
  }
  orientation: ORIENTATION_S
  displayName: "BaronInABox"
  idRef {
    id: "8eaf881a3030314413001908"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Objects/InvisibleActor"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: -49
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
        cyberware_affinity: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Samedi"
    char_name: "Baron Samedi"
    pc_spawn_number: -1
    portrait {
      filename: "NPC_HumanMale_BaronSamedi"
    }
    karma: 6
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 68
    y: 0
    z: 55
  }
  orientation: ORIENTATION_W
  GeneralTags: "isGuard"
  GeneralTags: "isWave3"
  displayName: "6"
  idRef {
    id: "8ee4e9853030314413001935"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarMage"
    character_sheet_id: "Errant_Lv5_Human_Mage"
    equipment_sheet_id: "Errant_Lv5_Spellcasting"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
        cyberware_affinity: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "gumbo_Mage"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "Pi 1 Fichetti Security 500"
    }
    equipment {
      prefab_name: "Spell Powerbolt 2"
    }
    team_id: "LoneStar"
    char_name: "Lonestar Mage"
    GeneralTags: "isGuard"
    GeneralTags: "isWave3"
    enabled_at_start: true
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 103
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 69
    y: 0
    z: 50
  }
  orientation: ORIENTATION_W
  GeneralTags: "isGuard"
  GeneralTags: "isWave2"
  displayName: "1"
  idRef {
    id: "8ef1bd56303031441300193d"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/TrollMaleLoneStarHeavyGuard"
    character_sheet_id: "Errant_Lv4_Heavy_Explosive"
    equipment_sheet_id: "Errant_Lv4_Explosive"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
        cyberware_affinity: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "gumbo_Soldier"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Lonestar Heavy Gunner"
    GeneralTags: "isGuard"
    GeneralTags: "isWave2"
    enabled_at_start: true
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 92
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 78
    y: 0
    z: 19
  }
  orientation: ORIENTATION_N
  GeneralTags: "isCamera"
  displayName: "Security Camera 1"
  idRef {
    id: "8f0dfc763030314413001945"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    dummyInteraciton {
    }
  }
  lod: 0
  character_instance {
    prefab_name: "SecurityCam"
    character_sheet_id: "Camera"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Non-Combatant"
    }
    team_id: "Civilians"
    char_name: "Security Camera 1"
    GeneralTags: "isCamera"
    pc_spawn_number: -1
    ai_ignores: true
    uninjurable: true
    portrait {
      filename: ""
    }
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 72
    y: 0
    z: 1.4
  }
  orientation: ORIENTATION_E
  GeneralTags: "isCamera"
  displayName: "Security Camera 2"
  idRef {
    id: "8f0e30d03030314413001946"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    dummyInteraciton {
    }
  }
  lod: 0
  character_instance {
    prefab_name: "SecurityCam"
    character_sheet_id: "Camera"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Non-Combatant"
    }
    team_id: "Civilians"
    char_name: "Security Camera 2"
    GeneralTags: "isCamera"
    pc_spawn_number: -1
    ai_ignores: true
    uninjurable: true
    portrait {
      filename: ""
    }
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 69
    y: 0
    z: 52
  }
  orientation: ORIENTATION_W
  GeneralTags: "isGuard"
  GeneralTags: "isWave3"
  displayName: "3"
  idRef {
    id: "8f7986a13030312c12007e03"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Errant_Lv5_Captain"
    equipment_sheet_id: "Errant_Lv5_Captain"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
        cyberware_affinity: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Lonestar Guard"
    GeneralTags: "isGuard"
    GeneralTags: "isWave3"
    enabled_at_start: true
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 114
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 69
    y: 0
    z: 53
  }
  orientation: ORIENTATION_W
  GeneralTags: "isGuard"
  GeneralTags: "isWave3"
  displayName: "4"
  idRef {
    id: "8f798ca03030312c12007e04"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Errant_Lv4_Ork_Shotgun"
    equipment_sheet_id: "Errant_Lv4_Shotgun"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
        cyberware_affinity: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "gumbo_Soldier"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "HealthPack"
    }
    team_id: "LoneStar"
    char_name: "Lonestar Guard"
    GeneralTags: "isGuard"
    GeneralTags: "isWave3"
    enabled_at_start: true
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 82
  }
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: 70
    y: 0
    z: 22
  }
  orientation: ORIENTATION_S
  idRef {
    id: "445294f930303160150082b9"
  }
  lod: 0
  character_instance {
    character_mod {
      archetypeName: "Player"
    }
    team_id: "Shadowrunners"
    char_name: "New Actor"
    pc_spawn_number: 0
  }
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: 69
    y: 0
    z: 22
  }
  orientation: ORIENTATION_S
  idRef {
    id: "4782860b3030310016007e8d"
  }
  lod: 0
  character_instance {
    character_mod {
      archetypeName: "Player"
    }
    team_id: "Shadowrunners"
    char_name: "New Actor"
    pc_spawn_number: 1
  }
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: 70
    y: 0
    z: 21
  }
  orientation: ORIENTATION_S
  idRef {
    id: "47828b8e3030310016007e8e"
  }
  lod: 0
  character_instance {
    character_mod {
      archetypeName: "Player"
    }
    team_id: "Shadowrunners"
    char_name: "New Actor"
    pc_spawn_number: 3
  }
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: 69
    y: 0
    z: 21
  }
  orientation: ORIENTATION_S
  idRef {
    id: "478291a33030310016007e8f"
  }
  lod: 0
  character_instance {
    character_mod {
      archetypeName: "Player"
    }
    team_id: "Shadowrunners"
    char_name: "New Actor"
    pc_spawn_number: 2
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 49
    y: 0
    z: 54
  }
  orientation: ORIENTATION_S
  displayName: "ThomasInABox"
  idRef {
    id: "51ab9bfc303031d81100129a"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Objects/InvisibleActor"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: -49
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
        cyberware_affinity: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Samedi"
    char_name: "Thomas Telestrian"
    pc_spawn_number: -1
    portrait {
      filename: "backer_humanmale_davidjarl"
    }
    karma: 6
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 170
    y: 0
    z: 51
  }
  orientation: ORIENTATION_S
  displayName: "DataStoreActor"
  idRef {
    id: "51afc18e303031540f004dd6"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Objects/InvisibleActor"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Non-Combatant"
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Data Store"
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    dimension_name: "Matrix"
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 170
    y: 0
    z: 52
  }
  orientation: ORIENTATION_S
  displayName: "Personal Correspondence Actor"
  idRef {
    id: "51afc194303031540f004dd7"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Objects/InvisibleActor"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Non-Combatant"
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Personal Correspondence Archive"
    pc_spawn_number: -1
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 171
    y: 0
    z: 52
  }
  orientation: ORIENTATION_S
  displayName: "Voice Log Actor"
  idRef {
    id: "51afc197303031540f004dd8"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Objects/InvisibleActor"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Non-Combatant"
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Voice Log"
    pc_spawn_number: -1
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 68
    y: 0
    z: 57
  }
  orientation: ORIENTATION_W
  GeneralTags: "isGuard"
  GeneralTags: "isWave3"
  displayName: "8"
  idRef {
    id: "51b8a894303031b00900395b"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Errant_Lv5_Captain"
    equipment_sheet_id: "Errant_Lv5_Captain"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
        cyberware_affinity: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "gumbo_Soldier_Boss"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Lonestar Guard"
    GeneralTags: "isGuard"
    GeneralTags: "isWave3"
    enabled_at_start: true
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 114
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 68
    y: 0
    z: 54
  }
  orientation: ORIENTATION_W
  GeneralTags: "isElevatorRenoforcement"
  GeneralTags: "isGuard"
  GeneralTags: "isWave3"
  displayName: "5"
  idRef {
    id: "51b8a9d5303031b00900395e"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/TrollMaleLoneStarHeavyGuard"
    character_sheet_id: "Errant_Lv5_Heavy_Explosive"
    equipment_sheet_id: "Errant_Lv5_Explosive"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
        cyberware_affinity: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "gumbo_Soldier_Boss"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Telestrian Heavy Guard"
    GeneralTags: "isElevatorRenoforcement"
    GeneralTags: "isGuard"
    GeneralTags: "isWave3"
    enabled_at_start: true
    pc_spawn_number: -1
    karma: 101
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 68
    y: 0
    z: 56
  }
  orientation: ORIENTATION_W
  GeneralTags: "isElevatorRenoforcement"
  GeneralTags: "isGuard"
  GeneralTags: "isWave3"
  displayName: "7"
  idRef {
    id: "51b8a9eb303031b00900395f"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/TrollMaleLoneStarHeavyGuard"
    character_sheet_id: "Errant_Lv5_Ork_Shotgun"
    equipment_sheet_id: "Errant_Lv5_Shotgun"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
        cyberware_affinity: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "gumbo_Soldier_Boss"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Telestrian Heavy Guard"
    GeneralTags: "isElevatorRenoforcement"
    GeneralTags: "isGuard"
    GeneralTags: "isWave3"
    enabled_at_start: true
    pc_spawn_number: -1
    karma: 92
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 69
    y: 0
    z: 51
  }
  orientation: ORIENTATION_W
  GeneralTags: "isGuard"
  GeneralTags: "isWave2"
  displayName: "2"
  idRef {
    id: "51ba56aa303031f40f00393d"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/ElfFemale"
    character_sheet_id: "Adept_Lv4_Melee"
    equipment_sheet_id: "Adept_Lv4_Melee_Gear"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
        cyberware_affinity: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "gumbo_Adept"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AdeptStealth"
    }
    equipment {
      prefab_name: "Mystic Armor"
    }
    equipment {
      prefab_name: "Counterstrike 1"
    }
    equipment {
      prefab_name: "Mana Fist"
    }
    team_id: "LoneStar"
    char_name: "Lonestar Adept"
    GeneralTags: "isGuard"
    GeneralTags: "isWave2"
    enabled_at_start: true
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    portrait_code_override: "s4h2c3"
    karma: 149
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 171
    y: 0
    z: 69
  }
  orientation: ORIENTATION_S
  GeneralTags: "isIC_Public"
  displayName: "IC_CameraNode1"
  idRef {
    id: "51cdd4c830303180090024fe"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_Ranged"
    character_sheet_id: "IC_Lv5_White_Ranged"
    equipment_sheet_id: "IC White Ranged High"
    character_mod {
      stats {
        hp: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_IC_Soldier"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "MatrixIC"
    char_name: "White IC"
    GeneralTags: "isIC_Public"
    enabled_at_start: true
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    karma: 47
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 171
    y: 0
    z: 70
  }
  orientation: ORIENTATION_S
  GeneralTags: "isIC_Public"
  displayName: "IC_CameraNode2"
  idRef {
    id: "51cdd4d330303180090024ff"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_Melee"
    character_sheet_id: "IC_Lv5_White_Melee"
    equipment_sheet_id: "IC White Melee Lv5 Gear"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
        cyberware_affinity: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "gumbo_IC_Soldier"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "MatrixIC"
    char_name: "White IC"
    GeneralTags: "isIC_Public"
    enabled_at_start: true
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    karma: 47
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 173
    y: 0
    z: 69
  }
  orientation: ORIENTATION_S
  GeneralTags: "isIC_Voicemail"
  GeneralTags: "isIC_Voicemail1"
  displayName: "IC_LogNode_Ranged_2"
  idRef {
    id: "51ce16a5303031000d000190"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_Ranged"
    character_sheet_id: "IC_Lv5_White_Ranged"
    equipment_sheet_id: "IC White Ranged High"
    character_mod {
      stats {
        hp: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_IC_Soldier"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "MatrixIC"
    char_name: "White IC"
    GeneralTags: "isIC_Voicemail"
    GeneralTags: "isIC_Voicemail1"
    enabled_at_start: true
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    karma: 47
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 173
    y: 0
    z: 71
  }
  orientation: ORIENTATION_S
  GeneralTags: "isIC_Voicemail"
  GeneralTags: "isIC_Voicemail1"
  displayName: "IC_LogNode_Ranged_1"
  idRef {
    id: "51ce16b0303031000d000191"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_Melee"
    character_sheet_id: "IC_Lv5_White_Melee"
    equipment_sheet_id: "IC White Melee Lv5 Gear"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
        cyberware_affinity: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "gumbo_IC_Soldier"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "MatrixIC"
    char_name: "White IC"
    GeneralTags: "isIC_Voicemail"
    GeneralTags: "isIC_Voicemail1"
    enabled_at_start: true
    pc_spawn_number: -1
    spawn_type: SpawnType_Normal
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    karma: 47
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 174
    y: 0
    z: 70
  }
  orientation: ORIENTATION_S
  GeneralTags: "isIC_Voicemail"
  GeneralTags: "isIC_Voicemail2"
  displayName: "IC_LogNode_Laser1"
  idRef {
    id: "51ce16f5303031000d000192"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_goldLaser"
    character_sheet_id: "IC_Lv5_White_ChargeLaser"
    equipment_sheet_id: "IC White ChargeLaser Lv5 Gear"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
        cyberware_affinity: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "gumbo_IC_Laser"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "MatrixIC"
    char_name: "White Sparky IC"
    GeneralTags: "isIC_Voicemail"
    GeneralTags: "isIC_Voicemail2"
    enabled_at_start: true
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    karma: 39
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 173
    y: 0
    z: 70
  }
  orientation: ORIENTATION_S
  GeneralTags: "isIC_Voicemail"
  GeneralTags: "isIC_Voicemail1"
  displayName: "IC_CallLogMelee"
  idRef {
    id: "51ce19ff303031a40800012a"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_Ranged"
    character_sheet_id: "IC_Lv5_White_Ranged"
    equipment_sheet_id: "IC White Melee High"
    character_mod {
      stats {
        hp: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_IC_Soldier"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "MatrixIC"
    char_name: "White IC"
    GeneralTags: "isIC_Voicemail"
    GeneralTags: "isIC_Voicemail1"
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    karma: 47
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 174
    y: 0
    z: 69
  }
  orientation: ORIENTATION_S
  GeneralTags: "isIC_Voicemail"
  GeneralTags: "isIC_Voicemail2"
  displayName: "IC_LogNode_Support1"
  idRef {
    id: "51ce1e1e303031a40800012d"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_goldRanged"
    character_sheet_id: "IC_Lv5_White_Ranged"
    equipment_sheet_id: "IC White Ranged Lv5 Gear"
    character_mod {
      stats {
        hp: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_IC_Soldier"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "MatrixIC"
    char_name: "White Sentry IC"
    GeneralTags: "isIC_Voicemail"
    GeneralTags: "isIC_Voicemail2"
    enabled_at_start: true
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    karma: 47
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 172
    y: 0
    z: 73
  }
  orientation: ORIENTATION_S
  GeneralTags: "isIC_Private"
  idRef {
    id: "51ce1e92303031a40800012e"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_goldMelee"
    character_sheet_id: "IC_Lv5_White_Melee"
    equipment_sheet_id: "IC White Melee Lv5 Gear"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
        cyberware_affinity: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "gumbo_IC_Soldier"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "MatrixIC"
    char_name: "White Sentry IC"
    GeneralTags: "isIC_Private"
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    karma: 47
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 171
    y: 0
    z: 74
  }
  orientation: ORIENTATION_S
  GeneralTags: "isIC_Private"
  idRef {
    id: "51ce1ecc303031a40800012f"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_blackRanged"
    character_sheet_id: "IC_Lv4_Black_Ranged"
    equipment_sheet_id: "IC Black Ranged Mid"
    character_mod {
      stats {
        hp: 0
        morale: 24
        discipline: 24
        awareness: 24
        perception: 0
        authority: 0
        protect_tether_range: 5
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_IC_Soldier"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "MatrixIC"
    char_name: "Black IC"
    GeneralTags: "isIC_Private"
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    karma: 47
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 171
    y: 0
    z: 73
  }
  orientation: ORIENTATION_S
  GeneralTags: "isIC_Private"
  idRef {
    id: "51ce2650303031a408000183"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_Ranged"
    character_sheet_id: "IC_Lv5_White_Ranged"
    equipment_sheet_id: "IC White Ranged High"
    character_mod {
      stats {
        hp: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_IC_Soldier"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "MatrixIC"
    char_name: "White IC"
    GeneralTags: "isIC_Private"
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    karma: 47
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 172
    y: 0
    z: 74
  }
  orientation: ORIENTATION_S
  GeneralTags: "isIC_Private"
  idRef {
    id: "51ce2654303031a408000184"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_blackTank"
    character_sheet_id: "IC_Lv4_Black_Tank"
    equipment_sheet_id: "IC Black Tank Lv4 Gear"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
        cyberware_affinity: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "gumbo_MatrixTank"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "MatrixIC"
    char_name: "White IC"
    GeneralTags: "isIC_Private"
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    karma: 47
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 230
    y: 0
    z: -16
  }
  orientation: ORIENTATION_N
  GeneralTags: "isIC_Elevator"
  displayName: "IC_ElevatorNode_WhiteRanged_1"
  idRef {
    id: "51ce2f23303031a4080001a9"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_goldRanged"
    character_sheet_id: "IC_Lv5_White_Ranged"
    equipment_sheet_id: "IC White Ranged High"
    character_mod {
      stats {
        hp: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_IC_Soldier"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "MatrixIC"
    char_name: "White IC"
    GeneralTags: "isIC_Elevator"
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    karma: 47
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 222
    y: 0
    z: -8
  }
  orientation: ORIENTATION_E
  GeneralTags: "isIC_Elevator"
  displayName: "IC_ElevatorNode_Sentry_1"
  idRef {
    id: "51ce3236303031a408000215"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_goldMelee"
    character_sheet_id: "IC_Lv5_White_Melee"
    equipment_sheet_id: "IC White Melee Lv5 Gear"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
        cyberware_affinity: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "gumbo_IC_Soldier"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "MatrixIC"
    char_name: "White Sentry IC"
    GeneralTags: "isIC_Elevator"
    enabled_at_start: true
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    karma: 47
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 224
    y: 0
    z: -29
  }
  orientation: ORIENTATION_E
  GeneralTags: "isIC_Elevator"
  displayName: "IC_ElevatorNode_Melee_1"
  idRef {
    id: "51ce323b303031a408000216"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_goldLaser"
    character_sheet_id: "IC_Lv5_White_ChargeLaser"
    equipment_sheet_id: "IC White ChargeLaser Lv5 Gear"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
        cyberware_affinity: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "gumbo_IC_Laser"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "MatrixIC"
    char_name: "White IC"
    GeneralTags: "isIC_Elevator"
    enabled_at_start: true
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    karma: 39
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 214
    y: 0
    z: -24
  }
  orientation: ORIENTATION_S
  GeneralTags: "isIC_Elevator"
  displayName: "IC_ElevatorNode_Melee_2"
  idRef {
    id: "51ce32ba303031a40800021a"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_goldSupport"
    character_sheet_id: "IC_Lv5_White_Melee"
    equipment_sheet_id: "IC White Melee Lv5 Gear"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
        cyberware_affinity: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "gumbo_IC_Soldier"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "MatrixIC"
    char_name: "White IC"
    GeneralTags: "isIC_Elevator"
    enabled_at_start: true
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    karma: 47
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 172
    y: 0
    z: 64
  }
  orientation: ORIENTATION_E
  GeneralTags: "isHeatIC"
  displayName: "Alarm Decker 1"
  idRef {
    id: "51d245783030316417007740"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/HumanMale"
    character_sheet_id: "Persona_Lv5_Decker"
    equipment_sheet_id: "NPC Decker High"
    character_mod {
      stats {
        hp: 0
        morale: 24
        discipline: 0
        awareness: 24
        perception: 0
        authority: 0
        protect_tether_range: 5
        move_speed: 6
      }
      skills {
      }
      specializations {
      }
      vulnerabilities {
      }
    }
    team_id: "MatrixIC"
    char_name: "Telestrian Decker"
    GeneralTags: "isHeatIC"
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    karma: 78
    has_fist: false
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 226
    y: 0
    z: 28
  }
  orientation: ORIENTATION_N
  GeneralTags: "isIC_ALT"
  displayName: "Alarm Decker 2"
  idRef {
    id: "51d2457b3030316417007741"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/HumanMale"
    character_sheet_id: "Persona_Lv5_Decker"
    equipment_sheet_id: "NPC Decker High"
    character_mod {
      stats {
        hp: 0
        morale: 24
        discipline: 0
        awareness: 24
        perception: 0
        authority: 0
        protect_tether_range: 5
        move_speed: 6
      }
      skills {
      }
      specializations {
      }
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Telestrian Decker"
    GeneralTags: "isIC_ALT"
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: "Matrix_humanmale_alnur"
    }
    portrait_code_override: "s1h4c6b0t0"
    dimension_name: "Matrix"
    karma: 78
    has_fist: false
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 219
    y: 0
    z: 70
  }
  orientation: ORIENTATION_S
  GeneralTags: "isSecretary"
  displayName: "DigitalSecretary"
  idRef {
    id: "595077dd3438316c10001e81"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/ElfFemale"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
        cyberware_affinity: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "Corporate Salaryman"
    }
    team_id: "Samedi"
    char_name: "Aventai"
    GeneralTags: "isSecretary"
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: "Matrix_elffemale_absinthe"
    }
    portrait_code_override: "s5h12c1b0t0"
    dimension_name: "Matrix"
    karma: 6
    is_prop_character: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 171
    y: 0
    z: 51
  }
  orientation: ORIENTATION_S
  displayName: "Voice Actor"
  idRef {
    id: "5951e8a1343831f416005ea0"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Objects/InvisibleActor"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Non-Combatant"
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "CEO LAN Access Point"
    pc_spawn_number: -1
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 172
    y: 0
    z: 66
  }
  orientation: ORIENTATION_W
  GeneralTags: "isHeatIC"
  displayName: "Alarm Decker 3"
  idRef {
    id: "5951e8fe343831f416005ea1"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/HumanMale"
    character_sheet_id: "Persona_Lv5_Decker"
    equipment_sheet_id: "NPC Decker High"
    character_mod {
      stats {
        hp: 0
        morale: 24
        discipline: 0
        awareness: 24
        perception: 0
        authority: 0
        protect_tether_range: 5
        move_speed: 6
      }
      skills {
      }
      specializations {
      }
      vulnerabilities {
      }
    }
    team_id: "MatrixIC"
    char_name: "Telestrian Decker"
    GeneralTags: "isHeatIC"
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    karma: 78
    has_fist: false
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 220
    y: 0
    z: 19
  }
  orientation: ORIENTATION_E
  GeneralTags: "isIC_ALT"
  displayName: "IC_ElevatorNode_WhiteRanged_1"
  idRef {
    id: "5951e9b3343831f416005ea2"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_goldRanged"
    character_sheet_id: "IC_Lv5_White_Ranged"
    equipment_sheet_id: "IC White Ranged High"
    character_mod {
      stats {
        hp: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "gumbo_IC_Soldier"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "White IC"
    GeneralTags: "isIC_ALT"
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    karma: 47
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 220
    y: 0
    z: 37
  }
  orientation: ORIENTATION_W
  GeneralTags: "isIC_ALT"
  displayName: "IC_ElevatorNode_Melee_1"
  idRef {
    id: "5951e9b8343831f416005ea3"
  }
  lod: 0
  character_instance {
    prefab_name: "HongKong:Matrix/MatrixIC_goldLaser"
    character_sheet_id: "IC_Lv5_White_ChargeLaser"
    equipment_sheet_id: "IC White ChargeLaser Lv5 Gear"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
        cyberware_affinity: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "gumbo_IC_Laser"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "White IC"
    GeneralTags: "isIC_ALT"
    enabled_at_start: true
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
    karma: 39
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "RoundsPassed"
    typeName: "int"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "isMainElevatorOpen"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "isExecElevatorOpen"
    typeName: "bool"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "MatrixRoundsPassed"
    typeName: "int"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "isBaronExitConvoDone"
    typeName: "bool"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "numSecCam2NodeICDead"
    typeName: "int"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "numLogNodeICDead"
    typeName: "int"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "hasTheBaronGotTheLog"
    typeName: "bool"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "numHubICDead"
    typeName: "int"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "numTrustICDead"
    typeName: "int"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "hasIntialBaddiesRan"
    typeName: "bool"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "numCOncernNodeICDead"
    typeName: "int"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "numElevatorNodeICDead"
    typeName: "int"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "CriticalMatrixObjectiveCount"
    typeName: "int"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "hasSeenVPConsole"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "hasTelestrianTrustBeenSeen"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "hasHackedElevators"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "isElevatorFade"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "isBaronIntroConvoDone"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "alreadyToldToGetMoreData"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "hasTalkedToSamediAtVPPanelAlready"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "hasTalkedToBaronAboutBaddies"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "hasFinalWaveSpawned"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "bDronePresent"
    typeName: "bool"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "iGuardsKilled"
    typeName: "int"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "bAltPathOpen"
    typeName: "bool"
  }
}
variables {
  string_value: "{{FFD700}}"
  variableref_value {
    scope: TsVariableScope_Scene
    name: "sCrewHighlight"
    typeName: "string"
  }
}
variables {
  string_value: "{{-}}"
  variableref_value {
    scope: TsVariableScope_Scene
    name: "sCrewClose"
    typeName: "string"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "iIC_VoicemailKilled"
    typeName: "int"
  }
}
variables {
  bool_value: true
  variableref_value {
    scope: TsVariableScope_Scene
    name: "bDoorsAvailable"
    typeName: "bool"
  }
}
variables {
  string_value: ""
  variableref_value {
    scope: TsVariableScope_Scene
    name: "sCEOComment"
    typeName: "string"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "iCEOComment"
    typeName: "int"
  }
}
mapEvents: "CheckForHeatBaddies"
mapEvents: "firstCamNode2Enter"
mapEvents: "CheckForCriticalObjectives"
mapEvents: "eSmashDoor"
mapEvents: "eSetupAmbush"
mapEvents: "eGatherParty"
mapEvents: "eCEOComment"
senseTags: "canUseExecElevator"
senseTags: "isAvatar"
senseTags: "isICHubNode"
senseTags: "isHeatBaddie"
senseTags: "isICConcernNode"
senseTags: "isIC_CameraNode"
senseTags: "isIC_LetterNode"
senseTags: "isICElevatorNode"
goals {
  name: "Regain Control of the Elevators in the Matrix"
  type: GoalType_Primary
  status: GoalStatus_Hidden
}
goals {
  name: "Search the CEO\342\200\231s LAN on the Top Floor"
  type: GoalType_Primary
  status: GoalStatus_Started
}
goals {
  name: "Find the Aegis Sample"
  type: GoalType_Primary
  status: GoalStatus_Started
}
goals {
  name: "Gain Access to Eric Silverstar\'s Office"
  type: GoalType_Primary
  status: GoalStatus_Hidden
}
goals {
  name: "You are dead"
  type: GoalType_Primary
  status: GoalStatus_Hidden
}
goals {
  name: "Have at Least one Runner Able to Deck Until You Have the Information You Need"
  type: GoalType_Primary
  status: GoalStatus_Started
}
worldMapLocation {
  filename: ""
  location {
    x: 0
    y: 0
  }
}
mapName: "c14-s2_TelestrianTopFloor"
parentStory: ""
scene_title: "EXECUTIVE ACTIONS"
scene_subtitle: ""
scene_synopsis: "Crowding into a corporate elevator on a shadowrun is risky. You\342\200\231re exposed. Vulnerable. But time is of the essence, the CEO\342\200\231s office is fifty floors up, and the Baron has your back - in theory.\n\nLight, blanderized music flows softly from hidden speakers as you make your way up to James Telestrian\342\200\231s office and towards your objective - a sample of Project Aegis.\n\nYou need to find the sample and get out before the Baron loses control of the Telestrian mainframe and all hell breaks loose."
scene_image: "loadingImage_c14-s2"
scene_continue_button_skip: false
scene_restore_runner_health: false
directional_light_dir {
  x: -0.7
  y: -0.9
  z: -0.5
}
directional_light_color {
  r: 0.0627451
  g: 0.019607844
  b: 0.38431373
}
ambient_light_color {
  r: 0.54509807
  g: 0.48235294
  b: 0.47058824
  a: 0.58823532
}
allow_drawn_weapons: false
team_affiliations {
  team_name: "Shadowrunners"
  affiliation: 0
  affiliation: 1
  affiliation: 1
  affiliation: 0
  affiliation: 0
  affiliation: 1
  affiliation: 1
  affiliation: 1
}
team_affiliations {
  team_name: "MatrixBaddies"
  affiliation: 1
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
}
team_affiliations {
  team_name: "LoneStar"
  affiliation: 0
  affiliation: 1
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
}
team_affiliations {
  team_name: "Civilians"
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
}
team_affiliations {
  team_name: "Samedi"
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
}
team_affiliations {
  team_name: "TurnEnforcer"
  affiliation: 1
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
}
team_affiliations {
  team_name: "MatrixIC"
  affiliation: 1
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
}
team_affiliations {
  team_name: "IC_Switch"
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
}
scene_dimensions {
  dimension_name: "Default"
}
scene_dimensions {
  dimension_name: "Matrix"
  initial_alarm_state: 3
  turns_per_round: 2
  is_matrix: true
  max_alarm_value: 100
}
combat_music: "Seattle-Set9-Combat"
matrix_music: "Seattle-Set8-Stealth"
character_roster {
}
show_hiring_screen_on_scene_load: true
scene_hiring_prerequisites {
  prereq_description: ""
  prereq_conditions {
  }
}
hiring_slot_count: 3
hiring_minimum_karma: 5
hiring_maximum_karma: 5
roster_overrides {
  roster_entries {
    reference_id: "crew_lv5_bartlett"
    hiring_conditions {
    }
    hiring_cost: -1
    content_pack_source: "57084f7c6631365c1600767e"
  }
  roster_entries {
    reference_id: "crew_lv5_coyote"
    hiring_conditions {
    }
    hiring_cost: -1
    content_pack_source: "57084f7c6631365c1600767e"
  }
  roster_entries {
    reference_id: "crew_lv5_seamus"
    hiring_conditions {
    }
    hiring_cost: -1
    content_pack_source: "57084f7c6631365c1600767e"
  }
  roster_entries {
    reference_id: "crew_lv5_paco"
    hiring_conditions {
    }
    hiring_cost: -1
    content_pack_source: "57084f7c6631365c1600767e"
  }
  roster_entries {
    reference_id: "crew_lv5_river"
    hiring_conditions {
    }
    hiring_cost: -1
    content_pack_source: "57084f7c6631365c1600767e"
  }
  roster_entries {
    reference_id: "crew_lv5_violet"
    hiring_conditions {
    }
    hiring_cost: -1
    content_pack_source: "57084f7c6631365c1600767e"
  }
}
use_hiring_cost_warning: false
hiring_average_cost: 0
override_hiring_average_cost: false
show_equip_screen_on_scene_load: false
is_persistant: false
is_persistant_has_value: false
can_move_outside_camera_regions: false
can_start_before_triggers: true
can_use_team_advancement: false
