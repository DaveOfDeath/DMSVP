triggers {
  name: "Setup"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "seattle"
          }
          args {
            string_value: "c12_Begun"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Investigate Mercy Mental Hospital"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Animation State Of Actor To Animation Modifier"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "AnimationState"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "51c4d958623331881e004db8"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (AnimationModifiers)"
          args {
            string_value: "cower"
          }
          args {
            string_value: "cower"
          }
        }
      }
    }
    ops {
      functionName: "Set Animation State Of Actor To Animation Modifier"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "AnimationState"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "51c4e017623331a419006df2"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (AnimationModifiers)"
          args {
            string_value: "btltweaking"
          }
          args {
            string_value: "btltweaking"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "cc0f49fe623331a006006788"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "OpenDoor"
  events {
    ops {
      functionName: "On Conversation Complete"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "FrontDesk"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Force-Use Interactable Object (Basic)"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "f9d5954c623331a412004b10"
          }
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Look Around Before Holmes Arrives"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "f9d3daae623331a412004b0d"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "BugFrontDesk"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "cc0709aa623331a006006787"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "FrontDesk"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Lockdown"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  actions {
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "cc0709aa623331a006006787"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "He will be with you in a moment."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
      }
    }
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "cc0709aa623331a006006787"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "fde8cb4d623331741b002d42"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "GuardKilled"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "196d6d87623331f417001a37"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "51ace0db623331c813002cf8"
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "196d6d87623331f417001a37"
              }
            }
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "196c009b623331f417001a34"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "FindSecurityKey"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "51ace0db623331c813002cf8"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "SecurityKey"
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  isActive: true
  idRef {
    id: "196f3e02623331f417001a38"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "InspectArm"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "195e7e14623331f417001a33"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "197c775d623331f417001a39"
          }
        }
      }
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "FoundArm"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "isLookingForArm"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "1d77f1f5623331381f002ce2"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "InspectComputer"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "1d5a39b56233312003002ce1"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Start Conversation Between Actors"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "1d78dbae623331381f002ce4"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "21df525d6233319c1f0018c5"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "1d78a81a623331381f002ce3"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "BugPatient2"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "19038f046233318c0a0069ea"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "InfirmaryKey"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "FoundArm"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  actions {
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "19038f046233318c0a0069ea"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "I\'ll be here."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
      }
    }
  }
  isActive: true
  idRef {
    id: "1dbb39de623331301d00605b"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "RedAlert"
  events {
    ops {
      functionName: "On Conversation Complete"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "hasConfrontedHolmes"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Lockdown"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "feccf4db62333178110018c2"
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "fec871d66233319c0f0019e2"
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "fecd083062333178110018c4"
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "fec886e66233319c0f0019e3"
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "fecd182362333178110018c6"
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "feca884862333178110018bf"
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "7ad023ce303633c00c0075c2"
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "6b84084d3036332c09005774"
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "7ad32bc3303633c00c0075c7"
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "7ad27e7b303633c00c0075c6"
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "7ad46cf2303633c00c0075c9"
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "7ad3f28b303633c00c0075c8"
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Add Item to Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "Pi 1 Fichetti Security 500"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "196d6d87623331f417001a37"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "196d6d87623331f417001a37"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
      }
    }
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "1dfe955c62333104190019d3"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
      }
    }
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "21df525d6233319c1f0018c5"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Set Priority Target"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "196d6d87623331f417001a37"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Random Actor on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
    }
    ops {
      functionName: "Force-Use Interactable Object (Basic)"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "f9d5954c623331a412004b10"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Move To (Region)"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "cc0709aa623331a006006787"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "2253f219623331281e0072af"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 3
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "f90c4228623331f4130018c2"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "19038f046233318c0a0069ea"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "cc0709aa623331a006006787"
          }
        }
      }
    }
    ops {
      functionName: "Force-Use Interactable Object (Basic)"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "b1d0fff562333150390001ec"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "InfirmaryKey"
          }
        }
      }
      args {
        int_value: 0
      }
    }
    ops {
      functionName: "Delete Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "6b8430d53036332c09005776"
          }
        }
      }
    }
    ops {
      functionName: "Delete Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "6b8421ed3036332c09005775"
          }
        }
      }
    }
    ops {
      functionName: "Delete Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "62ac0d75303633480300155c"
          }
        }
      }
    }
    ops {
      functionName: "Delete Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "62c68bff3036334803001597"
          }
        }
      }
    }
    ops {
      functionName: "Delete Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "62c69a903036334803001598"
          }
        }
      }
    }
    ops {
      functionName: "Delete Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "7addaf70303633c00c0075cd"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Move To (Region)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "51ace301623331c813002cfa"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "51ad0b0a623331c813002f41"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 7
          }
        }
      }
    }
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "props"
          }
          args {
            string_value: "Alarm2"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "fecbfdaf62333178110018c0"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "HackSecurityDoor"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "1dfbe86a62333104190019ce"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Enable/Disable Manual Turn Mode"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "6629abd1623331c00b00603b"
          }
        }
      }
    }
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "6629e258623331c00b00603c"
          }
        }
      }
    }
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "51d496ba623331cc090054ed"
          }
        }
      }
    }
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "662a4830623331c00b00603e"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "1dfca07b62333104190019d0"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "GuardWarning"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "22adaa76623331141f006787"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
      }
    }
  }
  actions {
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "196d6d87623331f417001a37"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "Please stay within the cafeteria."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
      }
    }
  }
  isActive: true
  idRef {
    id: "22ad8158623331141f006786"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "GuardAttack"
  events {
    ops {
      functionName: "On Actor Damage"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HPOrAP"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
      }
    }
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
      }
    }
    ops {
      functionName: "Compare Actor Race"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Race"
          }
          args {
            int_value: 8
          }
        }
      }
    }
    ops {
      functionName: "Compare Actor Race"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Race"
          }
          args {
            int_value: 7
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "On the ground, now!"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
      }
    }
  }
  isActive: true
  idRef {
    id: "22b3d014623331141f006788"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "InfirmaryText"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "22c619f36233312c1b0018bf"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
      }
    }
  }
  actions {
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "The stench of blood and mold gets ever stronger as you move closer to the infirmary."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "22c67a4e6233312c1b0018c0"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "TrividText"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "422fb4d3623331d4140018f5"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Display Text over Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "422fb4d3623331d4140018f5"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "You find an unlabeled trivid disc. You have no way of playing back the disc at this time."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
      }
    }
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "422fb4d3623331d4140018f5"
          }
        }
      }
    }
    ops {
      functionName: "Add Item to Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "c12-s1_TrividDisc1"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "422fc528623331d4140018f6"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "MissionFailure"
  events {
    ops {
      functionName: "On Actor Downed"
    }
  }
  conditions {
    ops {
      functionName: "OR"
      args {
        call_value {
          functionName: "Comparison (Actor)"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "IsOrIsNot"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Evaluate Team Survival Percentage"
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Comparison Ops"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            int_value: 100
          }
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Investigate Mercy Mental Hospital"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "4cc53f146233314c150012e2"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "PortalA"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "f6582733623331001700102a"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Actor Has Run Speed"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "RunSpeedMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Add Camera Point of Interest (Actors)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "f6578d126233310017000f56"
              }
            }
          }
        }
      }
      args {
      }
      args {
      }
    }
  }
  isActive: true
  idRef {
    id: "5b5452286233316417006a1d"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "PortalB"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "f6578d126233310017000f56"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Actor Has Run Speed"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "RunSpeedMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Add Camera Point of Interest (Actors)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "f6582733623331001700102a"
              }
            }
          }
        }
      }
      args {
      }
      args {
      }
    }
  }
  isActive: true
  idRef {
    id: "5b5955ee6233316417006a25"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Node1Progress"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "Node1"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Node1"
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  isActive: true
  idRef {
    id: "5b5e16f1623331801600002a"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Node1Progress"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "Node2"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Node2"
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  isActive: true
  idRef {
    id: "f661d73e623331001700103e"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Node1Interact"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "f65b99e16233310017001035"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "BathroomKey"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "Hacked: Bathroom Door Lock"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
      }
    }
    ops {
      functionName: "Set Hack Status On Matrix Node Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HackIndicatorStatus"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "f65b99e16233310017001035"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "f65b99e16233310017001035"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5b5f131c623331801600002e"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Node2Interact"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "f65f71a8623331001700103b"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "Hacked: Private Records Data-store"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
      }
    }
    ops {
      functionName: "Set Hack Status On Matrix Node Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HackIndicatorStatus"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "f65f71a8623331001700103b"
          }
        }
      }
    }
    ops {
      functionName: "Add Item to Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "c12-s1_PayData"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "f65f71a8623331001700103b"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5b5ff600623331801600002f"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "GuardDistracted"
  events {
    ops {
      functionName: "On Conversation Complete"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "InfirmaryKey"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "196d6d87623331f417001a37"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "660ae06d623331c00b005f91"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "660c1c28623331c00b005f92"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "GuardConvo"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "22adaa76623331141f006787"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
      }
    }
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "InfirmaryKey"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "196d6d87623331f417001a37"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "Sure, when are you on break?"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
      }
    }
  }
  isActive: true
  idRef {
    id: "660dbb9f623331c00b005f93"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "GuardAttacks"
  events {
    ops {
      functionName: "On Conversation Complete"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Lockdown"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Order Actor to Move To (Region)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "196d6d87623331f417001a37"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "fec871d66233319c0f0019e2"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 3
          }
        }
      }
    }
    ops {
      functionName: "Suspend Team\'s Turn"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 3
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "67a078dd623331c00b00616d"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "FrontDeskFlees"
  events {
    ops {
      functionName: "On Conversation Complete"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "FrontDeskRunAway"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Order Actor to Move To (Region)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "cc0709aa623331a006006787"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "6625bcad623331c00b00603a"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Suspend Team\'s Turn"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "67cf1efe623331b019007311"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "HolmesArrives"
  events {
    ops {
      functionName: "On Conversation Complete"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "hasReturnedToLorraine"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Look Around Before Holmes Arrives"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Speak to Dr. Holmes"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "51ace301623331c813002cfa"
          }
        }
      }
    }
    ops {
      functionName: "Set Waypoint on Prop"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PrimaryOrSecondary"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "51c0d94e623331200c0016b5"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "51c0d94e623331200c0016b5"
          }
        }
      }
    }
    ops {
      functionName: "Set Actor In Passive Mode"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "51ace301623331c813002cfa"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Add Actor Karma"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        int_value: 2
      }
    }
  }
  isActive: true
  idRef {
    id: "51acd14062333130220030ab"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "DespawnHolmes"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "51ad0b0a623331c813002f41"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "51ace301623331c813002cfa"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Center of Region"
          args {
            call_value {
              functionName: "Get Map Item (Region)"
              args {
                string_value: "51e06bfa623331301400550f"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "51ad0c0f623331c813002f42"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "ConfrontedHolmesAddKarma"
  events {
    ops {
      functionName: "On Conversation Complete"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "hasConfrontedHolmes"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Add Actor Karma"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        int_value: 2
      }
    }
  }
  isActive: true
  idRef {
    id: "51ad2cbf6233311821002ea7"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "HolmesIntercom1"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "51ae5391623331c01100427b"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Trigger: Wait for Motion"
    }
    ops {
      functionName: "Start Conversation Between Actors"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "51e06bac62333130140054df"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "51ace301623331c813002cfa"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "51ae53a3623331c01100427c"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "HolmesWindowInteract"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "51c0d94e623331200c0016b5"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Start Conversation Between Actors"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "51ac82e03236644c1f005fa8"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "51ace301623331c813002cfa"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "51c0d94e623331200c0016b5"
          }
        }
      }
    }
    ops {
      functionName: "Clear All Waypoints"
    }
  }
  isActive: true
  idRef {
    id: "51c0d99b623331200c0016bb"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "LorraineGivesKey"
  events {
    ops {
      functionName: "On Conversation Complete"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "InfirmaryKey"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Add Item to Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "c12-s1_MercyMental_InfirmaryKey"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "51c4a544623331f417001599"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "ShannonHasDied"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isShannon"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "518d7674643431b03f0041ab"
          }
          args {
            string_value: "isShannonDead"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "51d1f1f1623331a416000125"
  }
  elseActions {
  }
  is_oneshot: true
}
regions {
  name: "Redlight1"
  position {
    x: 2
    y: -4
    width: 1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "fec871d66233319c0f0019e2"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 0.88235295
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
}
regions {
  name: "Redlight2"
  position {
    x: 3
    y: 8
    width: 1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "fec886e66233319c0f0019e3"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 0.88235295
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
}
regions {
  name: "Redlight3"
  position {
    x: -4
    y: -4
    width: 1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "feca884862333178110018bf"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 0.88235295
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
}
regions {
  name: "FrontDeskMove"
  position {
    x: 4
    y: -9
    width: 1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "2253f219623331281e0072af"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 0.88235295
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
}
regions {
  name: "Front Guard"
  position {
    x: -1
    y: -5
    width: 10
    height: 5
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "22adaa76623331141f006787"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 0.88235295
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
}
regions {
  name: "Infirmary"
  position {
    x: 15
    y: -14
    width: 8
    height: 6
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "22c619f36233312c1b0018bf"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 0.88235295
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
}
regions {
  name: "CameraBounds"
  position {
    x: -32
    y: -26
    width: 58
    height: 41
  }
  enabledAtStart: true
  is_camera_region: true
  idRef {
    id: "b799e1913036334c100072c6"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.21960784
    g: 0.29803923
    b: 0.14901961
    a: 1
  }
  ambient_light_color {
    r: 0.082352944
    g: 0.070588239
    b: 0.0627451
    a: 0.88235295
  }
  ambience_template: "asylum-quiet"
  combat_music: "Seattle-Set3-Combat"
  default_music: "Seattle-Set3-Legwork"
  loop_combat_music: true
  loop_default_music: true
}
regions {
  name: "YellowPortalB"
  position {
    x: -96
    y: 2
    width: 2
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "f6578d126233310017000f56"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 0.88235295
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
}
regions {
  name: "YellowPortalA"
  position {
    x: -95
    y: -9
    width: 2
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "f6582733623331001700102a"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 0.88235295
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
}
regions {
  name: "New Region"
  position {
    x: -115
    y: -39
    width: 38
    height: 65
  }
  enabledAtStart: true
  is_camera_region: true
  idRef {
    id: "f662992f623331001700103f"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 0.88235295
  }
  ambience_template: ""
  combat_music: "Seattle-Set8-Combat"
  default_music: "Seattle-Set8-Stealth"
  loop_combat_music: true
  loop_default_music: false
}
regions {
  name: "GuardDistracted"
  position {
    x: 2
    y: -6
    width: 1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "660ae06d623331c00b005f91"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 0.88235295
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
}
regions {
  name: "FrontDeskHides"
  position {
    x: -1
    y: -15
    width: -1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "6625bcad623331c00b00603a"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 0.88235295
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
}
regions {
  name: "Redlight4"
  position {
    x: -19
    y: -7
    width: 1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "6b84084d3036332c09005774"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 0.88235295
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
}
regions {
  name: "Redlight5"
  position {
    x: -19
    y: 3
    width: 1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "7ad27e7b303633c00c0075c6"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 0.88235295
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
}
regions {
  name: "Redlight6"
  position {
    x: -13
    y: -4
    width: 1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "7ad3f28b303633c00c0075c8"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 0.88235295
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
}
regions {
  name: "New Region"
  position {
    x: -115
    y: -39
    width: 38
    height: 65
  }
  enabledAtStart: true
  is_camera_region: true
  idRef {
    id: "519fef486331650c140039b4"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  ambient_light_color {
    r: 0.019607844
    g: 0.13725491
    b: 0.19607843
    a: 0.94117647
  }
  ambience_template: ""
  combat_music: ""
  default_music: "Seattle-Set8-MatrixLoop"
  loop_combat_music: false
  loop_default_music: true
}
regions {
  name: "HolmesWindow"
  position {
    x: -6
    y: -5
    width: 5
    height: 5
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "51ace476623331c813002cfd"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 0.88235295
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
}
regions {
  name: "HolmesEscape"
  position {
    x: -5
    y: -12
    width: 1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "51ad0b0a623331c813002f41"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 0.88235295
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
}
regions {
  name: "SquawkBox1"
  position {
    x: -14
    y: -5
    width: 1
    height: 5
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "51ae5391623331c01100427b"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 0.88235295
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
}
regions {
  name: "HolmesEscapeTeleport"
  position {
    x: -16
    y: -21
    width: 1
    height: 1
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "51e06bfa623331301400550f"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 0.88235295
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 2
    y: 0
    z: -12
  }
  orientation: ORIENTATION_W
  GeneralTags: "FrontDesk"
  idRef {
    id: "cc0709aa623331a006006787"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 3
    prerequisites {
      ops {
        functionName: "Comparison (Actor)"
        args {
          call_value {
            functionName: "Active Actor"
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
      }
    }
    conversationPoint {
      conversationID: "f8cb2c6f623331780b0018c8"
      turnToFace: true
    }
  }
  lod: 0
  character_instance {
    prefab_name: "HumanMaleScientistCoat"
    character_sheet_id: "BaseTemplate"
    character_mod {
      stats {
        body: 1
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 6
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        stealth: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_paranormal: 0
        etiquette_socialite: 0
        etiquette_infected: 0
        chi_casting: 0
        drain_resistance: 0
        drone_combat: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        throwing_blades: 0
        spirit_control: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
    }
    team_id: "Inmates"
    char_name: "Receptionist"
    GeneralTags: "FrontDesk"
    pc_spawn_number: -1
    portrait {
      filename: "Backer_HumanMale_JohnMaloney_JohnnyMaloney"
    }
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -1
    y: 0
    z: 8
  }
  orientation: ORIENTATION_N
  idRef {
    id: "f90c4228623331f4130018c2"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    prerequisites {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "Patient1QuestionA"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 0
        }
      }
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "Patient1QuestionB"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 0
        }
      }
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "Patient1QuestionC"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 0
        }
      }
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "Lockdown"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    conversationPoint {
      conversationID: "f8a76498623331780b0018bf"
      turnToFace: true
    }
  }
  lod: 0
  character_instance {
    prefab_name: "Extras/HumanMaleMentalPatientSmock"
    character_sheet_id: "BaseTemplate"
    character_mod {
      stats {
        body: 2
        quickness: 1
        strength: 1
        charisma: 1
        intelligence: 1
        willpower: 1
        essence: 1
        magic: 1
        hp: 0
        ap: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
    }
    team_id: "Inmates"
    char_name: "Donny"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 7
    y: 0
    z: 9
  }
  orientation: ORIENTATION_E
  displayName: "Lorraine"
  idRef {
    id: "19038f046233318c0a0069ea"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    prerequisites {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "hasReturnedToLorraine"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "isLookingForArm"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    conversationPoint {
      conversationID: "1448d35062333184170018cd"
      turnToFace: true
    }
  }
  lod: 0
  character_instance {
    prefab_name: "Extras/HumanFemaleMentalPatientSmock"
    character_sheet_id: "BaseTemplate"
    character_mod {
      stats {
        body: 2
        quickness: 1
        strength: 1
        charisma: 1
        intelligence: 1
        willpower: 1
        essence: 1
        magic: 1
        hp: 0
        ap: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
    }
    team_id: "Inmates"
    char_name: "Lorraine"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 1
    y: 0
    z: -4
  }
  orientation: ORIENTATION_E
  displayName: "Front Guard"
  idRef {
    id: "196d6d87623331f417001a37"
  }
  lod: 0
  character_instance {
    prefab_name: "HumanMaleLonestarSecurityGuard"
    character_sheet_id: "Lonestar_Lv3_Human_Pistol"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
    }
    team_id: "Inmates"
    char_name: "Hospital Guard"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -20
    y: 0
    z: -3
  }
  orientation: ORIENTATION_S
  displayName: "Hall Guard"
  idRef {
    id: "1dfe955c62333104190019d3"
  }
  lod: 0
  character_instance {
    prefab_name: "HumanMaleLonestarSecurityGuard"
    character_sheet_id: "Lonestar_Lv3_Human_Pistol"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Guard - Protect"
    }
    equipment {
      prefab_name: "Pi 1 Fichetti Security 500"
    }
    equipment {
      prefab_name: "Grenade 1 (Flash)"
    }
    team_id: "Inmates"
    char_name: "Hospital Guard"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
  }
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: 3
    y: 0
    z: -16
  }
  orientation: ORIENTATION_E
  idRef {
    id: "1e1f41bd623331381a0018cc"
  }
  lod: 0
  character_instance {
    character_mod {
      archetypeName: "Player"
    }
    team_id: "Shadowrunners"
    char_name: "New Actor"
    pc_spawn_number: 0
  }
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: 4
    y: 0
    z: -17
  }
  orientation: ORIENTATION_E
  idRef {
    id: "1e1f6c5a623331381a0018cd"
  }
  lod: 0
  character_instance {
    character_mod {
      archetypeName: "Player"
    }
    team_id: "Shadowrunners"
    char_name: "New Actor"
    pc_spawn_number: 1
  }
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: 3
    y: 0
    z: -18
  }
  orientation: ORIENTATION_E
  idRef {
    id: "1e1f74df623331381a0018ce"
  }
  lod: 0
  character_instance {
    character_mod {
      archetypeName: "Player"
    }
    team_id: "Shadowrunners"
    char_name: "New Actor"
    pc_spawn_number: 2
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -17
    y: 0
    z: -22
  }
  orientation: ORIENTATION_S
  displayName: "Turnbased"
  idRef {
    id: "21df525d6233319c1f0018c5"
  }
  lod: 0
  character_instance {
    prefab_name: "Lonestar/HumanMaleLonestarSecurityGuard"
    character_sheet_id: "Lonestar_Lv3_Human_Pistol"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Guard - Protect"
    }
    equipment {
      prefab_name: "Pi 1 Fichetti Security 500"
    }
    equipment {
      prefab_name: "Grenade 1 (Flash)"
    }
    team_id: "Inmates"
    char_name: "Computer"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 52
  }
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: 2
    y: 0
    z: -17
  }
  orientation: ORIENTATION_E
  idRef {
    id: "229bd081623331641b0018bf"
  }
  lod: 0
  character_instance {
    character_mod {
      archetypeName: "Player"
    }
    team_id: "Shadowrunners"
    char_name: "New Actor"
    pc_spawn_number: 3
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -92
    y: 0
    z: -29
  }
  orientation: ORIENTATION_N
  GeneralTags: "Node1"
  idRef {
    id: "6629abd1623331c00b00603b"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Matrix/MatrixICE_white_melee"
    character_sheet_id: "IC_Lv2_White_Ranged"
    equipment_sheet_id: "IC White Melee Low"
    character_mod {
      stats {
        hp: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Security"
    char_name: "White IC"
    GeneralTags: "Node1"
    enabled_at_start: false
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "matrix"
    karma: 31
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -97
    y: 0
    z: -30
  }
  orientation: ORIENTATION_S
  GeneralTags: "Node1"
  idRef {
    id: "6629e258623331c00b00603c"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Matrix/MatrixICE_white_range"
    character_sheet_id: "IC_Lv2_White_Ranged"
    equipment_sheet_id: "IC White Ranged Low"
    character_mod {
      stats {
        hp: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Security"
    char_name: "White IC"
    GeneralTags: "Node1"
    enabled_at_start: false
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "matrix"
    karma: 31
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -98
    y: 0
    z: 14
  }
  orientation: ORIENTATION_W
  GeneralTags: "Node2"
  idRef {
    id: "662a4830623331c00b00603e"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Matrix/MatrixICE_white_range"
    character_sheet_id: "IC_Lv2_White_Ranged"
    equipment_sheet_id: "IC White Ranged Low"
    character_mod {
      stats {
        hp: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Security"
    char_name: "White IC"
    GeneralTags: "Node2"
    enabled_at_start: false
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "matrix"
    karma: 31
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -5
    y: 0
    z: -9
  }
  orientation: ORIENTATION_E
  idRef {
    id: "51ace301623331c813002cfa"
  }
  lod: 0
  character_instance {
    prefab_name: "Story/HowardHenryHolmes"
    character_sheet_id: "Boss_Holmes"
    equipment_sheet_id: "Boss_Holmes_Gear"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeBoss
      attackRandom: AttackStyle_AllEqual
    }
    team_id: "Inmates"
    char_name: "Dr. Holmes"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "NPC_ElfMale_Holmes"
    }
    karma: 144
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 1
    y: 0
    z: 11
  }
  orientation: ORIENTATION_E
  idRef {
    id: "51c4d958623331881e004db8"
  }
  lod: 0
  character_instance {
    prefab_name: "Extras/HumanMaleMentalPatientStraightJacket"
    character_sheet_id: "BaseTemplate"
    character_mod {
      stats {
        body: 2
        quickness: 1
        strength: 1
        charisma: 1
        intelligence: 1
        willpower: 1
        essence: 1
        magic: 1
        hp: 0
        ap: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeCautious
    }
    team_id: "Inmates"
    char_name: "Patient"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 8
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -28
    y: 0
    z: -3
  }
  orientation: ORIENTATION_S
  idRef {
    id: "51c4e017623331a419006df2"
  }
  lod: 0
  character_instance {
    prefab_name: "Extras/TrollMaleMentalPatientStraightJacketCreme"
    character_sheet_id: "BaseTemplate"
    character_mod {
      stats {
        body: 2
        quickness: 1
        strength: 1
        charisma: 1
        intelligence: 1
        willpower: 1
        essence: 1
        magic: 1
        hp: 0
        ap: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeCautious
    }
    team_id: "Inmates"
    char_name: "Troll Patient"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 8
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -92
    y: 0
    z: 14
  }
  orientation: ORIENTATION_W
  GeneralTags: "Node2"
  idRef {
    id: "51d496ba623331cc090054ed"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Matrix/SpiritESPAssassin"
    character_sheet_id: "IC_Lv3_White_Ranged"
    equipment_sheet_id: "IC White ChargeLaser Mid"
    character_mod {
      stats {
        hp: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Security"
    char_name: "White Sparky IC"
    GeneralTags: "Node2"
    enabled_at_start: false
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "matrix"
    karma: 33
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "FrontDesk"
    typeName: "int"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Patient1QuestionA"
    typeName: "int"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Patient1QuestionB"
    typeName: "int"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Patient1QuestionC"
    typeName: "int"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "InfirmaryKey"
    typeName: "int"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "SecurityKey"
    typeName: "int"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "FoundArm"
    typeName: "int"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "ReadInfirmaryComputer"
    typeName: "int"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "BathroomKey"
    typeName: "int"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Lockdown"
    typeName: "int"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Node1"
    typeName: "int"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Node2"
    typeName: "int"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "FrontDeskRunAway"
    typeName: "int"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "hasReturnedToLorraine"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "hasConfrontedHolmes"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "isLookingForArm"
    typeName: "bool"
  }
}
mapEvents: "Lockdown"
senseTags: "FoundTrivid3"
senseTags: "isShannon"
goals {
  name: "Investigate Mercy Mental Hospital"
  type: GoalType_Primary
  status: GoalStatus_Started
}
goals {
  name: "Look Around Before Holmes Arrives"
  type: GoalType_Primary
  status: GoalStatus_Hidden
}
goals {
  name: "Speak to Dr. Holmes"
  type: GoalType_Primary
  status: GoalStatus_Hidden
}
goals {
  name: "You died."
  type: GoalType_Primary
  status: GoalStatus_Hidden
}
worldMapLocation {
  filename: ""
  location {
    x: 0
    y: 0
  }
}
mapName: "c12-s1_MercyMental"
parentStory: ""
scene_title: "MERCY MENTAL HOSPITAL"
scene_subtitle: ""
scene_synopsis: "The blood you found at the warehouse belongs to a man masquerading as one Dr. Holmes, and you\342\200\231ve tracked him to Mercy Mental Hospital - located in the notoriously anti-metahuman farmlands of Snohomish. The drive to the hospital is long and unpleasant. Finally, you reach the walled and gated hospital compound. \n\nDespite the pretense of security, the gate is unguarded, unlocked, and open. No one stops or greets you as you drive up to the large, crumbling building. Gothic ramparts top a damaged roof, cracked walls, and broken windows. All around the building is a lawn gone wild. Only the artificial light from within speaks of inhabitants.\n\nYou walk up the hospital steps to confront Sam Watt\342\200\231s killer and bring an end to the Emerald City Ripper."
scene_image: "loadingImage_c12-s1"
scene_continue_button_skip: false
scene_restore_runner_health: true
directional_light_dir {
  x: -0.5
  y: -0.25
  z: -1
}
directional_light_color {
  r: 0.35686275
  g: 0.49019608
  b: 0.29803923
}
ambient_light_color {
  r: 0.1254902
  g: 0.21568628
  b: 0.082352944
}
allow_drawn_weapons: false
team_affiliations {
  team_name: "Shadowrunners"
  affiliation: 0
  affiliation: 0
  affiliation: 1
  affiliation: 0
}
team_affiliations {
  team_name: "Cameras"
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
}
team_affiliations {
  team_name: "Security"
  affiliation: 1
  affiliation: 0
  affiliation: 0
  affiliation: 0
}
team_affiliations {
  team_name: "Inmates"
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
}
scene_dimensions {
  dimension_name: "Default"
}
scene_dimensions {
  dimension_name: "matrix"
  initial_alarm_state: 100
  turns_per_round: 3
}
ambience_template: "asylum-busy"
combat_music: "Seattle-Set3-Combat"
matrix_music: "Seattle-Set8-Stealth"
character_roster {
}
show_hiring_screen_on_scene_load: false
scene_hiring_prerequisites {
  prereq_description: ""
  prereq_conditions {
  }
}
hiring_slot_count: 3
hiring_minimum_karma: 3
hiring_maximum_karma: 3
hire_from_content_pack: "518d7672643431b03f0041aa"
roster_overrides {
  roster_entries {
    reference_id: "Story_Shaman_c12"
    hiring_conditions {
    }
    hiring_cost: -1
    content_pack_source: "518d7674643431b03f0041ab"
  }
}
use_hiring_cost_warning: false
hiring_average_cost: 0
override_hiring_average_cost: false
show_equip_screen_on_scene_load: true
can_move_outside_camera_regions: true
can_start_before_triggers: true
